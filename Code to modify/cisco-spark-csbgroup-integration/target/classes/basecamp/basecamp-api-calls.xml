<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
  	
  	
     
    <flow name="postBasecampTokenFlow">
        <logger message="#[payload.authSettings.code] &amp;&amp; ${basecamp.integration.redirect.uri}" level="INFO" doc:name="Logger"/>

        
        <http:request config-ref="HTTP_Request_Configuration2" path="${basecamp.api.access.token.path}" method="POST" doc:name="HTTP">
        	<http:request-builder>
                <http:query-param paramName="type" value="web_server"/>
                <http:query-param paramName="client_id" value="${basecamp.integration.client.id}"/>
                <http:query-param paramName="client_secret" value="${basecamp.integration.client.secret}"/>
                <http:query-param paramName="redirect_uri" value="${basecamp.integration.redirect.uri}"/>
                <http:query-param paramName="code" value="#[payload.authSettings.code]"/>


            </http:request-builder>

        </http:request>
        <logger message="token response#[message.payloadAs(java.lang.String)]" level="DEBUG" doc:name="Logger"/>
        
        <flow-ref name="checkResponseStatusCodeFlow" doc:name="checkResponseStatusCodeFlow"/>
        
        <dw:transform-message doc:name="Transform Response to Java">
        <dw:input-payload mimeType="application/json"/>
        
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="getBasecampAuthorizationFlow">
        <http:request config-ref="HTTP_Request_Configuration" path="/authorization.json" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.status'==200]">
                <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload mimeType="application/json"/>
                    <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="accountInfo"/>
                </dw:transform-message>
            </when>
            <when expression="#[message.inboundProperties.'http.status'==401]">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="dwScripts/buildCheckTokenValidity.dwl"/>
                </dw:transform-message>
                <set-variable variableName="validtoken" value="#[json:isValidToken]" doc:name="Variable"/>
            </when>
            <when expression="#[message.inboundProperties.'http.status'==404]">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="dwScripts/buildCheckAccountExpiry.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="working" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="getBasecampUserFlow">
    	 <http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/my/profile.json" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
                <http:header headerName="Content-Type" value="application/json"/>



            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>

        </http:request>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.status' ==200]">
                <logger message="Users: #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <flow-ref name="checkResponseStatusCodeFlow" doc:name="checkResponseStatusCodeFlow"/>
                <dw:transform-message doc:name="Transform Response to Java">
                <dw:input-payload mimeType="application/json"/>
                    <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
                </dw:transform-message>
            </when>
            <when expression="#[message.inboundProperties.'http.status' ==404]">
                <set-variable variableName="isAccountExpired" value="true" doc:name="Variable"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/saveIsAccountExpirevalue.dwl"/>

                </dw:transform-message>
            </when>
            <when expression="#[message.inboundProperties.'http.status' ==401]">
                <set-variable variableName="isValidToken" value="false" doc:name="Variable"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/saveIsValidTokenValue.dwl"/>

                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="No action found" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>

    </flow>


    
	<flow name="getBasecampProjectsFlow">
        <logger message="/#[flowVars.accountInfo.accounts[0].id]/projects.json" level="INFO" doc:name="Logger"/>
    	 <http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/projects.json" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="page" value="#[flowVars['pageValues']]"/>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>



            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>

        </http:request>
        <logger message="After Http Call:::::::::#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.status' ==200]">
                <flow-ref name="checkResponseStatusCodeFlow" doc:name="checkResponseStatusCodeFlow"/>
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload mimeType="application/json"/>
                    <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="projectsResponse"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="working" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>


    </flow>
    
    <flow name="postBasecampHookFlow">
        <set-payload value="#[flowVars.hookPostBody]" mimeType="application/json" doc:name="Set Payload"/>
        <logger message="hookBody :#[payload]" level="DEBUG" doc:name="Logger"/>


        <http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/buckets/#[flowVars.projectId]/webhooks.json" method="POST" doc:name="HTTP">
           <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
                <http:header headerName="Content-Type" value="application/json"/>
				</http:request-builder>
           <http:failure-status-code-validator values="500..599"/>
       </http:request>
        <logger message="webhookpayload #[message.payloadAs(java.lang.String)] " level="DEBUG" doc:name="Logger"/>

       
       <flow-ref name="checkResponseStatusCodeFlow" doc:name="Check Response Status Code Flow Reference"/>

       
       <dw:transform-message doc:name="Transform Response to Java">
       <dw:input-payload mimeType="application/json"/>
           <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
       </dw:transform-message>
   </flow>

    
    
    <flow name="putBasecampHookFlow">
        <set-payload value="#[flowVars.hookPostBody]" mimeType="application/json" doc:name="Set Payload"/>
        <logger message="payload putbasecamp flow #[payload]  &amp;&amp; #[flowVars.projectId]" level="INFO" doc:name="Logger"/>

        
    	<http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/buckets/#[flowVars.projectId]/webhooks/#[flowVars.webhookId].json" method="PUT" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>


            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        
        <flow-ref name="checkResponseStatusCodeFlow" doc:name="Check Response Status Code Flow Reference"/>
        
        <dw:transform-message doc:name="Transform Response to Java">
        <dw:input-payload mimeType="application/json"/>
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="deleteBasecampHookFlow">

    	 <http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/buckets/#[flowVars.projectIdOld]/webhooks/#[flowVars.webhookId].json" method="DELETE" doc:name="HTTP ">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>



            </http:request-builder>

        </http:request>
        
        <flow-ref name="checkResponseStatusCodeFlow" doc:name="Check Response Status Code Flow Reference"/>
        
        <dw:transform-message doc:name="Build Delete Bitbucket Hook Response ">
            <dw:set-payload resource="classpath:dwScripts/buildDeleteBasecampHookResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    
    <flow name="getBasecampHookFlow">
    	 <http:request config-ref="HTTP_Request_Configuration1" path="/#[flowVars.accountInfo.accounts[0].id]/buckets/#[flowVars['projectId']]/webhooks/#[flowVars['hookId']].json" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>


            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        
        <flow-ref name="checkResponseStatusCodeFlow" doc:name="checkResponseStatusCodeFlow"/>
        
        <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="checkResponseStatusCodeFlow">
        <validation:is-true config-ref="Validation_Configuration" expression="#[message.inboundProperties.'http.status' != 401 &amp;&amp; message.inboundProperties.'http.status' != 429]" doc:name="Validation"/>
    </flow>
</mule>
