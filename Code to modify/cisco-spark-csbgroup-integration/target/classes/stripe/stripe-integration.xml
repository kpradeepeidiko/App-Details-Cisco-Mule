<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:CiscoSpark="http://www.mulesoft.org/schema/mule/CiscoSpark" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/CiscoSpark http://www.mulesoft.org/schema/mule/CiscoSpark/current/mule-CiscoSpark.xsd">
    <http:request-config name="HTTP_Runtime_Request_Configuration" protocol="HTTPS" host="${integrations.runtime.host}" port="${integrations.runtime.port}" basePath="${integrations.runtime.path}" doc:name="HTTP Request Configuration"/>

	<flow name="postFormatMessageFlow1">
        <dw:transform-message metadata:id="16db4717-7738-482e-a489-7aed77630932" doc:name="Build Post Format Message Request">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable variableName="response" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <logger message="#[flowVars.response]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.response.hookResponse.type=='customer.created']">
                <set-variable variableName="postMessage" value="New customer [#[flowVars['response']['hookResponse']['data']['object']['email']]](https://dashboard.stripe.com/test/customers/#[flowVars['response']['hookResponse']['data']['object']['id']]) created" doc:name="CUSTOMER-CREATE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='customer.deleted']">
                <set-variable variableName="postMessage" value="Customer [#[flowVars['response']['hookResponse']['data']['object']['email']]](https://dashboard.stripe.com/test/customers/#[flowVars['response']['hookResponse']['data']['object']['id']]) deleted" doc:name="CUSTOMER-DELETE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='customer.updated']">
                <set-variable variableName="postMessage" value="Customer [#[flowVars['response']['hookResponse']['data']['object']['email']]](https://dashboard.stripe.com/test/customers/#[flowVars['response']['hookResponse']['data']['object']['id']]) updated" doc:name="CUSTOMER-UPDATE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='coupon.created']">
                <set-variable variableName="postMessage" value="New coupon ID [#[flowVars['response']['hookResponse']['data']['object']['id']]](https://dashboard.stripe.com/test/coupons/#[flowVars['response']['hookResponse']['data']['object']['id']]) was created" doc:name="COUPON-CREATE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='charge.succeeded']">
                <choice doc:name="Choice">
                    <when expression="#[flowVars.response.hookResponse.data.object.source.name !=null]">
                        <set-variable variableName="postMessage" value=" $#[flowVars['response']['hookResponse']['data']['object']['amount']] #[flowVars['response']['hookResponse']['data']['object']['currency']] charged to [#[flowVars['response']['hookResponse']['data']['object']['source']['name']]](https://dashboard.stripe.com/test/payments/#[flowVars.response.hookResponse.data.object.id])" doc:name="PAYMENT-CREATION"/>
                    </when>
                    <when expression="#[flowVars.response.hookResponse.data.object.source.name ==null]">
                        <set-variable variableName="postMessage" value="$#[flowVars.response.hookResponse.data.object.amount] #[flowVars.response.hookResponse.data.object.currency] charged" doc:name="PAYMENT-CREATION"/>
                    </when>
                    <otherwise>
                        <logger message="No event matched" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='charge.refunded']">
                <choice doc:name="Choice">
                    <when expression="#[flowVars.response.hookResponse.data.object.source.name !=null]">
                        <set-variable variableName="postMessage" value=" $#[flowVars['response']['hookResponse']['data']['object']['amount']] #[flowVars['response']['hookResponse']['data']['object']['currency']] refunded to [#[flowVars['response']['hookResponse']['data']['object']['source']['name']]](https://dashboard.stripe.com/test/payments/#[flowVars['response']['hookResponse']['data']['object']['id']])" doc:name="PAYMENT-REFUND"/>
                    </when>
                    <when expression="#[flowVars.response.hookResponse.data.object.source.name==null]">
                        <set-variable doc:name="PAYMENT-REFUND" value="$#[flowVars.response.hookResponse.data.object.amount] #[flowVars.response.hookResponse.data.object.currency] refunded " variableName="postMessage"/>
                    </when>
                    <otherwise>
                        <logger message="no event matched" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='plan.created']">
                <logger message="**New plan created** \n        Plan **[#[flowVars.response.hookResponse.data.object.name]](https://dashboard.stripe.com/test/plans/#[flowVars.response.hookResponse.data.object.id])**  created" level="INFO" doc:name="Logger"/>
                <set-variable variableName="postMessage" value="New plan [#[flowVars['response']['hookResponse']['data']['object']['name']]](https://dashboard.stripe.com/test/plans/#[flowVars['response']['hookResponse']['data']['object']['id'].replaceAll(' ','%20')]) created" doc:name="PLAN-CREATE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='product.created']">
                <logger message="**New product**  \n        Product **[#[flowVars.response.hookResponse.data.object.name]](https://dashboard.stripe.com/test/products/#[flowVars.response.hookResponse.data.object.id])** created" level="INFO" doc:name="Logger"/>
                <set-variable variableName="postMessage" value="New product [#[flowVars['response']['hookResponse']['data']['object']['name']]](https://dashboard.stripe.com/test/products/#[flowVars['response']['hookResponse']['data']['object']['id']]) ordered" doc:name="PRODUCT-CREATE"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.type=='product.deleted']">
                <logger message="**Product deleted**  \n        Product **#[flowVars.response.hookResponse.data.object.name]** deleted" level="INFO" doc:name="PRODUCT-DELETE"/>
                <set-variable variableName="postMessage" value=" Product **#[flowVars['response']['hookResponse']['data']['object']['name']]** order cancelled" doc:name="PRODUCT-DELETE"/>
            </when>
            <otherwise>
                <logger message="NO EVENT WAS SELECTED" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Build Post Format Message Response">
 				<dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
        </dw:transform-message>
        
    </flow>
        
    <flow name="postIntegrationSettingsFlow1">
    	<dw:transform-message doc:name="Transform Payload to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <logger message="Hit" level="INFO" doc:name="Logger"/>
        <enricher target="#[flowVars.webhook]" doc:name="Message Enricher">
            <flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/>
        </enricher>
        
        <dw:transform-message doc:name="Build Get Integration Settings Response">
            <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="setupIntegrationFlow1">
        <dw:transform-message doc:name="Build Setup Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="updateIntegrationFlow1">
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <enricher target="#[flowVars.updateIntegrationResponse]" doc:name="Message Enricher">
            <flow-ref name="updateStripeIntegrationFlow" doc:name="updateStripeIntegrationFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Update Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildStripeUpdateIntegrationResponseExample.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="tearDownIntegrationFlow1">
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildStripeTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="healthCheckFlow1">
    <object-to-string-transformer doc:name="Object to String"/><json:object-to-json-transformer doc:name="Object to JSON"/>
    <dw:transform-message doc:name="Transform Message To Java">
    <dw:set-variable variableName="healthCheckRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable></dw:transform-message>
    <enricher target="#[flowVars.webhookResponse]" doc:name="Message Enricher"><flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/></enricher>
        <set-variable variableName="name" value="Stripe" doc:name="Variable"/>
    <http:request config-ref="HTTP_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get Integration Instance">
    <http:request-builder>
                <http:query-param paramName="integrationId" value="#[flowVars.healthCheckRequest.integrationId]"/>
                <http:query-param paramName="userId" value="#[flowVars.healthCheckRequest.userId]"/>
                <http:query-param paramName="status" value="ACTIVE"/>
</http:request-builder></http:request>
    <dw:transform-message doc:name="Transform Message">
    	<dw:set-variable variableName="instanceDetails" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
	</dw:transform-message>
	<choice doc:name="Choice"><when expression="#[flowVars.instanceDetails.toString() !='{message=No results}']">
	<dw:transform-message doc:name="Transform Message">
	<dw:set-payload resource="classpath:dwScripts/buildConfigJson.dwl"/>
	</dw:transform-message>
	<set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
	<dw:transform-message doc:name="Transform Message">
	<dw:set-variable variableName="configJsonDetails" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
	</dw:transform-message>
	<dw:transform-message doc:name="Build Health Check Response">
	<dw:set-payload resource="classpath:dwScripts/buildStripeHealthCheckResponse.dwl"/></dw:transform-message></when>
	<otherwise>
	<dw:transform-message doc:name="Build Health Check Response">
	<dw:set-payload resource="classpath:dwScripts/buildStripeHealthCheckResponse.dwl"/>
	</dw:transform-message>
		</otherwise>
	</choice>
	<catch-exception-strategy doc:name="Catch Exception Strategy" enableNotifications="false" logException="false">
<set-variable variableName="healthCheckException" value="#[exception.message]" doc:name="HealthCheckException"/>
<dw:transform-message doc:name="Transform Message">
<dw:set-payload resource="classpath:dwScripts/healthCkeckExceptionOutput.dwl"/>
</dw:transform-message>
</catch-exception-strategy>
</flow>
    
</mule>
