<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:basecamp-integration.xml"/>
        <spring:import resource="classpath:Global.xml"/>
        <spring:import resource="classpath:basecamp-api-calls.xml"/>
        <spring:import resource="classpath:integration-token-operations.xml"/>
        <spring:import resource="classpath:core-services-invocations.xml"/>
    </spring:beans>
    <munit:test name="basecamp-integration-test-suite-postAuthDetailsFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue=" #['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="{&quot;integrationId&quot;:&quot;20&quot;,&quot;authSettings&quot;:{&quot;code&quot;: &quot;82c6666bec4f4ce5dd60&quot;}}" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="AA#[payload]" level="INFO" doc:name="Logger"/>
        <flow-ref name="postAuthDetailsFlow" doc:name="postAuthDetailsFlow"/>
        <set-variable variableName="error" value="#[payload]" doc:name="Variable"/>
        <munit:assert-true message="Expected accesstoken but output is #[payload]" condition="#[flowVars.error != null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postIntegrationSettingsFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---

	{
	"integrationId":"20",
	"userId":"Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI"
}
]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postIntegrationSettingsFlow" doc:name="Flow-ref to postIntegrationSettingsFlow"/>
        <set-variable variableName="error" value="#[payload]" doc:name="Variable"/>
        <munit:assert-true message="Expected lists but output is #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-setupIntegrationFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"instanceId": 5658,
	"integrationId": "20",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-09-28T01:41:47",
	"messageFormat": null,
	"createdDate": "2016-09-28T01:41:46",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
	"configJson": {
		"project_id ": "269163303",
		"displayName ": "basecamp1",
		"notifications": ["todo", "todolist"]
			},
	"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
}
]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="setupIntegrationFlow" doc:name="Flow-ref to setupIntegrationFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="Expected webhook data bit output #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-updateIntegrationFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"instance_id": 5658,
	"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-09-28T01:41:47",
	"messageFormat": null,
	"createdDate": "2016-09-28T01:41:46",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
	"list_modified":true,
	"configJson":{
		"list_id":"260531636",
		"displayName ": "basecamp1",
		"notifications": ["task-added ", "task-completed"],
		"webhook_id":2287597
	},
	"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
}
]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="updateIntegrationFlow" doc:name="Flow-ref to updateIntegrationFlow"/>
        <set-variable variableName="error" value="#[payload]" doc:name="Variable"/>
        <munit:assert-true message="expected webhook creation but #[payload]" condition="#[flowVars.error !=empty]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-tearDownIntegrationFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---

{
	"instanceId": 5658,
	"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-09-28T01:41:47",
	"messageFormat": null,
	"createdDate": "2016-09-28T01:41:46",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
	"project_modified": false,
	"configJson": {
		"list_id ": "260531636",
		"displayName ": "basecamp1",
		"notifications": ["task-added ", "task-completed"],
		"webhook_id":"2300555"
	},
	"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="tearDownIntegrationFlow" doc:name="Flow-ref to tearDownIntegrationFlow"/>
        <logger message="DDDDDDDDDDDD#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected a message" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-healthCheckFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integrationId":"Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
	"userId":"Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI"
}

]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="healthCheckFlow" doc:name="Flow-ref to healthCheckFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected flow completion but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
		"cause": null,
		"operation": "update",
		"client": {
			"id": "498d3ffc44ddfa2f275b",
			"request_id": "6f1b65b6-1d2c-4775-9060-517a-a09c5d0b",
			"device_id": "38d3e75a-fe2b-4ca6-930d-35652aa40fdf",
			"instance_id": "d4b4ecac-9665-43bb-a61e-561c-9f5d940c",
			"user_id": "26577418"
		},
		"type": "mutation",
		"enqueued_at": 1475564551.7397873,
		"after": {
			"created_by_id": 26577418,
			"due_date": "2016-10-05",
			"updated_by_id": 26577418,
			"revision": 26,
			"starred": false,
			"completed": false,
			"is_recurrence_child": false,
			"title": "DevelopmentTask",
			"updated_at": "2016-10-04T07:02:31.726Z",
			"created_by_request_id": "498d3ffc44ddfa2f275b:38d3e75a-fe2b-4ca6-930d-35652aa40fdf:d4b4ecac-9665-43bb-a61e-561c-9f5d940c:26577418:lw07013f594e30fb9cccdf320677a59c",
			"id": 2180174420,
			"list_id": 269163303,
			"created_at": "2016-10-04T06:18:11.125Z"
		},
		"version": 1,
		"before": {
			"created_by_id": 26577418,
			"updated_by_id": 26577418,
			"revision": 25,
			"starred": false,
			"completed": false,
			"is_recurrence_child": false,
			"title": "DevelopmentTask",
			"updated_at": "2016-10-04T07:02:27.448Z",
			"created_by_request_id": "498d3ffc44ddfa2f275b:38d3e75a-fe2b-4ca6-930d-35652aa40fdf:d4b4ecac-9665-43bb-a61e-561c-9f5d940c:26577418:lw07013f594e30fb9cccdf320677a59c",
			"id": 2180174420,
			"list_id": 269163303,
			"created_at": "2016-10-04T06:18:11.125Z"
		},
		"subject": {
			"id": 2180174420,
			"type": "task",
			"revision": 26,
			"previous_revision": 25,
			"parents": [{
				"id": 269163303,
				"type": "list"
			}]
		},
		"data": {
			"updated_at": "2016-10-04T07:02:31.726Z",
			"due_date": "2016-10-05",
			"revision": 26
		},
		"user_id": 26577418
	},
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow1"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error != null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest1" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "create",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "lw926d96e65287d5986c5bbbfa2987c3",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470118893.2385504,
	"after": {
		"created_by_id": 24393923,
		"revision": 1,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:21:33.227Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"version": 1,
	"before": {
		"revision": 0
	},
	"subject": {
		"id": 2025074460,
		"type": "task",
		"revision": 1,
		"previous_revision": 0,
		"parents": [{
			"id": 260237042,
			"type": "list"
		}]
	},
	"data": {
		"created_by_id": 24393923,
		"revision": 1,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:21:33.227Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"user_id": 24393923
},
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest2" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "0404c6d4-839f-45e1-849a-b412-52ff5689",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1469778427.423231,
	"after": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 2,
		"starred": false,
		"completed_at": "2016-07-29T07:47:07.410Z",
		"completed": true,
		"is_recurrence_child": false,
		"title": "ghjgjh",
		"updated_at": "2016-07-29T07:47:07.413Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1c4e97506e19c46bb5d5ae55ed4081",
		"id": 2016171120,
		"completed_by_id": 24393923,
		"list_id": 258921073,
		"created_at": "2016-07-29T07:46:07.207Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"revision": 1,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "ghjgjh",
		"updated_at": "2016-07-29T07:46:07.207Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1c4e97506e19c46bb5d5ae55ed4081",
		"id": 2016171120,
		"list_id": 258921073,
		"created_at": "2016-07-29T07:46:07.207Z"
	},
	"subject": {
		"id": 2016171120,
		"type": "task",
		"revision": 2,
		"previous_revision": 1,
		"parents": [{
			"id": 258921073,
			"type": "list"
		}]
	},
	"data": {
		"completed": true,
		"completed_at": "2016-07-29T07:47:07.410Z",
		"completed_by_id": 24393923,
		"updated_at": "2016-07-29T07:47:07.413Z",
		"updated_by_id": 24393923,
		"revision": 2
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error != null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest3" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "045b3a36-4588-4423-9d63-973c-4463d1fa",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470118976.5651228,
	"after": {
		"created_by_id": 24393923,
		"due_date": "2016-08-02",
		"updated_by_id": 24393923,
		"revision": 10,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "ber",
		"updated_at": "2016-08-02T06:22:56.549Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lwa144c65d5397de74e5c70d283aa65d",
		"id": 2023324687,
		"list_id": 260237042,
		"created_at": "2016-08-01T14:11:04.505Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"due_date": "2016-08-02",
		"updated_by_id": 24393923,
		"revision": 9,
		"starred": false,
		"completed_at": "2016-08-02T06:14:26.247Z",
		"completed": true,
		"is_recurrence_child": false,
		"title": "ber",
		"updated_at": "2016-08-02T06:14:26.250Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lwa144c65d5397de74e5c70d283aa65d",
		"id": 2023324687,
		"completed_by_id": 24393923,
		"list_id": 260237042,
		"created_at": "2016-08-01T14:11:04.505Z"
	},
	"subject": {
		"id": 2023324687,
		"type": "task",
		"revision": 10,
		"previous_revision": 9,
		"parents": [{
			"id": 260237042,
			"type": "list"
		}]
	},
	"data": {
		"completed": false,
		"updated_at": "2016-08-02T06:22:56.549Z",
		"revision": 10,
		"remove": ["completed_at", "completed_by_id"]
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest4" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"cause": null,
	"operation": "create",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "lw7cf002fbf3c815009be48bf03ec2be",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470119164.3618631,
	"after": {
		"created_by_id": 24393923,
		"revision": 1,
		"completed": false,
		"title": "gvvhv",
		"updated_at": "2016-08-02T06:26:04.355Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw7cf002fbf3c815009be48bf03ec2be",
		"id": 1290913600,
		"task_id": 2022320062,
		"created_at": "2016-08-02T06:26:04.355Z"
	},
	"version": 1,
	"before": {
		"revision": 0
	},
	"subject": {
		"id": 1290913600,
		"type": "subtask",
		"revision": 1,
		"previous_revision": 0,
		"parents": [{
			"id": 2022320062,
			"type": "task"
		}]
	},
	"data": {
		"remove": ["parent_id", "previous_revision"],
		"created_by_id": 24393923,
		"revision": 1,
		"completed": false,
		"title": "gvvhv",
		"updated_at": "2016-08-02T06:26:04.355Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw7cf002fbf3c815009be48bf03ec2be",
		"id": 1290913600,
		"task_id": 2022320062,
		"created_at": "2016-08-02T06:26:04.355Z"
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest5" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "create",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "lw419a447e1436f22a8775d57126c3b2",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470119333.1113534,
	"after": {
		"id": 143175686,
		"content": "YTREWQQ",
		"revision": 1,
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw419a447e1436f22a8775d57126c3b2",
		"task_id": 2022320062
	},
	"version": 1,
	"before": {
		"revision": 0
	},
	"subject": {
		"id": 143175686,
		"type": "note",
		"revision": 1,
		"previous_revision": 0,
		"parents": [{
			"id": 2022320062,
			"type": "task"
		}]
	},
	"data": {
		"id": 143175686,
		"content": "YTREWQQ",
		"revision": 1,
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw419a447e1436f22a8775d57126c3b2",
		"task_id": 2022320062
	},
	"user_id": 24393923
},
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest6" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "25568fc0-a5f5-45d9-a533-7912-90619792",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470121377.555208,
	"after": {
		"id": 143178757,
		"content": "gshvbdhcb",
		"revision": 4,
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw201d8a20fbcf2d269881f79f36f233",
		"task_id": 2016105085
	},
	"version": 1,
	"before": {
		"id": 143178757,
		"content": "dfdgfhg",
		"revision": 3,
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw201d8a20fbcf2d269881f79f36f233",
		"task_id": 2016105085
	},
	"subject": {
		"id": 143178757,
		"type": "note",
		"revision": 4,
		"previous_revision": 3,
		"parents": [{
			"id": 2016105085,
			"type": "task"
		}]
	},
	"data": {
		"content": "gshvbdhcb",
		"revision": 4
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest7" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"cause": null,
	"operation": "create",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "lwc36c8a857649efc2f08b57d2e4460f",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470119454.0774136,
	"after": {
		"file_name": "Demo1.txt",
		"file_provider": "s3",
		"created_by_id": 24393923,
		"revision": 1,
		"type": "file",
		"file_size": 19,
		"local_created_at": "2016-08-02T06:30:51.000Z",
		"content_type": "text/plain; charset=utf-8",
		"updated_at": "2016-08-02T06:30:54.067Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lwc36c8a857649efc2f08b57d2e4460f",
		"upload_id": 68942815,
		"id": 15500658,
		"task_id": 2022320062,
		"url": "https://download.basecamp.io/94d1c040-3aa8-0134-2943-22000b0d6698-1470119451-464537?AWSAccessKeyId=AKIAJEN6W4AO3LJODOAA&Expires=1472797854&Signature=BBkYHNCQe0BxFqXzEUyX7s12224%3D",
		"user_id": 24393923,
		"created_at": "2016-08-02T06:30:53.958Z"
	},
	"version": 1,
	"before": {
		"revision": 0
	},
	"subject": {
		"id": 15500658,
		"type": "file",
		"revision": 1,
		"previous_revision": 0,
		"parents": [{
			"id": 2022320062,
			"type": "task"
		}]
	},
	"data": {
		"file_name": "Demo1.txt",
		"file_provider": "s3",
		"remove": ["key", "safe_file_name", "previous_revision", "remote_url", "remote_url_expires_at"],
		"created_by_id": 24393923,
		"revision": 1,
		"type": "file",
		"file_size": 19,
		"local_created_at": "2016-08-02T06:30:51.000Z",
		"content_type": "text/plain; charset=utf-8",
		"updated_at": "2016-08-02T06:30:54.067Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lwc36c8a857649efc2f08b57d2e4460f",
		"upload_id": 68942815,
		"id": 15500658,
		"task_id": 2022320062,
		"url": "https://download.basecamp.io/94d1c040-3aa8-0134-2943-22000b0d6698-1470119451-464537?AWSAccessKeyId=AKIAJEN6W4AO3LJODOAA&Expires=1472797854&Signature=BBkYHNCQe0BxFqXzEUyX7s12224%3D",
		"user_id": 24393923,
		"created_at": "2016-08-02T06:30:53.958Z"
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest8" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "fac6a5d8-a012-4e43-b956-7dcc-d5309ff6",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470119735.2745361,
	"after": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 2,
		"starred": true,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:35:35.257Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"revision": 1,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:21:33.227Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"subject": {
		"id": 2025074460,
		"type": "task",
		"revision": 2,
		"previous_revision": 1,
		"parents": [{
			"id": 260237042,
			"type": "list"
		}]
	},
	"data": {
		"updated_at": "2016-08-02T06:35:35.257Z",
		"updated_by_id": 24393923,
		"revision": 2,
		"starred": true
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest9" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "5cd6d9c4-5cd0-42de-8131-79fc-7b9ea4e3",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470119842.3047893,
	"after": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 3,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:37:22.297Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 2,
		"starred": true,
		"completed": false,
		"is_recurrence_child": false,
		"title": "TASK23456",
		"updated_at": "2016-08-02T06:35:35.257Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw926d96e65287d5986c5bbbfa2987c3",
		"id": 2025074460,
		"list_id": 260237042,
		"created_at": "2016-08-02T06:21:33.227Z"
	},
	"subject": {
		"id": 2025074460,
		"type": "task",
		"revision": 3,
		"previous_revision": 2,
		"parents": [{
			"id": 260237042,
			"type": "list"
		}]
	},
	"data": {
		"updated_at": "2016-08-02T06:37:22.297Z",
		"revision": 3,
		"starred": false
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest10" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "94d380f1-2dcb-47bf-ab65-e47b-9c104676",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470121998.6585557,
	"after": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 3,
		"completed": false,
		"title": "asdf",
		"updated_at": "2016-08-02T07:13:18.652Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
		"id": 1290921950,
		"task_id": 2162938194,
		"created_at": "2016-08-02T06:56:37.578Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 2,
		"completed_at": "2016-08-02T06:59:15.186Z",
		"completed": true,
		"title": "asdf",
		"updated_at": "2016-08-02T06:59:15.188Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
		"id": 1290921950,
		"task_id": 2162938194,
		"completed_by_id": 24393923,
		"created_at": "2016-08-02T06:56:37.578Z"
	},
	"subject": {
		"id": 1290921950,
		"type": "subtask",
		"revision": 3,
		"previous_revision": 2,
		"parents": [{
			"id": 2162938194,
			"type": "task"
		}]
	},
	"data": {
		"completed": false,
		"updated_at": "2016-08-02T07:13:18.652Z",
		"revision": 3,
		"remove": ["completed_at", "completed_by_id"]
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest11" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
 	"cause": null,
 	"operation": "update",
 	"client": {
 		"id": "498d3ffc44ddfa2f275b",
 		"request_id": "971ce93f-f4c9-41be-b3e5-459b-91a72712",
 		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
 		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
 		"user_id": "24393923"
 	},
 	"type": "mutation",
 	"enqueued_at": 1470122102.7332828,
 	"after": {
 		"created_by_id": 24393923,
 		"updated_by_id": 24393923,
 		"revision": 4,
 		"completed_at": "2016-08-02T07:15:02.725Z",
 		"completed": true,
 		"title": "asdf",
 		"updated_at": "2016-08-02T07:15:02.727Z",
 		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
 		"id": 1290921950,
 		"task_id": 2016105085,
 		"completed_by_id": 24393923,
 		"created_at": "2016-08-02T06:56:37.578Z"
 	},
 	"version": 1,
 	"before": {
 		"created_by_id": 24393923,
 		"updated_by_id": 24393923,
 		"revision": 3,
 		"completed": false,
 		"title": "asdf",
 		"updated_at": "2016-08-02T07:13:18.652Z",
 		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
 		"id": 1290921950,
 		"task_id": 2016105085,
 		"created_at": "2016-08-02T06:56:37.578Z"
 	},
 	"subject": {
 		"id": 1290921950,
 		"type": "subtask",
 		"revision": 4,
 		"previous_revision": 3,
 		"parents": [{
 			"id": 2016105085,
 			"type": "task"
 		}]
 	},
 	"data": {
 		"completed": true,
 		"completed_at": "2016-08-02T07:15:02.725Z",
 		"completed_by_id": 24393923,
 		"updated_at": "2016-08-02T07:15:02.727Z",
 		"revision": 4
 	},
 	"user_id": 24393923
 }
 ,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest12" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse":{
	"cause": null,
	"operation": "delete",
	"client": {},
	"type": "mutation",
	"enqueued_at": 1470122185.1886425,
	"after": {
		"created_by_id": 24393923,
		"deleted_at": "2016-08-02 07:16:25 UTC",
		"updated_by_id": 24393923,
		"revision": 5,
		"completed_at": "2016-08-02T07:15:02.725Z",
		"completed": true,
		"title": "asdf",
		"updated_at": "2016-08-02T07:16:25.179Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
		"id": 1290921950,
		"task_id": 2016105085,
		"deleted_by_id": 24393923,
		"completed_by_id": 24393923,
		"restored_by_id": 24393923,
		"created_at": "2016-08-02T06:56:37.578Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 4,
		"completed_at": "2016-08-02T07:15:02.725Z",
		"completed": true,
		"title": "asdf",
		"updated_at": "2016-08-02T07:15:02.727Z",
		"created_by_request_id": "subtask:498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw1a5d2043e60cea5012ec313d7b12e3",
		"id": 1290921950,
		"task_id": 2016105085,
		"completed_by_id": 24393923,
		"created_at": "2016-08-02T06:56:37.578Z"
	},
	"subject": {
		"id": 1290921950,
		"type": "subtask",
		"revision": 5,
		"previous_revision": 4,
		"parents": [{
			"id": 2016105085,
			"type": "task"
		}]
	},
	"data": {
		"updated_at": "2016-08-02T07:16:25.179Z",
		"deleted_at": "2016-08-02 07:16:25 UTC",
		"deleted_by_id": 24393923,
		"revision": 5,
		"restored_by_id": 24393923
	},
	"user_id": 24393923
},
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest13" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"operation": "create",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "lw8b83159c0220cf192370f21f1150f4",
		"device_id": "46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b",
		"instance_id": "ad55d4f7-bcad-4428-b515-c46e-0ac2f246",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1470122281.5318825,
	"after": {
		"created_by_id": 24393923,
		"local_identifier": null,
		"revision": 1,
		"type": "task_comment",
		"local_created_at": "2016-08-02T07:18:00.822Z",
		"author": {
			"id": 24393923,
			"name": "Harish",
			"avatar": "https://a.basecamp.com/api/v1/avatar?user_id=24393923"
		},
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw8b83159c0220cf192370f21f1150f4",
		"id": 39988295,
		"task_id": 2016105085,
		"created_at": "2016-08-02T07:18:01.512Z",
		"text": "sddfdfgdgd"
	},
	"version": 1,
	"before": {
		"created_by_id": null,
		"local_identifier": null,
		"system": null,
		"revision": 0,
		"channel_type": null,
		"channel_compound_id": null,
		"channel_id": null,
		"local_created_at": null,
		"author": null,
		"updated_at": null,
		"created_by_request_id": null,
		"oembed": null,
		"id": null,
		"created_at": null,
		"text": null
	},
	"subject": {
		"id": 39988295,
		"type": "task_comment",
		"revision": 1,
		"previous_revision": 0,
		"parents": [{
			"id": 2016105085,
			"type": "task"
		}]
	},
	"data": {
		"remove": ["channel_compound_id", "channel_type", "system", "updated_at", "oembed", "channel_id"],
		"created_by_id": 24393923,
		"revision": 1,
		"type": "task_comment",
		"local_created_at": "2016-08-02T07:18:00.822Z",
		"author": {
			"id": 24393923,
			"name": "Harish",
			"avatar": "https://a.basecamp.com/api/v1/avatar?user_id=24393923"
		},
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:ad55d4f7-bcad-4428-b515-c46e-0ac2f246:24393923:lw8b83159c0220cf192370f21f1150f4",
		"id": 39988295,
		"task_id": 2016105085,
		"created_at": "2016-08-02T07:18:01.512Z",
		"text": "sddfdfgdgd"
	},
	"user_id": 24393923
},
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
    <munit:test name="basecamp-integration-test-suite-postFormatMessageFlowTest14" description="Test" ignore="true">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
	"cause": null,
	"operation": "update",
	"client": {
		"id": "498d3ffc44ddfa2f275b",
		"request_id": "2b9036d8-44f0-4d64-b7d0-be2d-0f5f6cea",
		"device_id": "e502307b-1f90-45f0-955e-5bb7e3c3812c",
		"instance_id": "b2dbee72-a115-49c4-bd5c-0ef9-bfa47882",
		"user_id": "24393923"
	},
	"type": "mutation",
	"enqueued_at": 1475500104.4081912,
	"after": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 8,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "DEMOLISt",
		"updated_at": "2016-10-03T13:08:24.396Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:7c4d7d55-a9e7-4090-83a1-1d98-dc58d769:24393923:lwad8b840566848c5d336885c9d4412b",
		"assignee_id": 24393923,
		"id": 2165681460,
		"list_id": 260531636,
		"created_at": "2016-09-28T11:37:23.113Z"
	},
	"version": 1,
	"before": {
		"created_by_id": 24393923,
		"updated_by_id": 24393923,
		"revision": 7,
		"starred": false,
		"completed": false,
		"is_recurrence_child": false,
		"title": "DEMOLISt",
		"updated_at": "2016-09-29T14:34:21.006Z",
		"created_by_request_id": "498d3ffc44ddfa2f275b:46f1ad3d-96f4-40ea-9161-bbcb5f4bbc2b:7c4d7d55-a9e7-4090-83a1-1d98-dc58d769:24393923:lwad8b840566848c5d336885c9d4412b",
		"id": 2165681460,
		"list_id": 260531636,
		"created_at": "2016-09-28T11:37:23.113Z"
	},
	"subject": {
		"id": 2165681460,
		"type": "task",
		"revision": 8,
		"previous_revision": 7,
		"parents": [{
			"id": 260531636,
			"type": "list"
		}]
	},
	"data": {
		"assignee_id": 24393923,
		"updated_at": "2016-10-03T13:08:24.396Z",
		"revision": 8
	},
	"user_id": 24393923
}
,
	"userEvents": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"set-duedate\",\"user-assigned\"],\"webhook_id\":2287597}",
	"instanceDetails": {
		"instanceId": 5658,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL2QxODQzZTVlLTI2OGItNDA1MC1iZTNjLWJkODZjNTI5Y2MxMQ",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-09-28T01:41:47",
		"messageFormat": null,
		"createdDate": "2016-09-28T01:41:46",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZTMwNDFjNTAtNjgzZC0xMWU2LTgxYmYtYjEzZjcwZDM3N2Ri",
		"configJson": "{\"list_id\":\"260531636\",\"displayName\":\"basecamp1\",\"notifications\":[\"task-added\",\"task-completed\",\"task-modified\",\"task-deleted\"],\"webhook_id\":2287597}",
		"instanceUuid": "4cb11d50-8581-11e6-b241-0e4b6da19b11"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <set-variable variableName="error" value="#[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
        <munit:assert-true message="expected message from flow but #[payload]" condition="#[flowVars.error !=null]" doc:name="Assert True"/>
    </munit:test>
</mule>
