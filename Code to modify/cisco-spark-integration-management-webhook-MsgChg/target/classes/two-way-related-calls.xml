<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    

	<flow name="twoWayAddProcess">
		<enricher target="#[flowVars['getInstancesResponse']]"
			doc:name="Message Enricher">
			<flow-ref
				name="getIntegrationInstancesByUserIdandIntegrationIdandSpaceIdFlow"
				doc:name="getIntegrationInstancesByUserIdandIntegrationIdandSpaceIdFlow" />
		</enricher>
		<choice doc:name="Choice">
			<when
				expression="#[flowVars['getInstancesResponse'].toString() != '{message=No results}']">
				<foreach collection="#[flowVars['getInstancesResponse']]"
					doc:name="Look All Instances">
					<dw:transform-message doc:name="Transform Message To Java">
						<dw:input-payload mimeType="application/java" />
						<dw:set-variable variableName="instancePayload"
							resource="classpath:dwScripts/fromPayloadToJava.dwl" />
					</dw:transform-message>
					<dw:transform-message doc:name="ConfigJson To Java">
						<dw:input-payload mimeType="application/java" />
						<dw:set-payload
							resource="classpath:dwScripts/buildTwoWayTearDownGetConfigJsonExample.dwl" />
					</dw:transform-message>
					<set-payload value="#[payload]" doc:name="Set Payload" />
					<dw:transform-message doc:name="Transform Message To Java">
						<dw:input-payload mimeType="application/json" />
						<dw:set-variable variableName="getConfigJson"
							resource="classpath:dwScripts/fromPayloadToJava.dwl" />
					</dw:transform-message>
					<choice doc:name="Choice">
						<when
							expression="#[flowVars['getConfigJson'] != empty &amp;&amp; flowVars['getConfigJson'].containsKey('twoway')]">
							<set-variable variableName="instanceId"
								value="#[flowVars['instancePayload']['instanceId']]" doc:name="Set Instance Id" />
							<dw:transform-message
								doc:name="Build Set Status Active Integration Instance Request">
								<dw:input-payload mimeType="application/json" />
								<dw:set-payload
									resource="classpath:dwScripts/buildStatusActiveIntegrationInstanceRequest.dwl" />
							</dw:transform-message>
							<enricher target="#[flowVars['putIntegrationResponse']]"
								doc:name="Message Enricher">
								<flow-ref name="putIntegrationInstanceFlow" doc:name="putIntegrationInstanceFlow" />
							</enricher>
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger"
								message="not two way instance ==&gt; instanceId = #[flowVars['instancePayload']['instanceId']]" />
						</otherwise>
					</choice>
				</foreach>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload
						resource="classpath:dwScripts/buildAddInstancesProcessForTwoWayNoResult.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>

	</flow>


	<flow name="twoWayDeleteProcess">
		<enricher target="#[flowVars['getInstancesResponse']]"
			doc:name="Message Enricher">
			<flow-ref
				name="getIntegrationInstancesByUserIdandIntegrationIdandSpaceIdFlow"
				doc:name="getIntegrationInstancesByUserIdandIntegrationIdandSpaceIdFlow" />
		</enricher>
		<choice doc:name="Choice">
			<when
				expression="#[flowVars['getInstancesResponse'].toString() != '{message=No results}']">
				<foreach collection="#[flowVars['getInstancesResponse']]"
					doc:name="Look All Instances">
					<dw:transform-message doc:name="Transform Message To Java">
						<dw:input-payload mimeType="application/java" />
						<dw:set-variable variableName="instancePayload"
							resource="classpath:dwScripts/fromPayloadToJava.dwl" />
					</dw:transform-message>
					<dw:transform-message doc:name="ConfigJson To Java">
						<dw:input-payload mimeType="application/java" />
						<dw:set-payload
							resource="classpath:dwScripts/buildTwoWayTearDownGetConfigJsonExample.dwl" />
					</dw:transform-message>
					<set-payload value="#[payload]" doc:name="Set Payload" />
					<dw:transform-message doc:name="Transform Message To Java">
						<dw:input-payload mimeType="application/json" />
						<dw:set-variable variableName="getConfigJson"
							resource="classpath:dwScripts/fromPayloadToJava.dwl" />
					</dw:transform-message>
					<choice doc:name="Choice">
						<when
							expression="#[flowVars['getConfigJson'] != empty &amp;&amp; flowVars['getConfigJson'].containsKey('twoway')]">
							<set-variable variableName="instanceId"
								value="#[flowVars['instancePayload']['instanceId']]" doc:name="Set Instance Id" />
							<dw:transform-message doc:name="Build Delete Integration Instance Request">
								<dw:input-payload mimeType="application/json" />
								<dw:set-payload
									resource="classpath:dwScripts/buildDeleteIntegrationInstanceRequest.dwl" />
							</dw:transform-message>
							<enricher target="#[flowVars['putIntegrationResponse']]"
								doc:name="Message Enricher">
								<flow-ref name="putIntegrationInstanceFlow" doc:name="putIntegrationInstanceFlow" />
							</enricher>
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Logger"
								message="not two way instance ==&gt; instanceId = #[flowVars['instancePayload']['instanceId']]" />
						</otherwise>
					</choice>
				</foreach>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload
						resource="classpath:dwScripts/buildAddInstancesProcessForTwoWayNoResult.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>

	</flow>
</mule>
