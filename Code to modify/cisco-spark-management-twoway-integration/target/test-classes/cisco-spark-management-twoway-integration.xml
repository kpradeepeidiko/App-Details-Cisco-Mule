<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:CiscoSpark="http://www.mulesoft.org/schema/mule/CiscoSpark" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/CiscoSpark http://www.mulesoft.org/schema/mule/CiscoSpark/current/mule-CiscoSpark.xsd">

    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8083" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" protocol="HTTPS" host="cisco-spark-integration-runtime-dev.cloudhub.io" port="443" basePath="/api" doc:name="HTTP Request Configuration" connectionIdleTimeout="500000"/>
    <CiscoSpark:config name="CiscoSpark__Configuration" doc:name="CiscoSpark: Configuration"/>
    <http:request-config name="HTTP_Request_Configuration1" protocol="HTTPS" host="api.ciscospark.com" port="443" basePath="/v1" doc:name="HTTP Request Configuration" connectionIdleTimeout="50000"/>
    <http:request-config name="HTTP_Request_Configuration2" protocol="HTTPS" host="#[flowVars.host[1]]" port="443" doc:name="HTTP Request Configuration" connectionIdleTimeout="50000"/>
    <flow name="cisco-spark-management-twoway-integrationFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/twowayBot" doc:name="HTTP"/>
        <logger message="Membership payload  #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Memebership Payload"/>
        <dw:transform-message doc:name="Memebership Payload">
            <dw:set-variable variableName="hookResponse"><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Spark Event">
            <when expression="#[flowVars.hookResponse.resource =='messages']">
                <http:request config-ref="HTTP_Request_Configuration1" path="/messages/#[flowVars.hookResponse.data.id]" method="GET" doc:name="GET MESSAGE DETAILS">
                    <http:request-builder>
                        <http:header headerName="Authorization" value="Bearer MjJmY2RhODctYTAwMS00N2Y4LTg1MjAtNGE0MWMzOWI3ZTFlMDIzNGQ0OGEtYTg5"/>
                        <http:header headerName="Content-type" value="application/json"/>
                    </http:request-builder>
                </http:request>
                <logger message="message Details #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="MESSAGE DETAILS">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-payload>
                </dw:transform-message>
                <set-variable variableName="jiraCommand" value="#[payload.text.replaceAll(&quot;( )+&quot;, &quot; &quot;)]" doc:name="set Command"/>
                <choice doc:name="Choice">
                    <when expression="#[payload.text.startsWith('jiradevbot')]">
                        <expression-component doc:name="Expression"><![CDATA[flowVars.command=payload.text.substring(payload.text.indexOf('jiradevbot')+10,payload.text.length());
flowVars.command=flowVars.command.trim();
]]></expression-component>
                    </when>
                    <otherwise>
                        <set-variable variableName="command" value="#[payload.text.trim()]" doc:name="Set JiraCommand"/>
                    </otherwise>
                </choice>
                <http:request config-ref="HTTP_Request_Configuration" path="/integrations/{integrationId}/appTokens" method="GET" doc:name="Get Tokens From DB">
                    <http:request-builder>
                        <http:query-param paramName="userId" value="#[flowVars.hookResponse.data.personId]"/>
                        <http:uri-param paramName="integrationId" value="Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0M4MDhhY2YzNTA1NjFiNjg5NmNkYWJhOWEzMjg5MDYwYWU2Y2E5YWRmODZmNDVlNGZlMzQ3ZTgxNDY4NWQ2ODA3"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-payload>
                </dw:transform-message>
                <choice doc:name="Check App Tokens">
                    <when expression="#[payload.toString() !='{message=No results}']">
                        <flow-ref name="GetDynamicFlowSettings" doc:name="GetDynamicFlowSettings"/>
                        <flow-ref name="jiraTwoWayFlow" doc:name="jiraTwoWayFlow"/>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-payload>
                        </dw:transform-message>
                        <choice doc:name="Choice">
                            <when expression="#[payload.formatMessage != null]">
                                <flow-ref name="postMessageToSparkFlow" doc:name="postMessageToSparkFlow"/>
                            </when>
                            <otherwise>
                                <logger message="default" level="INFO" doc:name="Logger"/>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise>
                        <http:request config-ref="HTTP_Request_Configuration" path="/clients/{clientId}/tokens" method="GET" doc:name="GetBotTokens">
                            <http:request-builder>
                                <http:query-param paramName="client_id" value="558d81fd5f924877b8e8e3206aa272d9"/>
                                <http:query-param paramName="client_secret" value="f343bd44cb2646c297C3BE94EDC337A7"/>
                                <http:query-param paramName="integrationId" value="Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0M4MDhhY2YzNTA1NjFiNjg5NmNkYWJhOWEzMjg5MDYwYWU2Y2E5YWRmODZmNDVlNGZlMzQ3ZTgxNDY4NWQ2ODA3"/>
                                <http:query-param paramName="userId" value="#[flowVars['hookResponse']['data']['personId']]"/>
                                <http:query-param paramName="privateMessage" value="true"/>
                                <http:uri-param paramName="clientId" value="1"/>
                            </http:request-builder>
                        </http:request>
                        <dw:transform-message doc:name="Get Bot Tokens">
                            <dw:set-variable variableName="botToken"><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-variable>
                        </dw:transform-message>
                        <CiscoSpark:post-messages config-ref="CiscoSpark__Configuration" token="Bearer #[flowVars['botToken'][0]['accessToken']]" doc:name="CiscoSpark">
                            <CiscoSpark:messages-post-request roomId="#[flowVars.hookResponse.data.roomId]" markdown="Sorry, you are not authenticated.For authentication please [CLICK HERE](https://depot.ciscospark.com)"/>
                        </CiscoSpark:post-messages>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="GetDynamicFlowSettings">
        <http:request config-ref="HTTP_Request_Configuration" path="/integrations/{integrationId}/settings" method="GET" doc:name="GET DYNAMIC FLOW SETTINGS">
                            <http:request-builder>
                <http:uri-param paramName="integrationId" value="Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0M4MDhhY2YzNTA1NjFiNjg5NmNkYWJhOWEzMjg5MDYwYWU2Y2E5YWRmODZmNDVlNGZlMzQ3ZTgxNDY4NWQ2ODA3"/>
                            </http:request-builder>
                        </http:request>
                        <dw:transform-message doc:name="GetDynamicFlowSETTINGS">
                            <dw:set-variable variableName="integrationSettings"><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-variable>
                        </dw:transform-message>
                        <dw:transform-message doc:name="Dynamic Flow Payload">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
"sparkResponse":{
	"sparkCommand":flowVars['command'],
	"userId":flowVars['hookResponse']['data']['personId'],
	intgerationId:"Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0M4MDhhY2YzNTA1NjFiNjg5NmNkYWJhOWEzMjg5MDYwYWU2Y2E5YWRmODZmNDVlNGZlMzQ3ZTgxNDY4NWQ2ODA3"
}
}]]></dw:set-payload>
                        </dw:transform-message>
    </flow>
    <flow name="postMessageToSparkFlow">
        <logger message="#[payload.formatMessage]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/clients/{clientId}/tokens" method="GET" doc:name="GetBotTokens">
                            <http:request-builder>
                <http:query-param paramName="client_id" value="558d81fd5f924877b8e8e3206aa272d9"/>
                <http:query-param paramName="client_secret" value="f343bd44cb2646c297C3BE94EDC337A7"/>
                <http:query-param paramName="integrationId" value="Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0M4MDhhY2YzNTA1NjFiNjg5NmNkYWJhOWEzMjg5MDYwYWU2Y2E5YWRmODZmNDVlNGZlMzQ3ZTgxNDY4NWQ2ODA3"/>
                <http:query-param paramName="userId" value="#[flowVars['hookResponse']['data']['personId']]"/>
                <http:query-param paramName="privateMessage" value="true"/>
                <http:uri-param paramName="clientId" value="1"/>
                            </http:request-builder>
                        </http:request>
                        <dw:transform-message doc:name="Get Bot Tokens">
                            <dw:set-variable variableName="botToken"><![CDATA[%dw 1.0
%output application/java
---
payload
]]></dw:set-variable>
                        </dw:transform-message>
        <CiscoSpark:post-messages config-ref="CiscoSpark__Configuration" token="Bearer #[flowVars['botToken'][0]['accessToken']]" doc:name="CiscoSpark">
            <CiscoSpark:messages-post-request roomId="#[flowVars.hookResponse.data.roomId]" markdown="#[payload.formatMessage]"/>
        </CiscoSpark:post-messages>
    </flow>
</mule>
