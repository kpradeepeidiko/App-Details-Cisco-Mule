<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

	<flow name="postAuthDetailsFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<dw:transform-message doc:name="Transform Payload to Java">
			<dw:input-payload doc:sample="sample_data\json.json" />
			<dw:set-variable variableName="tokenRequest"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<enricher target="#[flowVars['postTokenResponse']]" doc:name="Message Enricher">
			<flow-ref name="postoffice365CalendarTokenFlow" doc:name="postoffice365CalendarTokenFlow" />
		</enricher>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload
				resource="classpath:dwScripts/buildPostAuthDetailsResponse.dwl" />
		</dw:transform-message>
	</flow>

	<flow name="postFormatMessageFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<dw:transform-message doc:name="Transform Message To Java">
			<dw:set-variable variableName="request"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<dw:transform-message doc:name="Convert Process">
			<dw:set-payload
				resource="classpath:dwScripts/buildConvertProcessInMesgFormtExample.dwl" />
		</dw:transform-message>
		<set-payload value="#[payload]" mimeType="application/json"
			doc:name="Set Payload" />
		<dw:transform-message doc:name="Transform Message To Java">
			<dw:set-variable variableName="userEventsJava"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<choice doc:name="Check Contain Message">
			<when
				expression="#[flowVars['request']['hookResponse']['value']=='eventCreation' || flowVars['request']['hookResponse']['value']=='eventUpdate']">
				<foreach collection="#[flowVars['userEventsJava']['notifications']]"
					doc:name="For Each">
					<logger message="notification = #[payload]" level="DEBUG"
						doc:name="Logger" />
					<choice doc:name="Choice">
						<when expression="#[payload==flowVars['request']['hookResponse']['value']]">
							<set-variable variableName="postMessage"
								value="#[flowVars['request']['hookResponse']['gcMessage']]"
								doc:name="Post Message" />
						</when>
						<otherwise>
							<logger message="#[payload] not selected" level="DEBUG"
								doc:name="Logger" />
						</otherwise>
					</choice>
				</foreach>

			</when>
			<when expression="#[flowVars['request']['hookResponse']['value']=='remainders']">
				<set-variable variableName="postMessage"
					value="#[flowVars['request']['hookResponse']['gcMessage']]"
					doc:name="Reminder Message" />

			</when>
			<when
				expression="#[flowVars['request']['hookResponse']['value']=='timeBasedReminder']">
				<set-variable variableName="postMessage"
					value="#[flowVars['request']['hookResponse']['gcMessage']]"
					doc:name="Time Based Reminder" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Empty Message Format">
					<dw:set-payload
						resource="classpath:dwScripts/buildEmptyMessageFormatExample.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
        <logger message="Message_Format Flow Invoked : Message = #[flowVars['postMessage']]" level="INFO" doc:name="Logger"/>
		<dw:transform-message doc:name="Build Post Format Message Response">
			<dw:set-payload
				resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl" />
		</dw:transform-message>
	</flow>

	<flow name="postIntegrationSettingsFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<logger level="DEBUG" doc:name="Logger"
			message="UI Settings = #[message.payloadAs(java.lang.String)]" />
		<dw:transform-message doc:name="Transform Payload to Java"
			metadata:id="dea53757-b847-488f-a796-a4006be3cc94">
			<dw:input-payload doc:sample="sample_data\json_1.json" />
			<dw:set-variable variableName="request1"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<set-variable variableName="userId"
			value="#[flowVars['request1']['userId']]" doc:name="Set User Id" />
		<set-variable variableName="integrationId"
			value="#[flowVars['request1']['integrationId']]" doc:name="Set Integration Id" />
		<logger
			message="UISettings intId=#[flowVars['integrationId']]  ++++++++++  userId=#[flowVars['userId']]"
			level="INFO" doc:name="Logger" />
		<choice doc:name="Choice">
			<when
				expression="#[flowVars['integrationId'] != null &amp;&amp; flowVars['userId'] !=null]">
				<enricher target="#[flowVars['getIntegrationTokenResponse']]"
					doc:name="Message Enricher">
					<flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow" />
				</enricher>
				<choice doc:name="Token Response">
					<when
						expression="#[flowVars.getIntegrationTokenResponse.toString() == '{message=No results}']">
						<dw:transform-message doc:name="No Results For Given Data">
							<dw:set-payload
								resource="classpath:dwScripts/buildNoResutsForGivenDataInSettingsFlowExample.dwl" />
						</dw:transform-message>

					</when>
					<otherwise>
						<choice doc:name="Check Refresh Token null">
							<when
								expression="#[flowVars.getIntegrationTokenResponse[0].refreshToken != null]">
								<set-variable variableName="refreshToken"
									value="#[flowVars['getIntegrationTokenResponse'][0]['refreshToken']]"
									doc:name="Set Refresh Token" />
								<set-payload
									value="#[{&quot;refresh_token&quot;:flowVars['refreshToken'],&quot;client_id&quot;:&quot;${office365Calendar.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${office365Calendar.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${office365Calendar.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${office365Calendar.integration.refresh.grantType}&quot;,&quot;scope&quot;:&quot;${office365Calendar.integration.scopes}&quot;}]"
									doc:name="Refresh Token Body" />
								<logger
									message="RefreshToken body =  #[message.payloadAs(java.lang.String)]"
									level="DEBUG" doc:name="Logger" />
								<http:request config-ref="HTTP_Access_Token_Request_Configuration"
									path="${office365Calendar.api.access.token.path}" method="POST"
									doc:name="Generate Office 365 Calendar Access Token By Refresh Token">
									<http:request-builder>
										<http:header headerName="Content-Type"
											value="application/x-www-form-urlencoded" />

									</http:request-builder>
									<http:failure-status-code-validator
										values="500..599" />
								</http:request>
								<logger
									message="RT response in settings = #[message.payloadAs(java.lang.String)]"
									level="DEBUG" doc:name="Logger" />
								<dw:transform-message doc:name="Transform Message To Java">
									<dw:set-variable variableName="refreshTokenResponse"
										resource="classpath:dwScripts/fromPayloadToJava.dwl" />
								</dw:transform-message>
								<choice doc:name="Choice">
									<when
										expression="#[!(flowVars['refreshTokenResponse'].containsKey('error'))]">

										<set-variable variableName="token"
											value="#[flowVars['refreshTokenResponse']['access_token']]"
											doc:name="Set office365Calendar Token" />

										<enricher target="#[flowVars['getCalendarUserResponse']]"
											doc:name="Message Enricher">
											<flow-ref name="getOffice365CalendarUesrFlow"
												doc:name="getOffice365CalendarUesrFlow" />
										</enricher>
										<enricher target="#[flowVars['calendersListResponse']]"
											doc:name="Message Enricher">
											<flow-ref name="getoffice365CalendarsListFlow"
												doc:name="getoffice365CalendarsListFlow" />
										</enricher>
										<dw:transform-message
											doc:name="Build Get Integration Settings Response">
											<dw:set-payload
												resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl" />
										</dw:transform-message>
									</when>
									<otherwise>

										<dw:transform-message doc:name="Token Revoke Response">
											<dw:set-payload
												resource="classpath:dwScripts/buildTokenRevokeResponseInSettingsFlowExample.dwl" />
										</dw:transform-message>
									</otherwise>
								</choice>
							</when>
							<otherwise>

								<dw:transform-message doc:name="Refresh Token Null">
									<dw:set-payload
										resource="classpath:dwScripts/buildRefreshTokenNullInSettingsFlowExample.dwl" />
								</dw:transform-message>
							</otherwise>
						</choice>
					</otherwise>
				</choice>
			</when>
			<otherwise>

				<dw:transform-message doc:name="Uid Or Intgid Null">
					<dw:set-payload
						resource="classpath:dwScripts/buildUserIdOrIntgIdNullInSettingsFlowExample.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			logException="false">
			<set-variable variableName="exception" value="#[exception.message]"
				doc:name="exception" />
			<dw:transform-message doc:name="Exception In Settings Response">
				<dw:set-payload
					resource="classpath:dwScripts/buildSettingsFlowExceptionExample.dwl" />
			</dw:transform-message>
		</catch-exception-strategy>
	</flow>

	<flow name="setupIntegrationFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<dw:transform-message doc:name="Transform Request Message To Java"
			metadata:id="08f89f09-0335-4231-95e5-8b61b66ecab4">
			<dw:input-payload doc:sample="sample_data\setupRequest.json" />
			<dw:set-variable variableName="request2"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration"
			path="/office365/settings/{userId}" method="GET"
			doc:name="Get User Last Time From DB">
			<http:request-builder>
				<http:uri-param paramName="userId"
					value="#[flowVars['request2']['userId']]" />
			</http:request-builder>
		</http:request>
		<dw:transform-message doc:name="Transform Message To Java">
			<dw:set-variable variableName="userTimingsResponse"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<set-variable variableName="time1"
			value="#[server.dateTime.changeTimeZone('UTC')]" doc:name="Set Server Time" />
		<expression-component doc:name="Remove 'Z'"><![CDATA[flowVars['time2'] = flowVars['time1'].toString().split('Z')[0]]]></expression-component>
		<choice doc:name="Choice">
			<when
				expression="#[flowVars['userTimingsResponse'].toString() == '{message=No Result Found}']">
				<dw:transform-message doc:name="Store DateTime  For User in DB">
					<dw:set-payload
						resource="classpath:dwScripts/buildPutUserTimeStampInDBSetupFlowExample.dwl" />
				</dw:transform-message>
				<http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration"
					path="/office365/settings/{userId}" method="POST" doc:name="Post Lates Time In DB">
					<http:request-builder>
						<http:uri-param paramName="userId"
							value="#[flowVars['request2']['userId']]" />

					</http:request-builder>
				</http:request>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Store DateTime  For User in DB">
					<dw:set-payload
						resource="classpath:dwScripts/buildPutUserTimeStampInDBSetupFlowExample.dwl" />
				</dw:transform-message>
				<http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration"
					path="/office365/settings/{userId}" method="PUT" doc:name="Put Lates Time In DB">
					<http:request-builder>
						<http:uri-param paramName="userId"
							value="#[flowVars['request2']['userId']]" />

					</http:request-builder>
				</http:request>
			</otherwise>
		</choice>
		<dw:transform-message doc:name="Build Setup Integration Response">
			<dw:set-payload
				resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl" />
		</dw:transform-message>


	</flow>

	<flow name="tearDownIntegrationFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<dw:transform-message doc:name="Transform Payload to Java"
			metadata:id="f8674598-30e1-4f7e-9e3d-ee2e727b6372">
			<dw:input-payload doc:sample="sample_data\deleteHook.json" />
			<dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl"
				variableName="deleteRequest" />
		</dw:transform-message>
		<dw:transform-message doc:name="Build Tear Down Integration Response">
			<dw:set-payload
				resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl" />
		</dw:transform-message>

	</flow>
	<flow name="updateIntegrationFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<dw:transform-message doc:name="Transform Message To Java">
			<dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl"
				variableName="updateRequest" />
		</dw:transform-message>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload resource="classpath:dwScripts/buildUpdateInstanceResponse.dwl" />
		</dw:transform-message>

	</flow>
	<flow name="healthCheckFlow">
		<object-to-string-transformer doc:name="Object to String" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<logger message="HC #[message.payloadAs(java.lang.String)]"
			level="DEBUG" doc:name="Logger" />
		<dw:transform-message doc:name="Transform Payload to Java"
			metadata:id="dea53757-b847-488f-a796-a4006be3cc94">
			<dw:input-payload doc:sample="sample_data\json_1.json" />
			<dw:set-variable variableName="request1"
				resource="classpath:dwScripts/fromPayloadToJava.dwl" />
		</dw:transform-message>
		<set-variable variableName="userId"
			value="#[flowVars['request1']['userId']]" doc:name="Set User Id" />
		<set-variable variableName="integrationId"
			value="#[flowVars['request1']['integrationId']]" doc:name="Set Integration Id" />
		<logger
			message="UISettings intId=#[flowVars['integrationId']]   userId=#[flowVars['userId']] payload_To_java=#[flowVars['request1']]"
			level="DEBUG" doc:name="Logger" />
		<choice doc:name="Choice">
			<when
				expression="#[flowVars['integrationId'] != null &amp;&amp; flowVars['userId'] !=null]">
				<enricher target="#[flowVars['getIntegrationTokenResponse']]"
					doc:name="Message Enricher">
					<flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow" />
				</enricher>
				<choice doc:name="Token Response">
					<when
						expression="#[flowVars.getIntegrationTokenResponse.toString() == '{message=No results}']">

						<dw:transform-message doc:name="HCS Message">
							<dw:set-payload
								resource="classpath:dwScripts/buildHealthCheckResponse.dwl" />
						</dw:transform-message>

					</when>
					<otherwise>
						<choice doc:name="Check Refresh Token null">
							<when
								expression="#[flowVars['getIntegrationTokenResponse'][0]['refreshToken'] != null]">
								<set-variable variableName="refreshToken"
									value="#[flowVars['getIntegrationTokenResponse'][0]['refreshToken']]"
									doc:name="Set Refresh Token" />
								<set-payload
									value="#[{&quot;refresh_token&quot;:flowVars['refreshToken'],&quot;client_id&quot;:&quot;${office365Calendar.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${office365Calendar.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${office365Calendar.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${office365Calendar.integration.refresh.grantType}&quot;,&quot;scope&quot;:&quot;${office365Calendar.integration.scopes}&quot;}]"
									doc:name="Refresh Token Body" />
								<logger
									message="REFRESHTOKEN BODYYYYYYYYYYYY #[payload] and RETOKEN #[flowVars['refreshToken']]"
									level="DEBUG" doc:name="Logger" />
								<http:request config-ref="HTTP_Access_Token_Request_Configuration"
									path="${office365Calendar.api.access.token.path}" method="POST"
									doc:name="Generate Office 365 Calendar Access Token By Refresh Token">
									<http:request-builder>
										<http:header headerName="Content-Type"
											value="application/x-www-form-urlencoded" />

									</http:request-builder>
									<http:failure-status-code-validator
										values="500..599" />
								</http:request>
								<dw:transform-message doc:name="Transform Message To Java">
									<dw:set-variable variableName="refreshTokenResponse"
										resource="classpath:dwScripts/fromPayloadToJava.dwl" />
								</dw:transform-message>
								<choice doc:name="Choice">
									<when
										expression="#[flowVars.refreshTokenResponse.toString() != '{error=invalid_grant, error_description=Bad Request}']">
										<logger
											message="#[flowVars['refreshTokenResponse']] SSSSSSSSSSSSSSSSSSSSSS"
											level="DEBUG" doc:name="Logger" />
										<set-variable variableName="token"
											value="#[flowVars['refreshTokenResponse']['access_token']]"
											doc:name="Set office365Calendar Token" />
										<enricher target="#[flowVars['calendersListResponse']]"
											doc:name="Message Enricher">
											<flow-ref name="getoffice365CalendarsListFlow"
												doc:name="getoffice365CalendarsListFlow" />
										</enricher>
										<enricher target="#[flowVars['getCalendarUserResponse']]"
											doc:name="Message Enricher">
											<flow-ref name="getOffice365CalendarUesrFlow"
												doc:name="getOffice365CalendarUesrFlow" />
										</enricher>
										<dw:transform-message doc:name="HCS Message">
											<dw:set-payload
												resource="classpath:dwScripts/buildHealthCheckResponse.dwl" />
										</dw:transform-message>

									</when>
									<otherwise>

										<dw:transform-message doc:name="HCS Message">
											<dw:set-payload
												resource="classpath:dwScripts/buildHealthCheckResponse.dwl" />
										</dw:transform-message>
									</otherwise>
								</choice>
							</when>
							<otherwise>

								<dw:transform-message doc:name="HCS Message">
									<dw:set-payload
										resource="classpath:dwScripts/buildHealthCheckResponse.dwl" />
								</dw:transform-message>
							</otherwise>
						</choice>
					</otherwise>
				</choice>
			</when>
			<otherwise>

				<dw:transform-message doc:name="HCS Message">
					<dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			logException="false">
			<set-variable variableName="exception" value="#[exception.message]"
				doc:name="exception" />
			<logger
				message="Exception In HC flow = #[flowVars.exception] +++++++++ Payload = #[message.payloadAs(java.lang.String)]"
				level="INFO" doc:name="Logger" />
			<dw:transform-message doc:name="HCF Message">
				<dw:set-payload resource="classpath:dwScripts/buildHealthCheckFailureResponse.dwl"/>
			</dw:transform-message>
		</catch-exception-strategy>
	</flow>
</mule>
