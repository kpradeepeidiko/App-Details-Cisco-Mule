<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:core-services-invocations.xml"/>
        <spring:import resource="classpath:integration-token-operations.xml"/>
        <spring:import resource="classpath:office365Calendar-integration.xml"/>
        <spring:import resource="classpath:office365Calendar-api-calls.xml"/>
        <spring:import resource="classpath:global.xml"/>
    </spring:beans>
    <munit:test name="Overall-Office365Calendar-new-test-suite-coreServicesAlertsFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="client_id" value="${office365Calendar.integration.client.id}" doc:name="Set Client Id"/>
        <set-variable variableName="client_secret" value="${office365Calendar.integration.client.secret}" doc:name="Set Client Secret"/>
        <flow-ref name="coreServicesAlertsFlow" doc:name="Flow-ref to coreServicesAlertsFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-coreServicesLoggingFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="client_id" value="${office365Calendar.integration.client.id}" doc:name="Set Client Id"/>
        <set-variable variableName="client_secret" value="${office365Calendar.integration.client.secret}" doc:name="Set Client Secret"/>
        <flow-ref name="coreServicesLoggingFlow" doc:name="Flow-ref to coreServicesLoggingFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-coreServicesTrackingFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="client_id" value="${office365Calendar.integration.client.id}" doc:name="Set Client Id"/>
        <set-variable variableName="client_secret" value="${office365Calendar.integration.client.secret}" doc:name="Set Client Secret"/>
        <flow-ref name="coreServicesTrackingFlow" doc:name="Flow-ref to coreServicesTrackingFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-getIntegrationTokenFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="integrationId" value="#['Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi']" doc:name="integrationId"/>
        <set-variable variableName="userId" value="#['Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI']" doc:name="userId"/>
        <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postAuthDetailsFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Input Request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
    "integrationId":'Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi',
    "authSettings": {
        "code": "AQABAAAAAADRNYRQ3dhRSrm-4K-adpCJa-f9kkFPm5v4anHnANMmmf_V7tl7XDsNcZZYR77SWJoM9HX5j-qYsZO8Eub2HV8qufnnJKmeejGQljtN1VVNXpQ0RreGmIQfR0DnHtl9Vjy4Bac0Hsra41PUxFLRgoeNjaOeZdmqOT2IcfVGXWYSy7LZ7QaODfV_Pjrs31KYw72rFZMNqxGQMLq2-vmLRrEmMobKcPCInAt9ihgKUYh9A0aNKolyYKObo1X0MT8hbMB11eRslECi8EqdduAw3TCfn5hyMYLo2WwQu-OQAEQWCHzxs3IjJfONKxwCLTtRzaab0vDD8fCOfXhV90Ej4NpZZgapgkzNASY6PR7ObT8DTXrVoq-Zfj1o6Ir-1GIULPhWkplYeyE0OpY0QOinw-SwyGD5a7smwK3YnP1IUlZAVfurX8znnU4J2G3ajzdZRdVR-wDvVhIBj-1iRr99ypGZV52L146Nbx-xAKOSdcWraqx4GTSwN_Ct_V9B1ANn8RYlIjiF1AWO5ew76e26AyVfnlbjHDgkS_WosrzDgIIyB5kI3wNu6YhRz5BKASE0BMuPXhEbzz7bwTOjceIkMzo5_pXD_5yOf1HiRMlwd8gKy8UXXoHIcGbrCrjcZ3nzCnNU1tGDgWAu8xim_91IN-yuIAA"
    }
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postAuthDetailsFlow" doc:name="Flow-ref to postAuthDetailsFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postFormatMessageFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	"hookResponse": {
		"gcMessage": "New Event [Testing Office 365 Events](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) created in [Varma's Calendar](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) \n - Nov 03 from 08:30 AM  to 09:30 AM(UTC) \n - Description :  Testing Office 365 Functionality  \n - Location : Hyderabad ",
		"value": "eventCreation"
	},
	"userEvents": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
	"instanceDetails": {
		"instanceId": 7232,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-11-03T07:41:32",
		"messageFormat": null,
		"createdDate": "2016-11-03T07:41:32",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZWY3OTA3ZjQtMjA2My0zZWY3LTkwMzctM2Q3MjlmZTE2NGQ4",
		"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
		"instanceUuid": "f0a56190-a198-11e6-a98b-0e00d11fb87e"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postFormatMessageFlowTest-EventUpdate" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	"hookResponse": {
		"gcMessage": "New Event [Testing Office 365 Events](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) created in [Varma's Calendar](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) \n - Nov 03 from 08:30 AM  to 09:30 AM(UTC) \n - Description :  Testing Office 365 Functionality  \n - Location : Hyderabad ",
		"value": "eventCreation"
	},
	"userEvents": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
	"instanceDetails": {
		"instanceId": 7232,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-11-03T07:41:32",
		"messageFormat": null,
		"createdDate": "2016-11-03T07:41:32",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZWY3OTA3ZjQtMjA2My0zZWY3LTkwMzctM2Q3MjlmZTE2NGQ4",
		"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
		"instanceUuid": "f0a56190-a198-11e6-a98b-0e00d11fb87e"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postFormatMessageFlowTest-TimeBasedReminder" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	"hookResponse": {
		"gcMessage": "New Event [Testing Office 365 Events](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) created in [Varma's Calendar](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) \n - Nov 03 from 08:30 AM  to 09:30 AM(UTC) \n - Description :  Testing Office 365 Functionality  \n - Location : Hyderabad ",
		"value": "eventCreation"
	},
	"userEvents": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
	"instanceDetails": {
		"instanceId": 7232,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-11-03T07:41:32",
		"messageFormat": null,
		"createdDate": "2016-11-03T07:41:32",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZWY3OTA3ZjQtMjA2My0zZWY3LTkwMzctM2Q3MjlmZTE2NGQ4",
		"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
		"instanceUuid": "f0a56190-a198-11e6-a98b-0e00d11fb87e"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postFormatMessageFlowTest-DayBasedReminder" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	"hookResponse": {
		"gcMessage": "New Event [Testing Office 365 Events](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) created in [Varma's Calendar](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) \n - Nov 03 from 08:30 AM  to 09:30 AM(UTC) \n - Description :  Testing Office 365 Functionality  \n - Location : Hyderabad ",
		"value": "eventCreation"
	},
	"userEvents": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
	"instanceDetails": {
		"instanceId": 7232,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-11-03T07:41:32",
		"messageFormat": null,
		"createdDate": "2016-11-03T07:41:32",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZWY3OTA3ZjQtMjA2My0zZWY3LTkwMzctM2Q3MjlmZTE2NGQ4",
		"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
		"instanceUuid": "f0a56190-a198-11e6-a98b-0e00d11fb87e"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    
    <munit:test name="Overall-Office365Calendar-new-test-suite-postFormatMessageFlowTest-Default" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
 {
	"hookResponse": {
		"gcMessage": "New Event [Testing Office 365 Events](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) created in [Varma's Calendar](https://outlook.office365.com/owa/?ItemID=AAMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAAAAABvmGOPB1G4TZR4tjTEMXsbBwCgIoCsLtuQR5MdRmRQOIPQAAAAoX5wAACgIoCsLtuQR5MdRmRQOIPQAAAAoaONAAA%3D&exvsurl=1&viewModel=ICalendarItemDetailsViewModelFactory) \n - Nov 03 from 08:30 AM  to 09:30 AM(UTC) \n - Description :  Testing Office 365 Functionality  \n - Location : Hyderabad ",
		"value": ""
	},
	"userEvents": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
	"instanceDetails": {
		"instanceId": 7232,
		"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
		"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
		"updatedDate": "2016-11-03T07:41:32",
		"messageFormat": null,
		"createdDate": "2016-11-03T07:41:32",
		"status": "ACTIVE",
		"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZWY3OTA3ZjQtMjA2My0zZWY3LTkwMzctM2Q3MjlmZTE2NGQ4",
		"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"02:00 PM\",\"utcTime\":\"08:30 AM\",\"offset\":\"5.30\",\"timezone\":\"UTC+5:30(India Standard Time)\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVwAAAA==\",\"calendar_name\":\"Varma's Calendar\",\"displayName\":\"Office 365 Test\",\"notifications\":[\"eventCreation\",\"eventUpdate\"]}",
		"instanceUuid": "f0a56190-a198-11e6-a98b-0e00d11fb87e"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postIntegrationSettingsFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integrationId" : "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
	"userId":"Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI"
}]]></dw:set-payload>
        </dw:transform-message>
        
        <flow-ref name="postIntegrationSettingsFlow" doc:name="Flow-ref to postIntegrationSettingsFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-setupIntegrationFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"instanceId": 7161,
	"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-11-01T06:29:13",
	"messageFormat": null,
	"createdDate": "2016-11-01T06:29:13",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZmRmYjA3ZGYtNjFjNi0zMjE1LWI4YzItOGE2NTRhOWZlYzMz",
	"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"1:00 AM\",\"utcTime\":\"07:30 PM\",\"timezone\":\"5.5\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVQAAAA==\",\"calendar_name\":\"Ravi's Calendar\",\"displayName\":\"Testing\"}",
	"instanceUuid": "16c88250-a061-11e6-b68b-0eb761235170"
}]]></dw:set-payload>
        </dw:transform-message>
        
        <flow-ref name="setupIntegrationFlow" doc:name="Flow-ref to setupIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-tearDownIntegrationFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"instanceId": 7161,
	"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-11-01T06:29:13",
	"messageFormat": null,
	"createdDate": "2016-11-01T06:29:13",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZmRmYjA3ZGYtNjFjNi0zMjE1LWI4YzItOGE2NTRhOWZlYzMz",
	"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"1:00 AM\",\"utcTime\":\"07:30 PM\",\"timezone\":\"5.5\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVQAAAA==\",\"calendar_name\":\"Ravi's Calendar\",\"displayName\":\"Testing\"}",
	"instanceUuid": "16c88250-a061-11e6-b68b-0eb761235170"
}]]></dw:set-payload>
        </dw:transform-message>
        
        <flow-ref name="tearDownIntegrationFlow" doc:name="Flow-ref to tearDownIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-updateIntegrationFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"instanceId": 7161,
	"integrationId": "Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi",
	"userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI",
	"updatedDate": "2016-11-01T06:29:13",
	"messageFormat": null,
	"createdDate": "2016-11-01T06:29:13",
	"status": "ACTIVE",
	"channelId": "Y2lzY29zcGFyazovL3VzL1JPT00vZmRmYjA3ZGYtNjFjNi0zMjE1LWI4YzItOGE2NTRhOWZlYzMz",
	"configJson": "{\"time_base\":\"15 minute before\",\"day_time_base\":\"1:00 AM\",\"utcTime\":\"07:30 PM\",\"timezone\":\"5.5\",\"calendar_id\":\"AQMkADI4MGJhNzk1LTI3MjYtNDc5NC04OTE0LWNhYjM5MzczMjhmZABGAAADb5hjjwdRuE2UeLY0xDF7GwcAoCKArC7bkEeTHUZkUDiD0AAAAgEGAAAAoCKArC7bkEeTHUZkUDiD0AAAAaGCVQAAAA==\",\"calendar_name\":\"Ravi's Calendar\",\"displayName\":\"Testing\"}",
	"instanceUuid": "16c88250-a061-11e6-b68b-0eb761235170"
}]]></dw:set-payload>
        </dw:transform-message>
        
        <flow-ref name="updateIntegrationFlow" doc:name="Flow-ref to updateIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-healthCheckFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integrationId":'Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi',
	"userId":"Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI"
}]]></dw:set-payload>
        </dw:transform-message>
        
        <flow-ref name="healthCheckFlow" doc:name="Flow-ref to healthCheckFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-postoffice365CalendarTokenFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="tokenRequest"><![CDATA[%dw 1.0
%output application/java
---
{
    "integrationId":'Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi',
    "authSettings": {
        "code": "AQABAAAAAADRNYRQ3dhRSrm-4K-adpCJa-f9kkFPm5v4anHnANMmmf_V7tl7XDsNcZZYR77SWJoM9HX5j-qYsZO8Eub2HV8qufnnJKmeejGQljtN1VVNXpQ0RreGmIQfR0DnHtl9Vjy4Bac0Hsra41PUxFLRgoeNjaOeZdmqOT2IcfVGXWYSy7LZ7QaODfV_Pjrs31KYw72rFZMNqxGQMLq2-vmLRrEmMobKcPCInAt9ihgKUYh9A0aNKolyYKObo1X0MT8hbMB11eRslECi8EqdduAw3TCfn5hyMYLo2WwQu-OQAEQWCHzxs3IjJfONKxwCLTtRzaab0vDD8fCOfXhV90Ej4NpZZgapgkzNASY6PR7ObT8DTXrVoq-Zfj1o6Ir-1GIULPhWkplYeyE0OpY0QOinw-SwyGD5a7smwK3YnP1IUlZAVfurX8znnU4J2G3ajzdZRdVR-wDvVhIBj-1iRr99ypGZV52L146Nbx-xAKOSdcWraqx4GTSwN_Ct_V9B1ANn8RYlIjiF1AWO5ew76e26AyVfnlbjHDgkS_WosrzDgIIyB5kI3wNu6YhRz5BKASE0BMuPXhEbzz7bwTOjceIkMzo5_pXD_5yOf1HiRMlwd8gKy8UXXoHIcGbrCrjcZ3nzCnNU1tGDgWAu8xim_91IN-yuIAA"
    }
}]]></dw:set-variable>
        </dw:transform-message>
        <flow-ref name="postoffice365CalendarTokenFlow" doc:name="Flow-ref to postoffice365CalendarTokenFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-getoffice365CalendarsListFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="integrationId" value="#['Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi']" doc:name="integrationId"/>
        <set-variable variableName="userId" value="#['Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI']" doc:name="userId"/>
        <enricher target="#[flowVars.postTokenResponse]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"tokenResponse":flowVars.postTokenResponse	
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[flowVars.postTokenResponse[0].accessToken]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="token" value="#[flowVars.postTokenResponse[0].accessToken]" doc:name="token"/>
        
        <flow-ref name="getoffice365CalendarsListFlow" doc:name="Flow-ref to getoffice365CalendarsListFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-getOffice365CalendarUesrFlowTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="integrationId" value="#['Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi']" doc:name="integrationId"/>
        <set-variable variableName="userId" value="#['Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI']" doc:name="userId"/>
        <enricher target="#[flowVars.postTokenResponse]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"tokenResponse":flowVars.postTokenResponse	
}]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="token" value="#[flowVars.postTokenResponse[0].accessToken]" doc:name="token"/>
        
        <flow-ref name="getOffice365CalendarUesrFlow" doc:name="Flow-ref to getOffice365CalendarUesrFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="Overall-Office365Calendar-new-test-suite-getTokenByChoiceConditionTest" description="Test" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTPS']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="integrationId" value="#['Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OL0NmNTYxMjk0ZGUxYTgwZDE2OTdhM2UxMjUyNGEzZjZiZTUxNjBlOTA3NGY1NDY3NmY2MDkzZjJkMzdlMGM5ODJi']" doc:name="integrationId"/>
        <set-variable variableName="userId" value="#['Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI']" doc:name="userId"/>
        <flow-ref name="getTokenByChoiceCondition" doc:name="Flow-ref to getTokenByChoiceCondition"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
</mule>
