<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:cloudhub="http://www.mulesoft.org/schema/mule/cloudhub" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:Trello="http://www.mulesoft.org/schema/mule/Trello" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/Trello http://www.mulesoft.org/schema/mule/Trello/current/mule-Trello.xsd
http://www.mulesoft.org/schema/mule/cloudhub http://www.mulesoft.org/schema/mule/cloudhub/current/mule-cloudhub.xsd">
    <http:request-config name="HTTP_Integrations_Runtime_Request_Configuration" protocol="HTTPS" host="${integrations.runtime.host}" port="${integrations.runtime.port}" basePath="${integrations.runtime.path}" doc:name="HTTP Request Configuration" />
    <http:request-config name="HTTP_Request_Configuration" host="${trello.api.operations.host}" port="${trello.api.operations.port}" doc:name="HTTP Request Configuration" tlsContext-ref="tls.context" protocol="HTTPS" />

	<flow name="postFormatMessageFlow">
        <logger message="message format flow initilal #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload mimeType="application/json"/>
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="trigResponse"/>
        </dw:transform-message>
        <logger message="hookPayload#[flowVars.trigResponse]" level="DEBUG" doc:name="Logger"/>
        <set-variable variableName="userId" value="#[flowVars.trigResponse.instanceDetails.userId]" doc:name="Set UserId"/>
        <set-variable variableName="integrationId" value="#[flowVars.trigResponse.instanceDetails.integrationId]" doc:name="Set IntegrationId"/>
        <logger message="USERID:::::#[flowVars.userId]    &amp;&amp;&amp; #[flowVars.integrationId]" level="INFO" doc:name="Logger"/>
        <flow-ref name="getRuntimeAccessTokenFlow" doc:name="getRuntimeAccessTokenFlow"/>
        <logger message="token formatting flow #[flowVars.accessToken] %% &amp;&amp;&amp; #[flowVars.trigResponse.hookResponse.action.data.toString().contains('list')]  *** #[flowVars.trigResponse.hookResponse.action.data.toString().contains('card')]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildResponseUserEvents.dwl"/>
        </dw:transform-message>
        <set-variable variableName="listId" value="#[json:list_id]" doc:name="Variable"/>
        <logger message="listId from configJson #[flowVars.listId]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.trigResponse.hookResponse.action.data.toString().contains('list') == false &amp;&amp; flowVars.trigResponse.hookResponse.action.data.toString().contains('card') ==true]">
                <http:request config-ref="HTTP_Request_Configuration" path="/1/cards/#[flowVars['trigResponse']['hookResponse']['action']['data']['card']['id']]/list?key=9338edc094283fd8e41a086bad98aaf9&amp;token=#[flowVars.accessToken]" method="GET" doc:name="HTTP">
                </http:request>
                <logger message="list info #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <object-to-string-transformer doc:name="Object to String"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                <set-variable variableName="list" value="#[json:id]" doc:name="Variable"/>
            </when>
            <when expression="#[flowVars.trigResponse.hookResponse.action.data.toString().contains('checkItem') =='true' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.toString().contains('card') ==true &amp;&amp; flowVars.trigResponse.hookResponse.action.data.checklist.id != null || flowVars.trigResponse.hookResponse.action.data.toString().contains('checklist') =='true' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.toString().contains('card') ==true &amp;&amp; flowVars.trigResponse.hookResponse.action.data.checklist.id != null]">
                <logger message="Token #[flowVars.accessToken]" level="INFO" doc:name="Logger"/>
                <http:request config-ref="HTTP_Request_Configuration" path="/1/cards/#[flowVars['trigResponse']['hookResponse']['action']['data']['card']['id']]/list?key=9338edc094283fd8e41a086bad98aaf9&amp;token=#[flowVars.accessToken]" method="GET" doc:name="HTTP">
                    <http:request-builder>
                        <http:header headerName="Content-Type" value="application/json"/>
                    </http:request-builder>
                </http:request>
                <logger message="Getting list data by using ucard #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <set-variable variableName="list" value="#[json:id]" doc:name="Variable"/>
            </when>
            <when expression="#[flowVars.trigResponse.hookResponse.action.data.toString().contains('checklist') == 'true'&amp;&amp; flowVars.trigResponse.hookResponse.action.data.toString().contains('card') =='false']">
                <Trello:get-all-lists-under-board config-ref="Trello__Configuration" doc:name="Trello" boardId="#[flowVars['trigResponse']['hookResponse']['action']['data']['board']['id']]" token="#[flowVars['accessToken']]"/>
                <logger message="After connector #[payload]" level="INFO" doc:name="Logger"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <logger message="getting lists from board #[payload]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
                </dw:transform-message>
                <logger message="After transform message #[payload]" level="INFO" doc:name="Logger"/>
                <foreach collection="#[payload]" doc:name="For Each">
                    <logger message="in foreach #[payload]" level="INFO" doc:name="Logger"/>
                    <set-variable variableName="listdata" value="#[payload['id']]" doc:name="Variable"/>
                    <choice doc:name="Choice">
                        <when expression="#[flowVars['listId']==flowVars['listdata']]">
                            <set-variable variableName="list" value="#[flowVars['listdata']]" doc:name="Variable"/>
                        </when>
                        <otherwise>
                            <logger message="no list id" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </foreach>
            </when>
            <otherwise>
                <logger message="data" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildResponseUserEvents.dwl"/>
        </dw:transform-message>

        <foreach collection="#[json:notifications]" doc:name="Notifications">
            <set-variable variableName="event" value="#[payload]" doc:name="Variable"/>
            <choice doc:name="Condition checking for notifications">
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='createList' &amp;&amp; flowVars.event=='list-created']">
                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username])  created list  **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="CREATE_LIST"/>
                </when>
                <when expression="#[(flowVars.trigResponse.hookResponse.action.type =='createCard' || flowVars.trigResponse.hookResponse.action.type =='emailCard') &amp;&amp; flowVars.event=='card-created']">
                    <choice doc:name="CREATE_CARD">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was created by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') in: \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="CREATE_CARD"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was created by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') in: \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="CREATE_CARD"/>
                        </when>
                        <otherwise>
                            <logger level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.old.name !=null &amp;&amp; flowVars.event=='card-renamed']">
                    <choice doc:name="CARD-RENAME">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Card **'+flowVars.trigResponse.hookResponse.action.data.old.name+'**  was renamed as ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') in \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="CARD_RENAME"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Card **'+flowVars.trigResponse.hookResponse.action.data.old.name+'**  was renamed as ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') in \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="CARD__RENAME"/>
                        </when>
                        <otherwise>
                            <logger message="No message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='addMemberToCard' &amp;&amp; flowVars.event=='member-addedto-card']">
                    <choice doc:name="ADD MEMEBER -TO CARD">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) added [#[flowVars.trigResponse.hookResponse.action.member.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.member.username]) to card [#[flowVars.trigResponse.hookResponse.action.data.card.name]](https://www.trello.com/c/#[flowVars.trigResponse.hookResponse.action.data.card.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.card.idShort]-#[flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')])  in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="ADDMEMBER_TOCARD"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) added [#[flowVars.trigResponse.hookResponse.action.member.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.member.username]) to card [#[flowVars.trigResponse.hookResponse.action.data.card.name]](https://www.trello.com/c/#[flowVars.trigResponse.hookResponse.action.data.card.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.card.idShort]-#[flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')])  in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="ADDMEMEBER-TO-CARD"/>
                        </when>
                        <otherwise>
                            <logger message="No message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='addChecklistToCard' &amp;&amp; flowVars.event=='checklist-card-created']">
                    <choice doc:name="ADD-CHECKLIST">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable variableName="postMessage" value="#['Checklist **'+flowVars.trigResponse.hookResponse.action.data.checklist.name.trim()+'** was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ADD_CHECKLIST"/>
                        </when>
                        <when expression="#[flowVars.listId == false]">
                            <set-variable variableName="postMessage" value="#['Checklist **'+flowVars.trigResponse.hookResponse.action.data.checklist.name.trim()+'** was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ADD_CHECKLIST"/>
                        </when>
                        <otherwise>
                            <logger message="No message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.card.due != null &amp;&amp; flowVars.trigResponse.hookResponse.action.data.old.due == null &amp;&amp; flowVars.event=='duedate-changed']">
                    <choice doc:name="DUEDATE-CHANGE">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Due date was updated to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+').\n\n Due date details: \n - *Due Date*: **'+flowVars.trigResponse.hookResponse.action.data.card.due+'** \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DUEDATE_CHANGE"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Due date was updated to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+').\n\n Due date details: \n - *Due Date*: **'+flowVars.trigResponse.hookResponse.action.data.card.due+'** \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DUEDATE-CHANGE"/>
                        </when>
                        <otherwise>
                            <logger message="No message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.old.dueComplete != null &amp;&amp; flowVars.event=='duedate-completed']">
                    <choice doc:name="DUEDATE-COMPLETE">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Due date was completed in card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+').\n\n Due date details: \n - *Due Date*: **'+flowVars.trigResponse.hookResponse.action.data.card.due+'** \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DUEDATE_COMPLETED"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Due date was complted in card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+').\n\n Due date details: \n - *Due Date*: **'+flowVars.trigResponse.hookResponse.action.data.card.due+'** \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DUEDATE_COMPLETED"/>
                        </when>
                        <otherwise>
                            <logger message="No message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='addLabelToCard' &amp;&amp; flowVars.event=='label-changed']">
                    <logger message="#[flowVars.listId ==flowVars.list]  &amp;&amp;&amp; #[flowVars.listId] ==#[flowVars.list]" level="INFO" doc:name="Logger"/>
                    <choice doc:name="ADD-LABEL">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable variableName="postMessage" value="#['Label **'+flowVars.trigResponse.hookResponse.action.data.label.color+'** was changed  by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ADDLABEL"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Label **'+flowVars.trigResponse.hookResponse.action.data.label.color+'** was changed  by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ADDLABEL"/>
                        </when>
                        <otherwise>
                            <logger message="no message to spark room" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.card.desc != null &amp;&amp; flowVars.event=='description-changed']">
                    <choice doc:name="DESCRIPTION_CHANGE">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Description was updated to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Description details are: \n - *Description*: &quot;**'+flowVars.trigResponse.hookResponse.action.data.card.desc+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DESCRIPTION_CHANGE"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Description was updated to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Description details are: \n - *Description*: &quot;**'+flowVars.trigResponse.hookResponse.action.data.card.desc+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="DESCRIPTION-CHANGE"/>
                        </when>
                        <otherwise>
                            <logger message="no message" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='commentCard' &amp;&amp; flowVars.event=='comment-addedto-card']">
                    <choice doc:name="POST-COMMENT">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.text.toString().contains('\n\n')]">
                                    <expression-component doc:name="Expression"><![CDATA[flowVars.comment=flowVars.trigResponse.hookResponse.action.data.text.toString().split('\n\n')]]></expression-component>
                                    <logger message="comment #[flowVars.comment]" level="INFO" doc:name="Logger"/>
                                    <set-variable variableName="postMessage" value=" *#['A comment to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Comment Details: \n * Comment: &quot;**'+flowVras.comment[1]+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="Variable"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="#['A comment to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Comment Details: \n * Comment: &quot;**'+flowVars.trigResponse.hookResponse.action.data.text+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="POST_COMMENT"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.text.toString().contains('\n\n')]">
                                    <expression-component doc:name="Expression"><![CDATA[flowVars.comment=flowVars.trigResponse.hookResponse.action.data.text.toString().split('\n\n')]]></expression-component>
                                    <set-variable variableName="postMessage" value="#['A comment to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Comment Details: \n * Comment: &quot;**'+flowVras.comment[1]+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="Variable"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="#['A comment to card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+'). \n\n Comment Details: \n * Comment: &quot;**'+flowVars.trigResponse.hookResponse.action.data.text+'**&quot; \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="POST-COMMENT"/>
                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="no message" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='addAttachmentToCard' &amp;&amp; flowVars.event=='attachment-addedto-card']">
                    <choice doc:name="ATTACHMENT-TOCARD">
                        <when expression="#[flowVars.listId == flowVars.list]">
                            <set-variable variableName="postMessage" value="#['Attachment ['+flowVars.trigResponse.hookResponse.action.data.attachment.name+']('+flowVars.trigResponse.hookResponse.action.data.attachment.url+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+')']" doc:name="ATTACHMENT_CARD"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Attachment ['+flowVars.trigResponse.hookResponse.action.data.attachment.name+']('+flowVars.trigResponse.hookResponse.action.data.attachment.url+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+')']" doc:name="ATTACHMENT-CARD"/>
                        </when>
                        <when expression="#[flowVars.listId == flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="#['Attachment ['+flowVars.trigResponse.hookResponse.action.data.attachment.name+']('+flowVars.trigResponse.hookResponse.action.data.attachment.url+') was added by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+')']" doc:name="ATTACHMENT-CARD"/>
                        </when>
                        <otherwise>
                            <logger message="NO Message" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateBoard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.board.name != null &amp;&amp; flowVars.event=='board-renamed']">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.trigResponse.hookResponse.action.data.old.toString().contains('prefs')]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.old.prefs.toString().contains('permissionLevel')]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) updated board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')]) permission level from **#[flowVars.trigResponse.hookResponse.action.data.old.prefs.permissionLevel]** to **#[flowVars.trigResponse.hookResponse.action.data.board.prefs.permissionLevel]** " doc:name="permisson change"/>
                                </when>
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.old.prefs.toString().contains('background')]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) updated board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')]) background from **#[flowVars.trigResponse.hookResponse.action.data.old.prefs.background]** to **#[flowVars.trigResponse.hookResponse.action.data.board.prefs.background]** " doc:name="Variable"/>
                                </when>
                                <otherwise>
                                    <logger message="no data" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when expression="#[!(flowVars.trigResponse.hookResponse.action.data.old.toString().contains('prefs'))]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.old.toString().contains('close')]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) deleted board **#[flowVars.trigResponse.hookResponse.action.data.board.name]**" doc:name="BOARD CLOSED"/>
                                </when>
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.old.toString().contains('name')]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) updated board name from **#[flowVars.trigResponse.hookResponse.action.data.old.name]** to [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="BOARD_RENAME"/>
                                </when>
                                <otherwise>
                                    <logger message="NO MESSAGE TO SPARK ROOM" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="no update in board" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateList' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.list.closed !=null &amp;&amp; flowVars.event=='list-archived-unarchived']">
                    <choice doc:name="LIST-ARCHIVE">
                        <when expression="#[flowVars.listId == flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.list.closed =='true']">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) archived list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST-ARCHIVE"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) unarchived list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="Variable"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.list.closed =='true']">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) archived list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST-ARCHIVE"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) unarchived list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST_UNARCHIVE"/>
                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='addMemberToBoard' &amp;&amp; flowVars.event=='member-addedto-board']">
                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.member.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.member.username]) was added to board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')]) by [#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username])" doc:name="ADDMEMEBER_TOBOARD"/>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateList' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.old.name != empty &amp;&amp; flowVars.event=='list-renamed']">
                    <choice doc:name="LIST-RENAME">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) changed list name of  **#[flowVars.trigResponse.hookResponse.action.data.old.name]**  to **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board  [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST_RENAME"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) changed list name of  **#[flowVars.trigResponse.hookResponse.action.data.old.name]**  to **#[flowVars.trigResponse.hookResponse.action.data.list.name]** in board  [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST-RENAME"/>
                        </when>
                        <otherwise>
                            <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='moveListFromBoard' &amp;&amp; flowVars.event=='list-movedto-otherboard']">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.trigResponse.hookResponse.action.data.boardTarget !=null]">
                            <Trello:get-board-by-id config-ref="Trello__Configuration" boardId="#[flowVars.trigResponse.hookResponse.action.data.boardTarget.id]" token="#[flowVars.accessToken]" doc:name="Trello"/>
                            <json:object-to-json-transformer doc:name="Object to JSON"/>
                            <logger message="Board info after json #[payload]" level="INFO" doc:name="Logger"/>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
                            </dw:transform-message>
                            <logger message="Board info after transform message #[payload]" level="INFO" doc:name="Logger"/>
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) moved list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** from board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')]) to board [#[payload.name]](#[payload.url])" doc:name="LIST_MOVED"/>
                                </when>
                                <when expression="#[flowVars.listId ==false]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) moved list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** from board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')]) to board [#[payload.name]](#[payload.url])" doc:name="LIST-MOVED"/>
                                </when>
                                <otherwise>
                                    <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when expression="#[flowVars.trigResponse.hookResponse.action.data.boardTarget==null]">
                            <logger level="INFO" doc:name="Logger"/>
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) moved list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** from board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="List_moved"/>
                                </when>
                                <when expression="#[flowVars.listId ==false]">
                                    <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) moved list **#[flowVars.trigResponse.hookResponse.action.data.list.name]** from board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="LIST-MOVED"/>
                                </when>
                                <otherwise>
                                    <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="No moves occure" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.card.closed != null &amp;&amp; flowVars.event=='card-archived']">
                    <choice doc:name="CARD-ARCHIVED">
                        <when expression="#[flowVars.listId ==flowVars.trigResponse.hookResponse.action.data.list.id]">
                            <choice doc:name="CARD_UNARCHIVE">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.card.closed =='true']">
                                    <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was archived by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') at:\n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+') ']" doc:name="CARD_ARCHIVED"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was unarchived by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') at:\n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+') ']" doc:name="Variable"/>
                                </otherwise>
                            </choice>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <choice doc:name="Choice">
                                <when expression="#[flowVars.trigResponse.hookResponse.action.data.card.closed =='true']">
                                    <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was archived by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') at:\n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+') ']" doc:name="CARD-ARCHIVE"/>
                                </when>
                                <otherwise>
                                    <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was unarchived by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') at:\n - *List*: '+flowVars.trigResponse.hookResponse.action.data.list.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+') ']" doc:name="Variable"/>
                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type =='updateChecklist' &amp;&amp; flowVars.event=='checklist-renamed']">
                    <choice doc:name="CHECKLIST-RENAME">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) updated checklist name of **#[flowVars.trigResponse.hookResponse.action.data.old.name.trim()]**  To  **#[flowVars.trigResponse.hookResponse.action.data.checklist.name.trim()]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="CHECKLIST_RENAMED"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="[#[flowVars.trigResponse.hookResponse.action.memberCreator.fullName]](https://www.trello.com/#[flowVars.trigResponse.hookResponse.action.memberCreator.username]) updated checklist name of **#[flowVars.trigResponse.hookResponse.action.data.old.name.trim()]**  To  **#[flowVars.trigResponse.hookResponse.action.data.checklist.name.trim()]** in board [#[flowVars.trigResponse.hookResponse.action.data.board.name]](https://www.trello.com/b/#[flowVars.trigResponse.hookResponse.action.data.board.shortLink]/#[flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')])" doc:name="Variable"/>
                        </when>
                        <otherwise>
                            <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type=='createCheckItem' &amp;&amp; flowVars.event=='checklist-item-created']">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable variableName="postMessage" value="#['Checklist item  was created by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *Checklist Item*: &quot;**'+flowVars.trigResponse.hookResponse.action.data.checkItem.name+'**&quot; \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ITEM_CREATED"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable variableName="postMessage" value="#['Checklist item  was created by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') to: \n - *Checklist Item*: **'+flowVars.trigResponse.hookResponse.action.data.checkItem.name+'** \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" doc:name="ITEM-CREATED"/>
                        </when>
                        <otherwise>
                            <logger message="NO MESSAGE" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type=='updateCard' &amp;&amp; flowVars.trigResponse.hookResponse.action.data.old.idList != null &amp;&amp; flowVars.event=='card-moved']">
                    <set-variable variableName="postMessage" value="#['Card ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') was moved by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') in:\n - *List*: '+flowVars.trigResponse.hookResponse.action.data.listAfter.name+' \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+') ']" doc:name="Card Moved"/>
                </when>
                <when expression="#[flowVars.trigResponse.hookResponse.action.type=='updateCheckItemStateOnCard' &amp;&amp; flowVars.event=='item-complete']">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.listId ==flowVars.list]">
                            <set-variable doc:name="ITEM-COMPLETE" value="#['Checklist item  was completed by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') \n - *Checklist Item*: &quot;**'+flowVars.trigResponse.hookResponse.action.data.checkItem.name+'**&quot; \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" variableName="postMessage"/>
                        </when>
                        <when expression="#[flowVars.listId ==false]">
                            <set-variable doc:name="ITEM-COMPLETE" value="#['Checklist item  was completd by ['+flowVars.trigResponse.hookResponse.action.memberCreator.fullName+'](https://www.trello.com/'+flowVars.trigResponse.hookResponse.action.memberCreator.username+') \n - *Checklist Item*: **'+flowVars.trigResponse.hookResponse.action.data.checkItem.name+'** \n - *Card*: ['+flowVars.trigResponse.hookResponse.action.data.card.name+'](https://www.trello.com/c/'+flowVars.trigResponse.hookResponse.action.data.card.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.card.idShort+'-'+flowVars.trigResponse.hookResponse.action.data.card.name.replaceAll(' ','%20')+') \n - *Board*: ['+flowVars.trigResponse.hookResponse.action.data.board.name+'](https://www.trello.com/b/'+flowVars.trigResponse.hookResponse.action.data.board.shortLink+'/'+flowVars.trigResponse.hookResponse.action.data.board.name.replaceAll(' ','%20')+')']" variableName="postMessage"/>
                        </when>
                        <otherwise>
                            <logger level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise>
                    <logger message="No events " level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>


        </foreach>
        <choice doc:name="Choice">
            <when expression="#[flowVars.postMessage != null]">
                <dw:transform-message doc:name="Build Post Format Message Response">
                    <dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
                </dw:transform-message>
                <logger message="message to spark room #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
            </when>
            <when expression="#[flowVars.postMessage == null]">
                <dw:transform-message doc:name="Build Post Format Message Response">
                    <dw:set-payload resource="classpath:dwScripts/BuildMessageResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="data" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>

    </flow>
        
    <flow name="postIntegrationSettingsFlow">
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload mimeType="application/json"/>
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
</dw:transform-message>
        <logger message="#[payload] &amp;&amp; #[payload['instanceId']] " level="DEBUG" doc:name="Logger"/>
        <set-variable variableName="userId" value="#[payload['userId']]" doc:name="Set Trello User"/>
        <set-variable variableName="boardId" value="#[payload['boardId']]" doc:name="Variable"/>
        <set-variable variableName="integrationId" value="#[payload['integrationId']]" doc:name="Set Integration Id"/>

        <logger message="#[flowVars.integrationId] &amp;&amp; #[flowVars.userId]" level="INFO" doc:name="Logger"/>
        <flow-ref name="getRuntimeAccessTokenFlow" doc:name="getRuntimeAccessTokenFlow"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.accessToken !=null &amp;&amp; flowVars.boardId == null]">
                <enricher target="#[flowVars['userDetails']]" doc:name="Message Enricher">
                    <flow-ref name="getTrelloUserInformationFlow" doc:name="getTrelloUserInformationFlow"/>
                </enricher>
                <logger message="USER:#[flowVars['accessToken']] &amp;&amp; USERDETAILS:#[flowVars['userDetails']]" level="INFO" doc:name="Logger"/>
                <enricher target="#[flowVars['boardsResponse']]" doc:name="Message Enricher">
                    <flow-ref name="getTrelloBoardsFlow" doc:name="getTrelloBoardsFlow"/>
                </enricher>
                <logger message="Boards:#[flowVars['boardsResponse']]" level="INFO" doc:name="Logger"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.userDetails.statusCode ==401 &amp;&amp; flowVars.userDetails.statusMessage=='invalid token']">
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload resource="classpath:dwScripts/buildValidateToken.dwl"/>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Build Get Integration Settings Response">
                            <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
                        </dw:transform-message>
                    </otherwise>
                </choice>

            </when>
            <when expression="#[flowVars.accessToken !=null &amp;&amp; flowVars.boardId  != null]">
                <flow-ref name="getListsFromBoardsFlow" doc:name="getListsFromBoardsFlow"/>
                <logger message="list Response from dettings flow #[flowVars['listResponse']]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Build Get Lists In Boards Response">
                    <dw:set-payload resource="classpath:dwScripts/buildgetListResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/buildPostTokenValidity.dwl"/>
                </dw:transform-message>
            </otherwise>
        </choice>

    </flow>
    <flow name="getRuntimeAccessTokenFlow">
        <logger message="HOst: ${integrations.runtime.host} +++POrt ${integrations.runtime.port}" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/{integrationId}/appTokens" method="GET" doc:name="HTTP CALL RUNTIME FOR ACCESSTOKEN"  >
            <http:request-builder>
                <http:query-param paramName="userId" value="#[flowVars.userId]"/>
                <http:uri-param paramName="integrationId" value="#[flowVars.integrationId]"/>





            </http:request-builder>

        </http:request>
        <object-to-string-transformer returnClass="java.lang.String" doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="accessToken" value="#[json:[0]/accessToken]" doc:name="Set Trello Token"/>
        <logger message="#[flowVars.accessToken]" level="INFO" doc:name="Logger"/>
    </flow>
    
    <flow name="setupIntegrationFlow">
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <enricher target="#[flowVars.settingsResponse]" doc:name="Message Enricher">
            <dw:transform-message doc:name="Transform Message">
           <dw:input-payload mimeType="application/json"/>
                <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
                </dw:transform-message>
        </enricher>
        <logger message="#[flowVars.settingsResponse.instanceId]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="userId" value="#[flowVars['settingsResponse']['userId']]" doc:name="Set Trello User"/>
        <set-variable variableName="integrationId" value="#[flowVars['settingsResponse']['integrationId']]" doc:name="Set Integration Id"/>
        <set-variable variableName="boardId" value="#[flowVars['settingsResponse']['configJson']['board_id']]" doc:name="Set BoardId"/>
        <set-variable variableName="instanceUuid" value="#[flowVars['settingsResponse']['instanceUuid']]" doc:name="Set instanceUuid"/>
        <flow-ref name="getRuntimeAccessTokenFlow" doc:name="getRuntimeAccessTokenFlow"/>
        <set-variable variableName="token" value="#[flowVars['accessToken']]" doc:name="Set Trello Token"/>
        <enricher target="#[flowVars['hookResponse']]" doc:name="Message Enricher">
            <flow-ref name="postTrelloHookFlow" doc:name="postTrelloHookFlow"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars.hookResponse.id != empty]">
                <set-variable variableName="webhook_id" value="#[flowVars['hookResponse']['id']]" doc:name="Set Webhook Id"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/buildPutIntegrationResponse.dwl"/>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.hookResponse.id == empty]">
                <logger message="exception in webhook creation" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/buildWebhookFailedResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="Default" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances/{instanceId}" method="PUT" doc:name="HTTP">
            <http:request-builder>
                <http:uri-param paramName="instanceId" value="#[flowVars.settingsResponse.instanceId]"/>



            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Build Setup Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    
    <flow name="tearDownIntegrationFlow">
        <logger message="tearDown flow initial payload #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="configJson" value="#[json:configJson]" doc:name="Set Config Json"/>
        <dw:transform-message doc:name="BuildTearDown Integration  Request">
        <dw:input-payload mimeType="application/json"/>
            <dw:set-variable  resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="tearDown"/>
 </dw:transform-message>
        <logger message="Delete payload #[flowVars['tearDown']] " level="INFO" doc:name="Logger"/>
        <set-variable variableName="userId" value="#[flowVars['tearDown']['userId']]" doc:name="Set Trello User"/>
        <set-variable variableName="integrationId" value="#[flowVars['tearDown']['integrationId']]" doc:name="Set Integration Id"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildConfigJsonToJava.dwl"/>
        </dw:transform-message>
        <set-variable variableName="hookId" value="#[json:webhook_id]" doc:name="Set Hook Id"/>
        <flow-ref name="getRuntimeAccessTokenFlow" doc:name="getRuntimeAccessTokenFlow"/>
        <logger message="tearDown flow  #[flowVars.accessToken] " level="INFO" doc:name="Logger"/>
        <set-variable variableName="token" value="#[flowVars['accessToken']]" doc:name="Set Trello Token"/>
        <flow-ref name="deleteTrelloHookFlow" doc:name="deleteTrelloHookFlow"/>
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="healthCheckFlow">
        <logger message="Initial payload in health check flow #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <logger message="Health check flow started now" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message To Java">
        <dw:input-payload mimeType="application/json"/>
            <dw:set-variable variableName="healthCheckRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="userId" value="#[flowVars['healthCheckRequest']['userId']]" doc:name="Set UserId"/>
        <set-variable variableName="integrationId" value="#[flowVars['healthCheckRequest']['integrationId']]" doc:name="Set IntegrationId"/>


        <set-variable variableName="status" value="#['ACTIVE']" doc:name="Variable"/>
        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="integrationId" value="#[flowVars['integrationId']]"/>
                <http:query-param paramName="userId" value="#[flowVars['userId']]"/>
                <http:query-param paramName="status" value="ACTIVE"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <set-payload value="#[payload[0]['configJson']]" doc:name="Set Payload"/>
        <set-variable variableName="hookId" value="#[json:webhook_id]" doc:name="Variable"/>
        <flow-ref name="getRuntimeAccessTokenFlow" doc:name="getRuntimeAccessTokenFlow"/>
        <logger message="boards response in healthcheck flow  #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.accessToken !=null &amp;&amp; payload !=null]">
                <flow-ref name="getTrelloUserInformationFlow" doc:name="getTrelloUserInformationFlow"/>
                <logger message="boards #[payload]" level="INFO" doc:name="Logger"/>
                <enricher target="#[flowVars['updateHookResponse']]" doc:name="Message Enricher">
                    <flow-ref name="updateTrelloWebhookFlow" doc:name="updateTrelloWebhookFlow"/>
                </enricher>
                <logger message="update webhook#[payload]" level="INFO" doc:name="Logger"/>
                <flow-ref name="deleteTrelloHookFlow" doc:name="deleteTrelloHookFlow"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload resource="classpath:dwScripts/buildPostHealthCheckResponse.dwl"/>
                </dw:transform-message>
            </otherwise>
        </choice>


        <choice doc:name="Choice">
            <when expression="#[flowVars.accessToken !=null]">
               <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="HTTP">
<http:request-builder>
                        <http:query-param paramName="integrationId" value="#[flowVars.integrationId]"/>
                        <http:query-param paramName="userId" value="#[flowVars.userId]"/>
                        <http:query-param paramName="status" value="#[flowVars.status]"/>



</http:request-builder>
</http:request>
                <logger message="  USERID: #[flowVars['userId']] &amp;&amp; IntegrationId:#[flowVars['integrationId']] &amp;&amp;INSTANCERESULT:#[flowVars['instanceResult']]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="instanceResult"/>
                </dw:transform-message>

                <choice doc:name="Choice">
                    <when expression="#[flowVars.instanceResult.toString() !='{message=No results}']">

                        <logger message="configJson#[flowVars.configJsonResult]" level="INFO" doc:name="Logger"/>
                        <dw:transform-message doc:name="Build Health Check Response">
                            <dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl"/>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message To Json">
                        <dw:set-payload resource="classpath:dwScripts/buildPostHealthCheckResponse.dwl"/>
                            
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                <dw:set-payload resource="classpath:dwScripts/buildPostHealthCheckResponse.dwl"/>
                    
                </dw:transform-message>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
<set-variable variableName="healthCheckException" value="#[exception.message]" doc:name="HealthCheckException"/>
<dw:transform-message doc:name="Transform Message">
<dw:set-payload resource="classpath:dwScripts/healthCkeckExceptionOutput.dwl"/>
</dw:transform-message>
</catch-exception-strategy>
    </flow>
    <flow name="TwoWayFlow">
        <logger message="Two Way Flow #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
