<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
  	
  	<http:request-config name="HTTP_Access_Token_Request_Configuration" protocol="HTTPS" host="${googleCalender.api.access.token.host}" port="${googleCalender.api.access.token.port}"  doc:name="HTTP Request Configuration" basePath="${googleCalender.api.access.token.base.path}"/>
  	
 	<http:request-config name="HTTP_Operations_Request_Configuration" protocol="HTTPS" host="${googleCalender.api.operations.host}" port="${googleCalender.api.operations.port}" basePath="${googleCalender.api.operations.base.path}" doc:name="HTTP Request Configuration"/>
    <vm:connector name="VM1" validateConnections="true" doc:name="VM"/>
     
    <flow name="postgoogleCalenderTokenFlow">
        <set-payload value="#[{&quot;code&quot;:flowVars.tokenRequest.authSettings.code,&quot;client_id&quot;:&quot;${googleCalender.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleCalender.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleCalender.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleCalender.integration.access.grantType}&quot;}]" doc:name="Set Payload" />
        <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleCalender.api.access.token.path}" method="POST" doc:name="Access Token Request"  >
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Response to Json">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJson.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="postgoogleCalenderRefreshTokenFlow">
        <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleCalender.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleCalender.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleCalender.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleCalender.integration.refresh.grantType}&quot;}]" doc:name="Set Payload"/>
        <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleCalender.api.access.token.path}" method="POST" doc:name="Refresh Token Request">
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="statusDisableForAnInstance">
        <dw:transform-message doc:name="Transform Message">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "status": "DISABLED"
}]]></dw:set-payload>
                                        </dw:transform-message>
        <logger message="status Disable = #[message.payloadAs(java.lang.String)]::::::::::::::::#[flowVars.instanceId]" level="INFO" doc:name="Logger"/>
                                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances/{instanceId}" method="PUT" doc:name="Disable The Status for the instance">
                                            <http:request-builder>
                <http:uri-param paramName="instanceId" value="#[flowVars.instanceId]"/>
                                            </http:request-builder>
                                        </http:request>
    </flow>
    <flow name="getgoogleCalendersListFlow">
        <http:request config-ref="HTTP_Operations_Request_Configuration" path="/users/me/calendarList" method="GET" doc:name="Get Calenders List">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
        <catch-exception-strategy when="exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)" doc:name="Catch Exception Strategy">
     		<set-property propertyName="http.status" value="#[400]" doc:name="400" />
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
  "error": "invalid_grant",
  "error_description": "Bad Request",
  "error_uri": ""
}]]></dw:set-payload>
                </dw:transform-message>
 		</catch-exception-strategy>
 </choice-exception-strategy>
    </flow>
    <flow name="getTokenByChoiceCondition">
        <logger message="getTokenByChoice  intgrnId=#[flowVars.integrationId]+++++++++++++++userId=#[flowVars.userId]" level="INFO" doc:name="Logger"/>
    <choice doc:name="Choice">
            <when expression="#[flowVars.integrationId != null &amp;&amp; flowVars.userId != null]">
                <enricher target="#[flowVars.integrationTokenResponse]" doc:name="Message Enricher">
                    <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
                </enricher>
                <choice doc:name="Check Token Result">
                    <when expression="#[flowVars.integrationTokenResponse.toString() != '{message=No results}']">
                        <choice doc:name="Check Refresh Empty">
                            <when expression="#[flowVars.integrationTokenResponse[0].refreshToken != null]">
                                <set-variable variableName="refreshToken" value="#[flowVars.integrationTokenResponse[0].refreshToken]" doc:name="Set Refresh Token"/>
                                <enricher target="#[flowVars.refreshTokenResponse]" doc:name="Message Enricher">
                                    <flow-ref name="postgoogleCalenderRefreshTokenFlow" doc:name="postgoogleCalenderRefreshTokenFlow"/>
                                </enricher>
                                <choice doc:name="Choice">
                                    <when expression="#[flowVars.refreshTokenResponse.toString() != '{error=invalid_grant, error_description=Bad Request}']">
                                        <set-variable variableName="token" value="#[flowVars.refreshTokenResponse.access_token]" doc:name="Set Token"/>
                                        <dw:transform-message doc:name="Build Tear Down Integration Response">
                                            <dw:set-payload resource="classpath:dwScripts/buildTokenFlowReponse.dwl"/>
                                        </dw:transform-message>
                                    </when>
                                    <otherwise>
                                        <dw:transform-message doc:name="Transform Message">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"message":"Generate Token By Refresh Token Failed in tearDown Flow"
}]]></dw:set-payload>
                                        </dw:transform-message>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"message":"Found Refresh Token Empty In Tear Down Flow"
}]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Found Token Result Empty In tearDown Flow"
}]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	"message": "Found UserId or IntegrationId empty In tearDown Flow"
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
    </flow>
       
     
	<flow name="startGoogleCalendarPollingFlow">
    <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get By Integration Id">
            <http:request-builder>
                <http:query-param paramName="integrationId" value="${googleCalender.integration.id}"/>
                <http:query-param paramName="status" value="ACTIVE"/>



            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="instancesPayload"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars.instancesPayload.toString() != '{message=No results}']">
                <set-session-variable variableName="maap" value="#[new java.util.HashMap()]" doc:name="Set Maap"/>
                <foreach collection="#[flowVars.instancesPayload]" doc:name="Loop All Instances And Add UserIds,InstanceUuids To Maap">
            <choice doc:name="Check UserId Exists">
                <when expression="#[maap.containsKey(payload.userId)]">
                    <expression-component doc:name="Expression To Append Element"><![CDATA[maap.get(payload.userId).add(payload.instanceUuid)]]></expression-component>
                </when>
                <otherwise>
                    <set-variable variableName="uuidList" value="#[new java.util.ArrayList()]" doc:name="Create UUID List"/>
                    <expression-component doc:name="Expression To Add First Element"><![CDATA[uuidList.add(payload.instanceUuid);
maap.put(payload.userId,uuidList)]]></expression-component>
                </otherwise>
            </choice>
        </foreach>
        <set-variable variableName="userIdSet" value="#[sessionVars.maap.keySet()]" doc:name="Set UserId Set"/>
                <set-variable variableName="userIds" value="#[new java.util.ArrayList()]" doc:name="UseId List"/>
                <expression-component doc:name="Expression Set to List"><![CDATA[userIds.addAll(flowVars.userIdSet);]]></expression-component>
                <logger message="MapResult=#[sessionVars.maap]==&gt;userIdArray=#[flowVars.userIds]" level="INFO" doc:name="Logger"/>
                <foreach collection="#[flowVars.userIds]" doc:name="Loop All User Ids">
            <set-session-variable variableName="userId" value="#[payload]" doc:name="Set UserId"/>
            <choice doc:name="Choice">
                <when expression="#[sessionVars.userId != empty]">
                    <vm:outbound-endpoint exchange-pattern="one-way" path="ATPT-flow" connector-ref="VM1" doc:name="AccessToken and PageToken"/>
                </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger" message="UserId Null In go To VM"/>
                </otherwise>
            </choice>
        </foreach>
            </when>
            <otherwise>
                <logger message="get by integrationId Result ========= ++++++ #[flowVars.instancesPayload]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        
        </flow>
    
    
    <flow name="AccessTokenAndPageTokenFlow">
        <vm:inbound-endpoint exchange-pattern="one-way" path="ATPT-flow" connector-ref="VM1" doc:name="AccessToken and PageToken"/>
        <logger message="VM payload=#[payload] ::::::::::::::::userId=#[sessionVars.userId]==&gt;#[sessionVars.maap.get(sessionVars.userId)]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/{integrationId}/appTokens" method="GET" doc:name="Get Google Drive Access Token">
            <http:request-builder>
                <http:query-param paramName="client_id" value="${runtime.clientidenforcement.id}"/>
                <http:query-param paramName="client_secret" value="${runtime.clientidenforcement.secret}"/>
                <http:query-param paramName="userId" value="#[sessionVars.userId]"/>
                <http:uri-param paramName="integrationId" value="${googleCalender.integration.id}"/>

            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="integrationTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <logger message="token payload of zero =  #[flowVars.integrationTokenResponse[0]]" level="INFO" doc:name="Logger"/>

        <choice doc:name="Token Response">
            <when expression="#[flowVars.integrationTokenResponse.toString()=='{message=No results}']">
                <logger level="INFO" doc:name="Logger" message="token Response = No Results in Polling"/>
            </when>
            <otherwise>
                <choice doc:name="Check Refresh Token">
                    <when expression="#[flowVars.integrationTokenResponse[0].refreshToken != null]">
                        <set-variable variableName="serverTime" value="#[(new org.mule.el.datetime.DateTime(server.dateTime)).plusSeconds(300)]" doc:name="ServerTime"/>
                        <set-variable variableName="dbexpire" value="#[(new org.mule.el.datetime.DateTime(flowVars.integrationTokenResponse[0].expires))]" doc:name="Db Expire"/>
                        <choice doc:name="Check Access Token Expires">
                            <when expression="#[flowVars.serverTime.isAfter(flowVars.dbexpire)]">
                                <set-variable variableName="refreshToken" value="#[flowVars.integrationTokenResponse[0].refreshToken]" doc:name="Set Refresh Token"/>
                                <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleCalender.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleCalender.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleCalender.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleCalender.integration.refresh.grantType}&quot;}]" doc:name="Refresh Token Body"/>
                                <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleCalender.api.access.token.path}" method="POST" doc:name="GET Google Calendar Access Token">
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <logger message="Refresh Token response from http = #[message.payloadAs(java.lang.String)] :::::::::::for tokenId=#[flowVars.integrationTokenResponse[0].tokenId] userId=#[flowVars.integrationTokenResponse[0].userId]=#[sessionVars.userId]" level="INFO" doc:name="Logger"/>
                                <dw:transform-message doc:name="Transform Message To Java">
                                    <dw:set-variable variableName="refreshTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                </dw:transform-message>
                                <set-variable variableName="expires_in" value="#[flowVars.refreshTokenResponse.expires_in]" doc:name="Set expires_in"/>
                                <set-variable variableName="GCAccessToken" value="#[flowVars.refreshTokenResponse.access_token]" doc:name="Set AccessToken"/>
                                <choice doc:name="Check For Revoke Access Token">
                                    <when expression="#[flowVars.expires_in != null &amp;&amp; flowVars.GCAccessToken != null]">
                                        <dw:transform-message doc:name="Prepare Json Body">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "accessToken": flowVars.GCAccessToken,
  "expires": flowVars.expires_in
}]]></dw:set-payload>
                                        </dw:transform-message>
                                        <logger message="put Access Token payload==&gt; RTR=#[flowVars.refreshTokenResponse] #[flowVars.expires_in]==#[flowVars.refreshTokenResponse.expires_in]++++++++#[flowVars.GDAccessToken]==#[flowVars.refreshTokenResponse.access_token] payload as body = #[message.payloadAs(java.lang.String)] :::::::::::::::: tokenId=#[flowVars.integrationTokenResponse[0].tokenId]:::::::::: intgrId=${googleCalender.integration.id}" level="INFO" doc:name="Logger"/>
                                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/{integrationId}/appTokens/{appTokenId}" method="PUT" doc:name="Put Access Token">
                                            <http:request-builder>
                                                <http:query-param paramName="client_id" value="${runtime.clientidenforcement.id}"/>
                                                <http:query-param paramName="client_secret" value="${runtime.clientidenforcement.secret}"/>
                                                <http:uri-param paramName="integrationId" value="${googleCalender.integration.id}"/>
                                                <http:uri-param paramName="appTokenId" value="#[flowVars.integrationTokenResponse[0].tokenId]"/>
                                                <http:header headerName="Content-Type" value="application/json"/>

                                            </http:request-builder>
                                            <http:failure-status-code-validator values="500..599"/>
                                        </http:request>
                                    </when>
                                    <otherwise>
                                        <logger level="INFO" doc:name="Logger" message="Refresh Token Not success For useId=#[sessionVars.userId]==&gt;tokenId=#[flowVars.integrationTokenResponse[0].tokenId]"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <set-variable variableName="GCAccessToken" value="#[flowVars.integrationTokenResponse[0].accessToken]" doc:name="AccessToken"/>
                            </otherwise>
                        </choice>
                        <foreach collection="#[sessionVars.maap.get(sessionVars.userId)]" doc:name="Loop All Instance Uuids">

                            <set-variable variableName="instanceUuid" value="#[payload]" doc:name="Set Instance Uuid"/>
                            <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get By Instance Uuid">
                                <http:request-builder>
                                    <http:query-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>
                                    <http:query-param paramName="status" value="ACTIVE"/>

                                </http:request-builder>
                            </http:request>

                            <dw:transform-message doc:name="Transform Message To Java">
                                <dw:set-variable variableName="instancesUuidResult"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                            </dw:transform-message>
                            <choice doc:name="Check No Result Condition">
                                <when expression="#[flowVars.instancesUuidResult.toString() != 'message = No results']">
                                    <set-variable variableName="conf" value="#[flowVars.instancesUuidResult[0].configJson]" doc:name="Store ConfigJson In Variable"/>
                                    <set-payload value="#[flowVars.conf]" mimeType="application/json" doc:name="Convert ConfigJson To Json"/>

                                    <dw:transform-message doc:name="Transform ConfigJson To Jave">
                                        <dw:set-variable variableName="configJsonValue"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                    </dw:transform-message>
                                    <set-variable variableName="timeBasedValue" value="#[flowVars.configJsonValue.time_base]" doc:name="Get Time Based Value"/>
                                    <set-variable variableName="offValue" value="#[flowVars.configJsonValue.offset]" doc:name="Set User TimeZone"/>
                                    <set-variable variableName="dayTimeBase" value="#[flowVars.configJsonValue.utcTime]" doc:name="Get Day Time Base"/>
                                    <set-variable variableName="calendar_id" value="#[flowVars.configJsonValue.calendar_id]" doc:name="Set Calendar Id"/>
                                    <set-variable variableName="timeMin" value="#[(new org.mule.el.datetime.DateTime(server.dateTime)).plusHours(-24)]" doc:name="Set timeMin"/>
                                    <set-variable variableName="timeMax" value="#[(new org.mule.el.datetime.DateTime(server.dateTime)).plusHours(24)]" doc:name="Set timeMax"/>
                                    <http:request config-ref="HTTP_Operations_Request_Configuration" path="/calendars/#[flowVars.calendar_id]/events" method="GET" doc:name="Get Calendar Events">
                                        <http:request-builder>
                                            <http:query-param paramName="timeMax" value="#[flowVars.timeMax]"/>
                                            <http:query-param paramName="timeMin" value="#[flowVars.timeMin]"/>
                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GCAccessToken]"/>

                                        </http:request-builder>
                                    </http:request>
									<logger message="calendar payload==&gt;  max = #[flowVars.timeMax] ++++ min = #[flowVars.timeMin] #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                                    <dw:transform-message doc:name="Transform Message To Java">
                                        <dw:set-variable variableName="GCItemsList"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                    </dw:transform-message>
                                    <set-variable variableName="PollingIntervalTime" value="-${polling.interval}" doc:name="PollingTime"/>

                                    <set-variable variableName="remainderArray" value="#[new java.util.ArrayList()]" doc:name="Set Remainders Array"/>
                                    <foreach collection="#[flowVars.GCItemsList.items]" doc:name="Loop All Items">
                                        <dw:transform-message doc:name="Transform Message To Java">
                                            <dw:set-variable variableName="itemDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                        </dw:transform-message>
                                        <choice doc:name="Check Status Cancelled">
                                            <when expression="#[flowVars.itemDetails.status != 'cancelled']">
                                                <set-variable variableName="itemCreateTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.created)).format('yyyy-MM-dd HH:mm:ss')]" doc:name="Event Create Time"/>
                                                <set-variable variableName="itemUpdateTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.updated)).format('yyyy-MM-dd HH:mm:ss')]" doc:name="Event Update Time"/>
                                                <logger message="start time for #[flowVars.itemDetails.start.dateTime] +++++++++ #[flowVars.itemDetails.summary]+++++++#[flowVars.itemDetails.start.containsKey('dateTime')]" level="INFO" doc:name="Logger"/>
                                                <choice doc:name="Choice">
                                                    <when expression="#[flowVars.itemDetails.start.containsKey('dateTime') &amp;&amp; flowVars.itemDetails.end.containsKey('dateTime')]">
                                                        <set-variable variableName="startDate" value="#[flowVars.itemDetails.start.dateTime.toString().split('T')[0]]" doc:name="Set Start Date"/>
                                                        <set-variable variableName="startTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.start.dateTime)).format(&quot;hh:mm a&quot;)]" doc:name="Set Start Time"/>
                                                        <set-variable variableName="endTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.end.dateTime)).format(&quot;hh:mm a&quot;)]" doc:name="Set End Time"/>
                                                        <set-variable variableName="startTimeToConvertUTC" value="#[flowVars.itemDetails.start.dateTime]" doc:name="Get Start Time To Convert UTC"/>
                                                        <set-variable variableName="addArrayStartTime" value="#[((new org.mule.el.datetime.DateTime(flowVars.startTimeToConvertUTC)).changeTimeZone('UTC'))]" doc:name="Variable"/>
                                                    </when>
                                                    <when expression="#[flowVars.itemDetails.start.containsKey('date') &amp;&amp; flowVars.itemDetails.end.containsKey('date')]">
                                                        <set-variable variableName="startDate" value="#[flowVars.itemDetails.start.date]" doc:name="Set Start Date"/>
                                                        <set-variable variableName="startTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.start.date)).format(&quot;hh:mm a&quot;)]" doc:name="Set Start Time"/>
                                                        <set-variable variableName="endTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.itemDetails.end.date)).format(&quot;hh:mm a&quot;)]" doc:name="Set End Time"/>
                                                        <set-variable variableName="startTimeToConvertUTC" value="#[flowVars.itemDetails.start.date]" doc:name="Get Start Time To Convert UTC"/>
                                                        <set-variable variableName="addArrayStartTime" value="#[((new org.mule.el.datetime.DateTime(flowVars.startTimeToConvertUTC)).changeTimeZone('UTC'))]" doc:name="Variable"/>
                                                    </when>
                                                    <otherwise>
                                                        <logger message="start and end time has default values  " level="INFO" doc:name="Logger"/>
                                                    </otherwise>
                                                </choice>
                                                <set-variable variableName="getDate" value="#[(new org.mule.el.datetime.DateTime(flowVars.startDate)).format(&quot;MMM dd&quot;)]" doc:name="Get Date"/>
                                                <set-variable variableName="serverTimeMinusTwo" value="#[server.dateTime.plusMinutes(-1).format(&quot;hh:mm a&quot;)]" doc:name="Server Time Minus polling Time"/>
                                    			<set-variable variableName="forCrUpServerTimeMinusPollingTime" value="#[server.dateTime.plusMinutes(flowVars.PollingIntervalTime).format('yyyy-MM-dd HH:mm:ss')]" doc:name="For CrUp Server Time Minus Polling Time"/>
                                    			<set-variable variableName="serverTimePlusTwo" value="#[server.dateTime.plusMinutes(2).format(&quot;hh:mm a&quot;)]" doc:name="Server Time Plus 1"/>
                                                <set-variable variableName="startTimeToUTC" value="#[((new org.mule.el.datetime.DateTime(flowVars.startTimeToConvertUTC)).changeTimeZone('UTC')).format(&quot;yyyy-MM-dd HH:mm:ss&quot;)]" doc:name="Convert Start Date Time To Utc"/>

												<expression-component doc:name="Get UTC Day"><![CDATA[flowVars.utcDay = flowVars.startTimeToUTC.toString().split(' ')[0]]]></expression-component>
												<expression-component doc:name="Get UTC Time"><![CDATA[flowVars.utcTime = flowVars.startTimeToUTC.toString().split(' ')[1]]]></expression-component>
												<set-variable variableName="utcTimeAMPM" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).format(&quot;hh:mm a&quot;)]" doc:name="Utc Time In  AM/PM"/>

                                                <choice doc:name="Check Created Or Updated">
                                            <when expression="#[(flowVars.itemCreateTime==flowVars.itemUpdateTime) &amp;&amp; (flowVars.itemCreateTime&gt;=flowVars.forCrUpServerTimeMinusPollingTime &amp;&amp; flowVars.itemCreateTime&lt;=server.dateTime.format('yyyy-MM-dd HH:mm:ss'))]">
                                                        <choice doc:name="Check Location and description">
                                                            <when expression="#[flowVars.itemDetails.location != null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                <set-variable variableName="postMessage" value="#['New Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') created in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+')  \n - Description : '+flowVars.itemDetails.description+'   \n - Location : '+flowVars.itemDetails.location+'  ']" doc:name="Event Create (loc &amp; desc) !=null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location == null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                <set-variable variableName="postMessage" value="#['New Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') created in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+')  \n - Description : '+flowVars.itemDetails.description+'   \n - Location : ---  ']" doc:name="Event Create Loctn null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location != null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                <set-variable variableName="postMessage" value="#['New Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') created in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+')  \n - Description : ---   \n - Location : '+flowVars.itemDetails.location+'  ']" doc:name="Event Create desptn null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location == null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                <set-variable variableName="postMessage" value="#['New Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') created in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+')  \n - Description : ---   \n - Location : ---  ']" doc:name="Event Create (loc and des) ==null"/>
                                                            </when>
                                                            <otherwise>
                                                                <logger message="event creation All condition failed" level="INFO" doc:name="Logger"/>
                                                            </otherwise>
                                                        </choice>

                                                <set-variable variableName="value" value="eventCreation" doc:name="Value"/>
                                            </when>
                                            <when expression="#[(flowVars.itemCreateTime&lt;flowVars.itemUpdateTime) &amp;&amp; (flowVars.itemUpdateTime&gt;=flowVars.forCrUpServerTimeMinusPollingTime &amp;&amp; flowVars.itemUpdateTime&lt;=server.dateTime.format('yyyy-MM-dd HH:mm:ss'))]">
                                                <choice doc:name="Update Message">

                                                    <when expression="#[flowVars.itemDetails.toString().contains('recurrence')]">
                                                                <choice doc:name="Check Loc &amp; Des">
                                                                    <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - on '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : '+flowVars.itemDetails.location+' \n - Recurrence : '+flowVars.itemDetails.recurrence[0]+' ']" doc:name="(Loc &amp; Des) !=null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - on '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : --- \n - Recurrence : '+flowVars.itemDetails.recurrence[0]+' ']" doc:name="Loc == null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - on '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : '+flowVars.itemDetails.location+' \n - Recurrence : '+flowVars.itemDetails.recurrence[0]+' ']" doc:name="Des == null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - on '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : --- \n - Recurrence : '+flowVars.itemDetails.recurrence[0]+' ']" doc:name="(Loc &amp; Des) == null"/>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger message="Update recurrent all conditions failed" level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>

                                                    </when>
                                                    <otherwise>
                                                                <choice doc:name="Check Loc &amp; Des">
                                                                    <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(Loc &amp; Des) != null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : ---']" doc:name="Loc == null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Des == null"/>
                                                                    </when>
                                                                    <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                        <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') updated in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : ---']" doc:name="(Loc &amp; Des) == null"/>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger message="update all conditions failed" level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>

                                                    </otherwise>
                                                </choice>
                                                <set-variable variableName="value" value="eventUpdate" doc:name="Value"/>
                                            </when>
                                                    <when expression="#[flowVars.timeBasedValue != null]">
                                                        <logger message="in time_based==&gt;startDate=#[flowVars.startDate] ==&gt; for event #[flowVars.itemDetails.summary]++++StartTime = #[flowVars.startTime]+++++++STiming =#[server.dateTime.format(&quot;hh:mm a&quot;)] ++++++ Server_Minus1=#[flowVars.serverTimeMinusTwo]+++++++Server_Plus1=#[flowVars.serverTimePlusTwo]++++" level="INFO" doc:name="Logger"/>
                                                        <choice doc:name="Check Time Based Values">
                                                            <when expression="#[flowVars.timeBasedValue=='15 minute before']">
                                                                <set-variable variableName="RTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).plusMinutes(-15).format(&quot;hh:mm a&quot;)]" doc:name="Reduce Start Time To 15 Mins"/>
                                                                <choice doc:name="15 min">
                                                                    <when expression="#[(flowVars.RTime&gt;=flowVars.serverTimeMinusTwo &amp;&amp; flowVars.RTime&lt;=server.dateTime.format('hh:mm a')) &amp;&amp; (flowVars.utcDay==server.dateTime.format(&quot;yyyy-MM-dd&quot;))]">
                                                                        <choice doc:name="Check Loc and Des">
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 15 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(loc and des) !=null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 15 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : ---']" doc:name="Loc ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 15 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="des ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 15 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : ---']" doc:name="(des &amp; loc) == null"/>
                                                                            </when>
                                                                            <otherwise>
                                                                                <logger message="all conditions failed for 15 min" level="INFO" doc:name="Logger"/>
                                                                            </otherwise>
                                                                        </choice>

                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="15 Min" message="15 min failed"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </when>
                                                            <when expression="#[flowVars.timeBasedValue=='30 minute before']">
                                                                <set-variable variableName="RTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).plusMinutes(-30).format(&quot;hh:mm a&quot;)]" doc:name="Reduce Start Time To 30 Mins"/>
                                                                <logger message="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).format(&quot;hh:mm a&quot;)]+++++++minus 30min = #[flowVars.RTime] ++++++utcDay #[flowVars.utcDay]== serverDay #[server.dateTime.format(&quot;yyyy-MM-dd&quot;)]+++++++++#[flowVars.RTime]&gt;=#[flowVars.serverTimeMinusTwo] &amp;&amp; #[flowVars.RTime]&lt;=#[server.dateTime.format('hh:mm a')]" level="INFO" doc:name="Logger"/>
                                                                <choice doc:name="30 min">
                                                                    <when expression="#[(flowVars.RTime&gt;=flowVars.serverTimeMinusTwo &amp;&amp; flowVars.RTime&lt;=server.dateTime.format('hh:mm a')) &amp;&amp; (flowVars.utcDay==server.dateTime.format(&quot;yyyy-MM-dd&quot;))]">
                                                                        <choice doc:name="Check Loc and Des">
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 30 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(Loc and Des) != null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 30 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location :  ---']" doc:name="Loc == null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 30 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Des ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 30 minutes \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location :  ---']" doc:name="(des &amp; loc) == null"/>
                                                                            </when>
                                                                            <otherwise>
                                                                                <logger message="30 mins all conditions failed" level="INFO" doc:name="Logger"/>
                                                                            </otherwise>
                                                                        </choice>

                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="30 Min" message="30 min failed"/>
                                                                    </otherwise>
                                                                </choice>
                                                            
                                                            </when>
                                                            <when expression="#[flowVars.timeBasedValue=='1 hour before']">
                                                                <set-variable variableName="RTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).plusHours(-1).format(&quot;hh:mm a&quot;)]" doc:name="Reduce Start Time To 1 hour"/>
                                                                <choice doc:name="1 hr">
                                                                    <when expression="#[(flowVars.RTime&gt;=flowVars.serverTimeMinusTwo &amp;&amp; flowVars.RTime&lt;=server.dateTime.format('hh:mm a')) &amp;&amp; (flowVars.utcDay==server.dateTime.format(&quot;yyyy-MM-dd&quot;))]">
                                                                        <choice doc:name="Choice">
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 1 hour \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(Loc &amp; Des) != null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 1 hour \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location :  ---']" doc:name="Loc ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 1 hour \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Des == null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 1 hour \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : ---']" doc:name="(Loc &amp; Des) == null"/>
                                                                            </when>
                                                                            <otherwise>
                                                                                <logger level="INFO" doc:name="Logger"/>
                                                                            </otherwise>
                                                                        </choice>

                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="1 hr" message="1 hr failed"/>
                                                                    </otherwise>
                                                                </choice>
                                                            
                                                            </when>
                                                            <when expression="#[flowVars.timeBasedValue=='2 hour before']">
                                                                <set-variable variableName="RTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).plusHours(-2).format(&quot;hh:mm a&quot;)]" doc:name="Reduce Start Time To 2 hr"/>
                                                                <choice doc:name="2 hrs">
                                                                    <when expression="#[(flowVars.RTime&gt;=flowVars.serverTimeMinusTwo &amp;&amp; flowVars.RTime&lt;=server.dateTime.format('hh:mm a')) &amp;&amp; (flowVars.utcDay==server.dateTime.format(&quot;yyyy-MM-dd&quot;))]">
                                                                        <choice doc:name="Choice">
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 2 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(Loc &amp; Des) != null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 2 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+'  \n - Location : ---']" doc:name="Loc == null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 2 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Des == null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 2 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : ---  \n - Location : ---']" doc:name="(Loc &amp; Des) == null"/>
                                                                            </when>
                                                                            <otherwise>
                                                                                <logger message="2 hrs all conditions failed" level="INFO" doc:name="Logger"/>
                                                                            </otherwise>
                                                                        </choice>

                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="2 hrs " message="2 hrs failed"/>
                                                                    </otherwise>
                                                                </choice>
                                                            
                                                            </when>
                                                            <when expression="#[flowVars.timeBasedValue=='4 hour before']">
                                                                <set-variable variableName="RTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcTime)).plusHours(-4).format(&quot;hh:mm a&quot;)]" doc:name="Reduce Start Time To 4 hrs"/>
                                                                <choice doc:name="4 hrs">
                                                                    <when expression="#[(flowVars.RTime&gt;=flowVars.serverTimeMinusTwo &amp;&amp; flowVars.RTime&lt;=server.dateTime.format('hh:mm a')) &amp;&amp; (flowVars.utcDay==server.dateTime.format(&quot;yyyy-MM-dd&quot;))]">
                                                                        <choice doc:name="Choice">
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 4 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : '+flowVars.itemDetails.location+'']" doc:name="(Loc &amp; Des) !=null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description !=null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 4 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : ---']" doc:name="Loc ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 4 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Des ==null"/>
                                                                            </when>
                                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description ==null]">
                                                                                <set-variable variableName="postMessage" value="#['Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) starts in 4 hours \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : ---']" doc:name="(Des &amp; Loc)  == null"/>
                                                                            </when>
                                                                            <otherwise>
                                                                                <logger message="4hrs All conditions failed" level="INFO" doc:name="Logger"/>
                                                                            </otherwise>
                                                                        </choice>

                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="4 hrs" message="4 hrs failed"/>
                                                                    </otherwise>
                                                                </choice>
                                                            
                                                            </when>

                                                            <otherwise>
                                                                <logger message="Default time_based" level="INFO" doc:name="Default"/>
                                                            </otherwise>
                                                        </choice>
                                                        <set-variable variableName="value" value="timeBasedReminder" doc:name="Value"/>
                                                    </when>
                                            <otherwise>
                                                <logger message="default condition for crt or update" level="INFO" doc:name="Check crt or update default"/>
                                            </otherwise>
                                        </choice>
                                                <set-variable variableName="setUtcDate" value="#[server.dateTime.format('yyyy-MM-dd')]" doc:name="Set UTC date"/>
                                                <set-variable variableName="utcStartTimeToAddArray" value="#[flowVars.setUtcDate]T00:00:00Z" doc:name="Set Utc Start Time"/>
                                                <set-variable variableName="utcEndOffset" value="#[flowVars.setUtcDate]T23:59:00Z" doc:name="Set End Offset"/>
                                                <set-variable variableName="utcEndTimeToAddArray" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcEndOffset)).plusHours(24)]" doc:name="Set Utc End Time"/>
                                                <choice doc:name="Choice">
                                                    <when expression="#[flowVars.offValue.contains('.')]">
                                                        <dw:transform-message doc:name="Transform Message">
                                                            <dw:set-variable variableName="splitCondtn"><![CDATA[%dw 1.0
%output application/java
---
flowVars.offValue splitBy "."]]></dw:set-variable>
                                                        </dw:transform-message>
                                                        <expression-component doc:name="Expression"><![CDATA[flowVars.offset1 = Integer.parseInt(flowVars.splitCondtn[0])]]></expression-component>
                                                        <expression-component doc:name="Expression"><![CDATA[flowVars.offset2 = Integer.parseInt(flowVars.splitCondtn[1])]]></expression-component>
                                                        <choice doc:name="Check Minus or Plus">
                                                            <when expression="#[flowVars.offset1.toString().contains('-')]">
                                                                <dw:transform-message doc:name="Transform Message">
                                                                    <dw:set-variable variableName="minusPlus"><![CDATA[%dw 1.0
%output application/java
---
flowVars.offset1 splitBy "-"]]></dw:set-variable>
                                                                </dw:transform-message>
                                                                <expression-component doc:name="Expression"><![CDATA[flowVars.offset3 = Integer.parseInt(flowVars.minusPlus[1])]]></expression-component>
                                                                <set-variable variableName="userStartTime1" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcStartTimeToAddArray)).plusHours(flowVars.offset3)]" doc:name="Add User Time Zone"/>
                                                                <set-variable variableName="userEndTime1" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcEndTimeToAddArray)).plusHours(flowVars.offset3)]" doc:name="user end time"/>
                                                                <set-variable variableName="userStartTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.userStartTime1)).plusMinutes(flowVars.offset2).changeTimeZone('UTC')]" doc:name="Variable"/>
                                                                <set-variable variableName="userEndTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.userEndTime1)).plusMinutes(flowVars.offset2).changeTimeZone('UTC')]" doc:name="Variable"/>
                                                            </when>
                                                            <otherwise>
                                                                <set-variable variableName="userStartTime1" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcStartTimeToAddArray)).plusHours(-flowVars.offset1)]" doc:name="Add User Time Zone"/>
                                                                <set-variable variableName="userEndTime1" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcEndTimeToAddArray)).plusHours(-flowVars.offset1)]" doc:name="user end time"/>
                                                                <set-variable variableName="userStartTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.userStartTime1)).plusMinutes(-flowVars.offset2).changeTimeZone('UTC')]" doc:name="Variable"/>
                                                                <set-variable variableName="userEndTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.userEndTime1)).plusMinutes(-flowVars.offset2).changeTimeZone('UTC')]" doc:name="Variable"/>
                                                            </otherwise>
                                                        </choice>

                                                    </when>
                                                    <otherwise>
                                                        <choice doc:name="Check Minus or Plus For Not Dot">
                                                            <when expression="#[flowVars.offValue.toString().contains('-')]">
                                                                <dw:transform-message doc:name="Transform Message">
                                                                    <dw:set-variable variableName="minusPlus"><![CDATA[%dw 1.0
%output application/java
---
flowVars.offValue splitBy '-']]></dw:set-variable>
                                                                </dw:transform-message>
                                                                <expression-component doc:name="Expression"><![CDATA[flowVars.offValue1 = Integer.parseInt(flowVars.minusPlus[1])]]></expression-component>
                                                                <set-variable variableName="userStartTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcStartTimeToAddArray)).plusHours(flowVars.offValue1).changeTimeZone('UTC')]" doc:name="Set User Start Time"/>
                                                                <set-variable variableName="userEndTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcEndTimeToAddArray)).plusHours(flowVars.offValue1).changeTimeZone('UTC')]" doc:name="Set User End Time"/>
                                                            </when>
                                                            <otherwise>
                                                                <expression-component doc:name="Expression"><![CDATA[flowVars.offValue1 = Integer.parseInt(flowVars.offValue)]]></expression-component>
                                                                <set-variable variableName="userStartTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcStartTimeToAddArray)).plusHours(-flowVars.offValue1).changeTimeZone('UTC')]" doc:name="Set User Start Time"/>
                                                                <set-variable variableName="userEndTime" value="#[(new org.mule.el.datetime.DateTime(flowVars.utcEndTimeToAddArray)).plusHours(-flowVars.offValue1).changeTimeZone('UTC')]" doc:name="Set User End Time"/>
                                                            </otherwise>
                                                        </choice>

                                                    </otherwise>
                                                </choice>
                                                <logger message="Add Array Condition for  Event ==&gt; #[flowVars.itemDetails.summary] =&gt;postMsg== #[flowVars.postMessage] == null &amp;&amp; +++++addArrayCondition = #[flowVars.postMessage == empty &amp;&amp; (flowVars.addArrayStartTime.isAfter(flowVars.userStartTime) &amp;&amp; flowVars.addArrayStartTime.isBefore(flowVars.userEndTime))] ++++++++++++#[flowVars.postMessage == empty &amp;&amp; #[flowVars.addArrayStartTime] isAfter #[flowVars.userStartTime] &amp;&amp; #[flowVars.addArrayStartTime] isBefore #[flowVars.userEndTime]" level="INFO" doc:name="Add Array Condition"/>
                                                <choice doc:name="Check PostMessage">
                                                    <when expression="#[flowVars.postMessage == empty &amp;&amp; (flowVars.addArrayStartTime.isAfter(flowVars.userStartTime) &amp;&amp; flowVars.addArrayStartTime.isBefore(flowVars.userEndTime))]">
                                                        <choice doc:name="Check Location and description">
                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                <set-variable variableName="reminderMessage" value="#['\n \n Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Remainder Message (loc and des) != null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location !=null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                <set-variable variableName="reminderMessage" value="#['\n \n Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : '+flowVars.itemDetails.location+'']" doc:name="Remainder Message  des == null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description != null]">
                                                                <set-variable variableName="reminderMessage" value="#['\n \n Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : '+flowVars.itemDetails.description+' \n - Location : ---']" doc:name="Remainder Message  loc == null"/>
                                                            </when>
                                                            <when expression="#[flowVars.itemDetails.location ==null &amp;&amp; flowVars.itemDetails.description == null]">
                                                                <set-variable variableName="reminderMessage" value="#['\n \n Event ['+flowVars.itemDetails.summary+']('+flowVars.itemDetails.htmlLink+') in ['+flowVars.GCItemsList.summary+'](https://calendar.google.com/calendar/render#main_7) \n - '+flowVars.getDate+' from '+flowVars.startTime+'  to '+flowVars.endTime+' ('+flowVars.GCItemsList.timeZone+') \n - Description : --- \n - Location : ---']" doc:name="Remainder Message  (loc &amp; des) == null"/>
                                                            </when>
                                                            <otherwise>
                                                                <logger message="adding to array all conditions failed" level="INFO" doc:name="Logger"/>
                                                            </otherwise>
                                                        </choice>

                                                        <expression-component doc:name="Add To Reminder Array"><![CDATA[remainderArray.add(flowVars.reminderMessage)]]></expression-component>

                                                    </when>
                                                    <otherwise>
                                                        <choice doc:name="PostMessage Not Null">
                                                            <when expression="#[flowVars.postMessage != empty]">
                                                                <set-payload value="#[{&quot;gcMessage&quot;: flowVars.postMessage,&quot;value&quot;:flowVars.value}]" doc:name="Prepare Message To Management"/>
                                                                <logger message="instance uuid= #[flowVars.instanceUuid] +++++++++++++++  crt or up  message = #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                                                                <http:request config-ref="HTTP_Integrations_Management_Request_Configuration" path="/hooks/{instanceUuid}" method="POST" doc:name="Hit Management Webhook">
                                                                    <http:request-builder>
                                                                        <http:uri-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>

                                                                    </http:request-builder>
                                                                    <http:failure-status-code-validator values="500..599"/>
                                                                </http:request>
                                                            </when>
                                                            <otherwise>
                                                                <logger message="reminder postmessg null" level="INFO" doc:name="Logger"/>
                                                            </otherwise>
                                                        </choice>
                                                    </otherwise>
                                                </choice>
                                        		<set-variable variableName="postMessage" value="" doc:name="Set postMessage To Null"/>

                                            </when>
                                            <otherwise>
                                                <logger message="event Status Canceled" level="INFO" doc:name="Event Status Canceled"/>
                                            </otherwise>
                                        </choice>

                                        
                                    </foreach>

                                    <logger message="Day Based++++ User_Selected_Day_base_time=#[flowVars.dayTimeBase.toString()] ++++++ array !=[] ==&gt; #[flowVars.remainderArray != []] &amp;&amp; #[flowVars.dayTimeBase.toString()]&gt;=#[flowVars.serverTimeMinusTwo] &amp;&amp; #[flowVars.dayTimeBase.toString()]&lt;=#[server.dateTime.format('hh:mm a')]++++post all day  Array size===&gt;#[flowVars.remainderArray.size()]  ++++ condition = #[(flowVars.remainderArray != []) &amp;&amp; ((flowVars.dayTimeBase.toString()&gt;=flowVars.serverTimeMinusTwo) &amp;&amp; (flowVars.dayTimeBase.toString()&lt;=server.dateTime.format('hh:mm a')))]" level="INFO" doc:name="Logger"/>

                                    <choice doc:name="Check Reminder Message">
    									<when expression="#[(flowVars.remainderArray != []) &amp;&amp; ((flowVars.dayTimeBase.toString()&gt;=flowVars.serverTimeMinusTwo) &amp;&amp; (flowVars.dayTimeBase.toString()&lt;=server.dateTime.format('hh:mm a')))]">

        									<foreach collection="#[flowVars.remainderArray]" doc:name="For Each">
                                                <choice doc:name="Choice">
                                                    <when expression="#[flowVars.counter==1]">
                                                        <set-variable variableName="out" value="#[payload]" doc:name="Variable"/>
                                                        <set-payload value="#[{&quot;gcMessage&quot;: &quot;**Today's Events**&quot;,&quot;value&quot;:&quot;remainders&quot;}]" doc:name="Set Payload"/>
                                                        <http:request config-ref="HTTP_Integrations_Management_Request_Configuration" path="/hooks/{instanceUuid}" method="POST" doc:name="HTTP">
                                                            <http:request-builder>
                                                                <http:uri-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>
                                                            </http:request-builder>
                                                        </http:request>
                                                        <set-payload value="#[{&quot;gcMessage&quot;: flowVars.out,&quot;value&quot;:&quot;remainders&quot;}]" doc:name="Set Payload"/>
                                                        <http:request config-ref="HTTP_Integrations_Management_Request_Configuration" path="/hooks/{instanceUuid}" method="POST" doc:name="HTTP">
                                                            <http:request-builder>
                                                                <http:uri-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>
                                                            </http:request-builder>
                                                        </http:request>
                                                    </when>
                                                    <when expression="#[flowVars.counter&gt;1]">
                                                        <set-payload value="#[{&quot;gcMessage&quot;: payload,&quot;value&quot;:&quot;remainders&quot;}]" doc:name="Set Reminder Message"/>
                                                        <logger message="Day_Reminders loop Array send to Mangmt ==&gt;inUuid = #[flowVars.instanceUuid] +++++++ #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                                                        <http:request config-ref="HTTP_Integrations_Management_Request_Configuration" path="/hooks/{instanceUuid}" method="POST" doc:name="Send To Management">
                                                            <http:request-builder>
                                                                <http:uri-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>
                                                            </http:request-builder>
                                                        </http:request>
                                                    </when>
                                                    <otherwise>
                                                        <logger message="for loop day based counter =  #[flowVars.counter]" level="INFO" doc:name="Logger"/>
                                                    </otherwise>
                                                </choice>

        									</foreach>
    									</when>
    									<otherwise>
                                            <logger message="loop all day msgs condition not true" level="INFO" doc:name="Logger"/>

    									</otherwise>
    									
								</choice>
								
                                </when>
                                <otherwise>
                                    <logger message="instanceUuid #[flowVars.instanceUuid]  Inactive" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                        </foreach>


                    </when>
                    <otherwise>
                        <logger level="INFO" doc:name="Logger" message="refresh Token Null In Polling"/>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
        <catch-exception-strategy when="exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)" doc:name="Catch Exception Strategy">
                <logger message="exception in polling flow" level="INFO" doc:name="Logger"/>
 		</catch-exception-strategy>
 </choice-exception-strategy>
        
    </flow>

    
</mule>
