<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
  	
  	<http:request-config name="HTTP_Access_Token_Request_Configuration" protocol="HTTPS" host="${googleDrive.api.access.token.host}" port="${googleDrive.api.access.token.port}"  doc:name="HTTP Request Configuration" basePath="${googleDrive.api.access.token.base.path}"/>
  	
 	<http:request-config name="HTTP_Operations_Request_Configuration" protocol="HTTPS" host="${googleDrive.api.operations.host}" port="${googleDrive.api.operations.port}" basePath="${googleDrive.api.operations.base.path}" doc:name="HTTP Request Configuration"/>
    <vm:connector name="VM1" validateConnections="true" doc:name="VM"/>
    <http:request-config name="HTTP_GoogleDrive_Comments_Request_Configuration" protocol="HTTPS" host="${googleDrive.api.operations.host}" port="${googleDrive.api.operations.port}" basePath="${googleDrive.api.operations.base.path.comments}" doc:name="HTTP Request Configuration"/>
     
    <flow name="postGoogleDriveTokenFlow">
        <set-payload value="#[{&quot;code&quot;:flowVars.tokenRequest.authSettings.code,&quot;client_id&quot;:&quot;${googleDrive.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleDrive.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleDrive.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleDrive.integration.access.grantType}&quot;}]" doc:name="Set Payload" />
        <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleDrive.api.access.token.path}" method="POST" doc:name="HTTP"  >
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Response to Json">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJson.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="postGoogleDriveRefreshTokenFlow">
        <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleDrive.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleDrive.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleDrive.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleDrive.integration.refresh.grantType}&quot;}]" doc:name="Set Payload"/>
        <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleDrive.api.access.token.path}" method="POST" doc:name="HTTP">
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="getGoogleDriveUserFlow">
    	 <http:request config-ref="HTTP_Operations_Request_Configuration" path="/about" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="fields" value="user"/>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        
        <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="getGoogleDriveFoldersNFilesFlow">
        <http:request config-ref="HTTP_Operations_Request_Configuration" path="${googleDrive.api.operations.files.path}" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="postHookForEntireDriveFlow">

        <set-variable variableName="integrationId" value="#[flowVars.request2.integrationId]" doc:name="Set Integration Id"/>
        <set-variable variableName="userId" value="#[flowVars.request2.userId]" doc:name="Set User Id"/>
        <logger message="SetUpIntegration  ==&gt; intgId=#[flowVars.integrationId]   usId=#[flowVars.userId]  payload= #[flowVars.request]  " level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.integrationId !=null &amp;&amp; flowVars.userId !=null]">
                <enricher target="#[flowVars.getIntegrationTokenResponse]" doc:name="Message Enricher">
                    <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
                </enricher>
                <choice doc:name="No Result">
                    <when expression="#[flowVars.getIntegrationTokenResponse.toString()=='{message=No results}']">
                        <set-payload value="#[{&quot;message&quot;:&quot;Integration Token No Result&quot;}]" doc:name="Set No Result Message"/>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <choice doc:name="Check Refresh Token">
                            <when expression="#[flowVars.getIntegrationTokenResponse[0].refreshToken != null]">
                                <set-variable variableName="token_Id" value="#[flowVars.getIntegrationTokenResponse[0].tokenId]" doc:name="Set Token Id"/>
                                <set-variable variableName="refreshToken" value="#[flowVars.getIntegrationTokenResponse[0].refreshToken]" doc:name="Set Refresh Token"/>
                                <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleDrive.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleDrive.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleDrive.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleDrive.integration.refresh.grantType}&quot;}]" doc:name="Refresh Token Body Header"/>
                                <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleDrive.api.access.token.path}" method="POST" doc:name="Get Google Drive Access Token">
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-variable variableName="refreshTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                </dw:transform-message>
                                <set-variable variableName="token" value="#[flowVars.refreshTokenResponse.access_token]" doc:name="Set Google Drive Token"/>
                                <enricher target="#[flowVars.driveChangesList]" doc:name="Message Enricher">
                                    <flow-ref name="getGoogleDriveChangesFlow" doc:name="getGoogleDriveChangesFlow"/>
                                </enricher>
                                <choice doc:name="Set Page Token ">
                                    <when expression="#[flowVars.driveChangesList.largestChangeId != empty]">
                                        <set-variable variableName="newPageToken" value="#[flowVars.driveChangesList.largestChangeId]" doc:name="Set Page Token"/>
                                    </when>
                                    <otherwise>
                                        <set-variable variableName="newPageToken" value="#[flowVars.driveChangesList.nextPageToken]" doc:name="Set Page Token"/>
                                    </otherwise>
                                </choice>
                                <enricher target="#[flowVars.getGoogleDriveSettingsResponse]" doc:name="Message Enricher">
                                    <flow-ref name="getGoogleDriveSettingsFlow" doc:name="getGoogleDriveSettingsFlow"/>
                                </enricher>
                                <choice doc:name="Check Records Database">
                                    <when expression="#[flowVars.getGoogleDriveSettingsResponse.toString()=='{message=No Result Found}']">
                                        <dw:transform-message doc:name="POST Request Body">
                                            <dw:set-payload resource="classpath:dwScripts/buildPostGoogleDriveSettingsExample.dwl"/>
                                        </dw:transform-message>
                                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/googleDrive/settings/{userId}" method="POST" doc:name="POST GD Settings">
                                            <http:request-builder>
                                                <http:uri-param paramName="userId" value="#[flowVars.userId]"/>
                                            </http:request-builder>
                                            <http:failure-status-code-validator values="500..599"/>
                                        </http:request>
                                    </when>
                                    <otherwise>
                                        <dw:transform-message doc:name="PUT Request Body">
                                            <dw:set-payload resource="classpath:dwScripts/buildPutGoogleDriveSettingsExample.dwl"/>
                                        </dw:transform-message>
                                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/googleDrive/settings/{userId}" method="PUT" doc:name="PUT GD Settings">
                                            <http:request-builder>
                                                <http:uri-param paramName="userId" value="#[flowVars.userId]"/>
                                            </http:request-builder>
                                            <http:failure-status-code-validator values="500..599"/>
                                        </http:request>
                                    </otherwise>
                                </choice>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload resource="classpath:dwScripts/buildSetupResponseInIntegrationExample.dwl"/>
                                </dw:transform-message>
                            </when>
                            <otherwise>
                                <set-payload value="#[{&quot;message&quot;:&quot;Refresh Token Empty&quot;}]" doc:name="Set Refresh Token Empty Message"/>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"userId or IntegrationId Null"
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>

       
    </flow>

    <flow name="updateIntegration">
        <dw:transform-message doc:name="Transform Update Response">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="deleteGoogleDriveHookFlow">

        <set-payload value="#[{&quot;message&quot;:&quot;Operation executed successfully&quot;}]"  doc:name="Set Delete Message"/>

        
        <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>

    </flow>
    <flow name="getGoogleDriveChangesFlow">

        <http:request config-ref="HTTP_Operations_Changes_Request_Configuration" path="/changes" method="GET" doc:name="GD Get Changes V2 ">
            <http:request-builder>
                <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>


            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>

        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="startGoogleDrivePollingFlow">
    <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get By Integration Id">
            <http:request-builder>
                <http:query-param paramName="integrationId" value="${googleDrive.integration.id}"/>
                <http:query-param paramName="status" value="ACTIVE"/>



            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="instancesPayload"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <set-session-variable variableName="maap" value="#[new java.util.HashMap()]" doc:name="Set Maap"/>
       <foreach collection="#[flowVars.instancesPayload]" doc:name="Loop All Instances And Add UserIds,InstanceUuids To Maap">
            <choice doc:name="Check UserId Exists">
                <when expression="#[maap.containsKey(payload.userId)]">
                    <expression-component doc:name="Expression To Append Element"><![CDATA[maap.get(payload.userId).add(payload.instanceUuid)]]></expression-component>
                </when>
                <otherwise>
                    <set-variable variableName="uuidList" value="#[new java.util.ArrayList()]" doc:name="Create UUID List"/>
                    <expression-component doc:name="Expression To Add First Element"><![CDATA[uuidList.add(payload.instanceUuid);
maap.put(payload.userId,uuidList)]]></expression-component>
                </otherwise>
            </choice>
        </foreach>
        <set-variable variableName="userIdSet" value="#[sessionVars.maap.keySet()]" doc:name="Set UserId Set"/>
        <set-variable variableName="userIds" value="#[new java.util.ArrayList()]" doc:name="UseId List"/>
        <expression-component doc:name="Expression Set to List"><![CDATA[userIds.addAll(flowVars.userIdSet);]]></expression-component>
        <logger message="MapResult=#[sessionVars.maap]==&gt;userIdArray=#[flowVars.userIds]" level="INFO" doc:name="Logger"/>
        <foreach collection="#[flowVars.userIds]" doc:name="Loop All User Ids">
            <set-session-variable variableName="userId" value="#[payload]" doc:name="Set UserId"/>
            <choice doc:name="Choice">
                <when expression="#[sessionVars.userId != empty]">
                    <vm:outbound-endpoint exchange-pattern="one-way" path="ATPT-flow" connector-ref="VM1" doc:name="AccessToken and PageToken"/>
                </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
 
    </flow>
    <flow name="AccessTokenAndPageTokenFlow">
        <vm:inbound-endpoint exchange-pattern="one-way" path="ATPT-flow" connector-ref="VM1" doc:name="AccessToken and PageToken"/>
        <logger message="VM payload=#[payload] ::::::::::::::::userId=#[sessionVars.userId]==&gt;#[sessionVars.maap.get(sessionVars.userId)]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/{integrationId}/appTokens" method="GET" doc:name="Get Google Drive Access Token">
            <http:request-builder>
                <http:query-param paramName="userId" value="#[sessionVars.userId]"/>
                <http:uri-param paramName="integrationId" value="${googleDrive.integration.id}"/>

            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="integrationTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>

        <choice doc:name="Token Response">
            <when expression="#[flowVars.integrationTokenResponse.toString()=='{message=No results}']">
                <logger level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <choice doc:name="Check Refresh Token">
                    <when expression="#[flowVars.integrationTokenResponse[0].refreshToken != null]">
                        <set-variable variableName="serverTime" value="#[(new org.mule.el.datetime.DateTime(server.dateTime)).plusSeconds(300)]" doc:name="ServerTime"/>
                        <set-variable variableName="dbexpire" value="#[(new org.mule.el.datetime.DateTime(flowVars.integrationTokenResponse[0].expires))]" doc:name="Db Expire"/>
                        <choice doc:name="Check Access Token Expires">
                            <when expression="#[flowVars.serverTime.isAfter(flowVars.dbexpire)]">
                                <set-variable variableName="refreshToken" value="#[flowVars.integrationTokenResponse[0].refreshToken]" doc:name="Set Refresh Token"/>
                                <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleDrive.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleDrive.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleDrive.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleDrive.integration.refresh.grantType}&quot;}]" doc:name="Refresh Token Body"/>
                                <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleDrive.api.access.token.path}" method="POST" doc:name="GET Google Drive Access Token">
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <logger message="Refresh Token response from http = #[message.payloadAs(java.lang.String)] :::::::::::for tokenId=#[flowVars.integrationTokenResponse[0].tokenId] userId=#[flowVars.integrationTokenResponse[0].userId]=#[sessionVars.userId]" level="INFO" doc:name="Logger"/>
                                <dw:transform-message doc:name="Transform Message To Java">
                                    <dw:set-variable variableName="refreshTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                </dw:transform-message>
                                <set-variable variableName="expires_in" value="#[flowVars.refreshTokenResponse.expires_in]" doc:name="Set expires_in"/>
                                <set-variable variableName="GDAccessToken" value="#[flowVars.refreshTokenResponse.access_token]" doc:name="Set AccessToken"/>
                                <choice doc:name="Check For Revoke Access Token">
                                    <when expression="#[flowVars.expires_in != empty &amp;&amp; flowVars.GDAccessToken != empty]">
                                        <dw:transform-message doc:name="Prepare Json Body">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "accessToken": flowVars.GDAccessToken,
  "expires": flowVars.expires_in
}]]></dw:set-payload>
                                        </dw:transform-message>
                                        <logger message="put Access Token payload==&gt; RTR=#[flowVars.refreshTokenResponse] #[flowVars.expires_in]==#[flowVars.refreshTokenResponse.expires_in]++++++++#[flowVars.GDAccessToken]==#[flowVars.refreshTokenResponse.access_token] payload as body = #[message.payloadAs(java.lang.String)] :::::::::::::::: tokenId=#[flowVars.integrationTokenResponse[0].tokenId]:::::::::: intgrId=${googleDrive.integration.id}" level="INFO" doc:name="Logger"/>
                                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/{integrationId}/appTokens/{appTokenId}" method="PUT" doc:name="Put Access Token">
                                            <http:request-builder>
                                                <http:uri-param paramName="integrationId" value="${googleDrive.integration.id}"/>
                                                <http:uri-param paramName="appTokenId" value="#[flowVars.integrationTokenResponse[0].tokenId]"/>
                                                <http:header headerName="Content-Type" value="application/json"/>

                                            </http:request-builder>
                                            <http:failure-status-code-validator values="500..599"/>
                                        </http:request>
                                    </when>
                                    <otherwise>
                                        <logger level="INFO" doc:name="Logger" message="Refresh Token Not success For useId=#[sessionVars.userId]==&gt;tokenId=#[flowVars.integrationTokenResponse[0].tokenId]"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <set-variable variableName="GDAccessToken" value="#[flowVars.integrationTokenResponse[0].accessToken]" doc:name="AccessToken"/>
                            </otherwise>
                        </choice>
                        <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/googleDrive/settings/{userId}" method="GET" doc:name="Get PageToken From DB">
                            <http:request-builder>
                                <http:uri-param paramName="userId" value="#[sessionVars.userId]"/>

                            </http:request-builder>
                            <http:failure-status-code-validator values="500..599"/>
                        </http:request>

                        <dw:transform-message doc:name="Transform Message To Java">
                            <dw:set-variable variableName="dbPageToken"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                        </dw:transform-message>
                        <choice doc:name="Check Result &quot;No Result Found&quot;">
                            <when expression="#[flowVars.dbPageToken.toString() != '{message=No Result Found}']">
                                <logger message="pageToken from DB for user=#[sessionVars.userId]=====#[flowVars.dbPageToken[0].pageToken]" level="INFO" doc:name="Logger"/>
                                <set-variable variableName="pageToken" value="#[flowVars.dbPageToken[0].pageToken]" doc:name="Set PageToken From Database"/>
                                <expression-component doc:name="Add Plus One For PageToken"><![CDATA[pageToken=Integer.parseInt(pageToken)+1;]]></expression-component>
                                <http:request config-ref="HTTP_Operations_Changes_Request_Configuration" path="/changes" method="GET" doc:name="Get New Changes">
                                    <http:request-builder>
                                        <http:query-param paramName="pageToken" value="#[flowVars.pageToken]"/>
                                        <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                    </http:request-builder>
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <dw:transform-message doc:name="Transform Message To Java">
                                    <dw:set-variable variableName="newChangesResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                </dw:transform-message>
                                <logger message="new largest changes for userId=#[sessionVars.userId] == #[flowVars.newChangesResponse]" level="INFO" doc:name="Logger"/>
                                <set-variable variableName="newPageToken" value="#[flowVars.newChangesResponse.largestChangeId]" doc:name="Set New Change Id"/>
                                <dw:transform-message doc:name="Prepare Json Body">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "pageToken": flowVars.newPageToken
}]]></dw:set-payload>
                                </dw:transform-message>
                                <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/googleDrive/settings/{userId}" method="PUT" doc:name="update pageToken">
                                    <http:request-builder>
                                        <http:uri-param paramName="userId" value="#[sessionVars.userId]"/>
                                    </http:request-builder>
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <choice doc:name="check Index Size">
                                    <when expression="#[flowVars.newChangesResponse.items != []]">
                                        <foreach collection="#[flowVars.newChangesResponse.items]" doc:name="For Each">
                                            <set-variable variableName="convertModifiedTime" value="#[(new org.mule.el.datetime.DateTime(payload.modificationDate)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Modified To Seconds"/>
                                            <set-variable variableName="minusFiveMFD" value="#[(new org.mule.el.datetime.DateTime(payload.modificationDate)).plusMinutes(-5).format('yyyy.MM.dd HH:mm:ss')]" doc:name="MinusMFDate"/>
                                            <dw:transform-message doc:name="Transform Message">
                                                <dw:set-variable variableName="reqPayload"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                            </dw:transform-message>
                                            <set-variable variableName="cmd" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert modifiedDate to Seconds"/>
                                            <logger message="Timings For file for userId=#[sessionVars.userId]::::::::::#[flowVars.convertModifiedTime]:::::::::::::::for #[flowVars.reqPayload.file.title]" level="INFO" doc:name="Logger"/>
                                            <choice doc:name="Filter According To File Mime Type">
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.document']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for docs">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <logger message="comments on doc for userId=#[sessionVars.userId]::::::::::#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : document **[#[flowVars.reqPayload.file.title]](https://docs.google.com/document/d/#[flowVars.reqPayload.fileId])**  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Doc Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : document **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Doc trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/document/d/#[flowVars.reqPayload.fileId])**" doc:name="fileName"/>
                                                            <expression-component doc:name="Expression"><![CDATA[flowVars.fileName = flowVars.fileName.replace('**','')]]></expression-component>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="comment modified Time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="plus One ccmt "/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n' from comments"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="itsValue"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n' from comment"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="itsValue"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="replyComment"/>
                                                                                    <expression-component doc:name="remove '\n' from replyComment"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="itsValue"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopen"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="itsValue"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="Doc Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.spreadsheet']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for SpreadSheet">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modifed Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : spread sheet [#[flowVars.reqPayload.file.title]](https://docs.google.com/spreadsheets/d/#[flowVars.reqPayload.fileId]/edit#gid=0)  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Spreadsheet Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : spread sheet **#[flowVars.reqPayload.file.title]**  moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Spreadsheet Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/spreadsheets/d/#[flowVars.reqPayload.fileId]/edit#gid=0)" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="comment modified time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="commentCreate"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="Variable"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="replyComment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopened"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="Variable"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="Spread Sheet Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType.contains('text/')]">
                                                	<set-variable doc:name="Modifed Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="text">
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : text File [#[flowVars.reqPayload.file.title]](https://drivenotepad.github.io/app/?state={%22action%22:%22open%22,%22ids%22:[&quot;#[flowVars.reqPayload.fileId]&quot;]})  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Text File Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : text File **#[flowVars.reqPayload.file.title]**  moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Text File trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <logger level="INFO" doc:name="Logger"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.presentation']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for Slides">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : slide [#[flowVars.reqPayload.file.title]](https://docs.google.com/presentation/d/#[flowVars.reqPayload.fileId]/edit#slide=id.p) in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Slide Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : slide **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Slide Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/presentation/d/#[flowVars.reqPayload.fileId]/edit#slide=id.p)" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="comment modifiedTime"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="commentCreate"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="itsValue"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="itsValue"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="replyComment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="itsValue"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopened"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="itsValue"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="Doc Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.openxmlformats-officedocument.wordprocessingml.document']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for docX">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : document [#[flowVars.reqPayload.file.title]](https://docs.google.com/document/d/#[flowVars.reqPayload.fileId])  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Docx Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="Variable"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : document **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]** " doc:name="Docx Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/document/d/#[flowVars.reqPayload.fileId])" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="Comment Modified Time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="commentCreate"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="Variable"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="replyComment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopened"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="Variable"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="DocX Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for Excel File">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : excel [#[flowVars.reqPayload.file.title]](https://docs.google.com/spreadsheets/d/#[flowVars.reqPayload.fileId]/edit#gid=0)  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Excel Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : excel **#[flowVars.reqPayload.file.title]**  moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Excel Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/spreadsheets/d/#[flowVars.reqPayload.fileId]/edit#gid=0)" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="Comment Modified Time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="commentCreate"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="Variable"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="Reply Comment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopened"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="Variable"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="Excel Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.form']">
                                                	<set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Forms ">
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : form [#[flowVars.reqPayload.file.title]](https://docs.google.com/forms/d/#[flowVars.reqPayload.fileId]/edit) in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Forms add"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : form **#[flowVars.reqPayload.file.title]** moved to  trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Forms trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <logger level="INFO" doc:name="Logger"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/x-zip-compressed']">
   													<set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
   													<choice doc:name="zip">
        												<when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
            												<set-variable variableName="postMessage" value="Changes in drive : zip file **#[flowVars.reqPayload.file.title]** in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Zip add"/>
            												<set-variable variableName="value" value="add" doc:name="itsValue"/>
        												</when>
        												<when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
            												<set-variable variableName="postMessage" value="Changes in drive : zip file **#[flowVars.reqPayload.file.title]** moved to  trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Zip trashed"/>
            												<set-variable variableName="value" value="trashed" doc:name="itsValue"/>
        												</when>
        												<otherwise>
            												<logger level="INFO" doc:name="Logger"/>
        												</otherwise>
    												</choice>
												</when>
												<when expression="#[flowVars.reqPayload.file.mimeType.contains('image/')]">
													<set-variable doc:name="Images Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdpo"/>
													<set-variable doc:name="Modified Date Plus two" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(2).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdpt"/>
    												<choice doc:name="images">
        												<when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.mdpo==flowVars.convertModifiedTime || flowVars.mdpt==flowVars.convertModifiedTime)]">
            												<set-variable variableName="postMessage" value="Changes in drive : image **#[flowVars.reqPayload.file.title]** in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Image add"/>
            												<set-variable variableName="value" value="add" doc:name="itsValue"/>
        												</when>
        												<when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
            												<set-variable variableName="postMessage" value="Changes in drive : image **#[flowVars.reqPayload.file.title]** moved to  trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Image trashed"/>
            												<set-variable variableName="value" value="trashed" doc:name="itsValue"/>
        												</when>
        												<otherwise>
            												<logger level="INFO" doc:name="Logger"/>
        												</otherwise>
    												</choice>
												</when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.drawing']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for drawings">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : drawings [#[flowVars.reqPayload.file.title]](https://docs.google.com/drawings/d/#[flowVars.reqPayload.fileId]/edit)  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Drawing Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : drawings **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]** " doc:name="Drawings Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://docs.google.com/drawings/d/#[flowVars.reqPayload.fileId]/edit)" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="Comment Modified Time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="Comment Create"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="Variable"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="Reply Comment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopen"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="Variable"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="Drawings Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.map']">
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Maps">
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : map [#[flowVars.reqPayload.file.title]](https://www.google.com/maps/d/edit?mid=#[flowVars.reqPayload.fileId]) in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="Maps Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : map **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Maps Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <logger level="INFO" doc:name="Logger"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/vnd.google-apps.folder']">
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="folder">
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : folder [#[flowVars.reqPayload.file.title]](https://drive.google.com/drive/folders/#[flowVars.reqPayload.fileId]) in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="folder added"/>
                                                            <set-variable variableName="value" value="add" doc:name="its Value"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : folder **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="Folder Trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <logger level="INFO" doc:name="Logger"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <when expression="#[flowVars.reqPayload.file.mimeType=='application/pdf']">
                                                    <http:request config-ref="HTTP_GoogleDrive_Comments_Request_Configuration" path="/files/#[flowVars.reqPayload.fileId]/comments" method="GET" doc:name="Get Comments for PDF">
                                                        <http:request-builder>
                                                            <http:query-param paramName="fields" value="comments,kind,nextPageToken"/>
                                                            <http:header headerName="Authorization" value="Bearer #[flowVars.GDAccessToken]"/>
                                                        </http:request-builder>
                                                        <http:failure-status-code-validator values="500..599"/>
                                                    </http:request>
                                                    <dw:transform-message doc:name="Transform Message">
                                                        <dw:set-variable variableName="commentResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                                    </dw:transform-message>
                                                    <set-variable doc:name="Modified Date Plus One" value="#[(new org.mule.el.datetime.DateTime(flowVars.reqPayload.file.modifiedDate)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" variableName="mdmo"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.commentResponse.comments==[] &amp;&amp; flowVars.reqPayload.file.labels.trashed=='false' &amp;&amp; (flowVars.convertModifiedTime==flowVars.cmd || flowVars.convertModifiedTime==flowVars.mdmo)]">
                                                            <set-variable variableName="postMessage" value="Changes in drive : pdf file [#[flowVars.reqPayload.file.title]](https://annotatepdf.appspot.com/#/edit/#[flowVars.reqPayload.fileId])  in [My Drive](https://drive.google.com/drive/my-drive)" doc:name="PDF Added"/>
                                                            <set-variable variableName="value" value="add" doc:name="itsValue"/>
                                                        </when>
                                                        <when expression="#[flowVars.reqPayload.file.labels.trashed=='true']">
                                                            <set-variable variableName="postMessage" value="Changes in drive : pdf file **#[flowVars.reqPayload.file.title]** moved to trash by **#[flowVars.reqPayload.file.lastModifyingUserName]**" doc:name="PDF trashed"/>
                                                            <set-variable variableName="value" value="trashed" doc:name="itsValue"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-variable variableName="postMessageArray" value="#[new java.util.ArrayList()]" doc:name="Post Message Array"/>
                                                            <set-variable variableName="fileName" value="[#[flowVars.reqPayload.file.title]](https://annotatepdf.appspot.com/#/edit/#[flowVars.reqPayload.fileId])" doc:name="fileName"/>
                                                            <foreach collection="#[flowVars.commentResponse.comments]" doc:name="For Each">
                                                                <set-variable variableName="md" value="#[payload.modifiedTime]" doc:name="Comment Modified Time"/>
                                                                <set-variable variableName="ccmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Convert Comment Modified Time"/>
                                                                <set-variable variableName="plusOneCcmt" value="#[(new org.mule.el.datetime.DateTime(flowVars.md)).plusSeconds(1).format('yyyy.MM.dd HH:mm:ss')]" doc:name="Plus One ccmt"/>
                                                                <choice doc:name="Choice">
                                                                    <when expression="#[payload.replies==[] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="commentCreate" value="#[payload.content]" doc:name="Comment Create"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.commentCreate = flowVars.commentCreate.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** comment on name  \n        commented  &quot;'+flowVars.commentCreate+'&quot;']" doc:name="comment create"/>
                                                                        <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                        <set-variable variableName="value" value="comment" doc:name="Variable"/>
                                                                    </when>
                                                                    <when expression="#[payload.createdTime&lt;payload.modifiedTime &amp;&amp; payload.replies != [] &amp;&amp; (flowVars.ccmt&lt;=flowVars.convertModifiedTime &amp;&amp; flowVars.ccmt&gt;=flowVars.minusFiveMFD)]">
                                                                        <set-variable variableName="forComment" value="#[payload.content]" doc:name="comment"/>
                                                                        <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.forComment = flowVars.forComment.replace('\n',' ')]]></expression-component>
                                                                        <set-variable variableName="rootUser" value="#[payload.author.displayName]" doc:name="Root User"/>
                                                                        <foreach collection="#[payload.replies]" doc:name="For Each">
                                                                            <choice doc:name="Choice">
                                                                                <when expression="#[payload.action=='resolve' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** resolved comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="comment Resolved"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="resol" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.deleted=='false' &amp;&amp; payload.content !=empty &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="replyComment" value="#[payload.content]" doc:name="Reply Comment"/>
                                                                                    <expression-component doc:name="Remove '\n'"><![CDATA[flowVars.replyComment = flowVars.replyComment.replace('\n',' ')]]></expression-component>
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** replied to the comment on name \n        '+flowVars.rootUser+' commented  &quot;'+flowVars.forComment+'&quot;  \n        '+payload.author.displayName+' replied  &quot;'+flowVars.replyComment+'&quot;']" doc:name="comment Replies"/>
                                                                                    <expression-component doc:name="Added To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reply" doc:name="Variable"/>
                                                                                </when>
                                                                                <when expression="#[payload.action=='reopen' &amp;&amp; payload.modifiedTime==flowVars.md]">
                                                                                    <set-variable variableName="postMessage1" value="#['\n **'+payload.author.displayName+'** reopened the comment on name \n        commented &quot;'+flowVars.forComment+'&quot; by '+flowVars.rootUser+'']" doc:name="Comment Reopen"/>
                                                                                    <expression-component doc:name="Add To Array"><![CDATA[postMessageArray.add(flowVars.postMessage1)]]></expression-component>
                                                                                    <set-variable variableName="value" value="reopen" doc:name="Variable"/>
                                                                                </when>
                                                                                <otherwise>
                                                                                    <logger level="INFO" doc:name="Logger"/>
                                                                                </otherwise>
                                                                            </choice>
                                                                        </foreach>
                                                                    </when>
                                                                    <otherwise>
                                                                        <logger level="INFO" doc:name="Logger"/>
                                                                    </otherwise>
                                                                </choice>
                                                            </foreach>
                                                            <expression-component doc:name="Remove ','"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(',','')]]></expression-component>
                                                            <expression-component doc:name="Remove '['"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('[','')]]></expression-component>
                                                            <expression-component doc:name="Remove ']'"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace(']','')]]></expression-component>
                                                            <expression-component doc:name="File Name And Url"><![CDATA[flowVars.postMessageArray = flowVars.postMessageArray.toString().replace('name',flowVars.fileName)]]></expression-component>
                                                            <set-variable variableName="postMessage" value="#[flowVars.postMessageArray]" doc:name="PDF Post Message"/>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <otherwise>
                                                    <logger message="changes For unknown Formats" level="INFO" doc:name="Logger"/>
                                                </otherwise>
                                            </choice>
                                            <foreach collection="#[sessionVars.maap.get(sessionVars.userId)]" doc:name="Loop All Instance Uuids">
                                            <set-variable variableName="instanceUuid" value="#[payload]" doc:name="Set Instance Uuid"/>
                                            <choice doc:name="Check Parents field for an File">
                                                <when expression="#[flowVars.reqPayload.file.parents != []]">
                                                    <logger message="Iuuid==&gt;FV=#[flowVars.instanceUuid]==P=#[payload]==userId=#[sessionVars.userId]+++++++In setPayload BFChoice ===googleDriveMessage=#[flowVars.postMessage]   +++++     value=#[flowVars.value]    +++++++     pid=#[flowVars.reqPayload.file.parents[0].id]  ++++     checkRoot=#[flowVars.reqPayload.file.parents[0].isRoot]  +++++     fileName=#[flowVars.reqPayload.file.title]" level="INFO" doc:name="Logger"/>
                                                    <choice doc:name="Choice">
                                                        <when expression="#[flowVars.postMessage == null &amp;&amp; flowVars.value == null &amp;&amp; flowVars.reqPayload.file.title == null]">
                                                            <logger message="And Condition in looping All instances" level="INFO" doc:name="And Condition"/>
                                                        </when>
                                                        <when expression="#[(flowVars.postMessage == null) || (flowVars.value == null) || (flowVars.reqPayload.file.title == null)]">
                                                            <logger message="Or condition for looping all instances" level="INFO" doc:name="Or condition"/>
                                                        </when>
                                                        <otherwise>
                                                            <set-payload value="#[{&quot;googleDriveMessage&quot;: flowVars.postMessage,&quot;value&quot;:flowVars.value,&quot;pid&quot;:flowVars.reqPayload.file.parents[0].id,&quot;checkRoot&quot;:flowVars.reqPayload.file.parents[0].isRoot,&quot;fileName&quot;:flowVars.reqPayload.file.title}]" doc:name="Prepare Message To Management"/>
                                                            <http:request config-ref="HTTP_Integrations_Management_Request_Configuration" path="/hooks/{instanceUuid}" method="POST" doc:name="Hit Management Webhook">
                                                                <http:request-builder>
                                                                    <http:uri-param paramName="instanceUuid" value="#[flowVars.instanceUuid]"/>
                                                                </http:request-builder>
                                                                <http:failure-status-code-validator values="500..599"/>
                                                            </http:request>
                                                        </otherwise>
                                                    </choice>
                                                </when>
                                                <otherwise>
                                                    <logger message="parentsField for a file=#[flowVars.reqPayload.file.title] is empty array +++++ userId=#[sessionVars.userId]" level="INFO" doc:name="Logger"/>
                                                </otherwise>
                                            </choice>
                                        </foreach>
                                        </foreach>
                                        
                                    </when>
                                    <otherwise>
                                        <logger message="changes Nill for User = #[sessionVars.userId]" level="INFO" doc:name="Logger"/>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                        <logger level="INFO" doc:name="Logger" message="pageToken Result &quot;not found&quot; for userId=#[sessionVars.userId]"/>
                                    </otherwise>
                        </choice>


                    </when>
                    <otherwise>
                        <logger level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
        
        
    </flow>

    
</mule>
