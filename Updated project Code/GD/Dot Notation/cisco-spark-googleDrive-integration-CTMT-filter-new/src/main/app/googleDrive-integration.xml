<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
   
    <flow name="postAuthDetailsFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
       <dw:transform-message doc:name="Transform Payload to Java">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable variableName="tokenRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars.postTokenResponse]" doc:name="Message Enricher">
            <flow-ref name="postGoogleDriveTokenFlow" doc:name="Post Google Drive Token Flow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildPostAuthDetailsResponse.dwl"/>
        </dw:transform-message>
    </flow>

	<flow name="postFormatMessageFlow">
        <logger message="hook payload = #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="request" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.request.userEvents]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="events"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <logger message="user events = #[flowVars.events]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.request.hookResponse.pid==flowVars.events.file_id &amp;&amp; flowVars.request.hookResponse.checkRoot=='false']">
                <foreach collection="#[flowVars.events.notifications]" doc:name="perticular Folders">
                    <set-variable variableName="dbEvent" value="#[payload]" doc:name="event"/>
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='file_added']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="File added Message"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='comment' &amp;&amp; flowVars.dbEvent=='comment_create']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_create"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='reply' &amp;&amp; flowVars.dbEvent=='comment_reply']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reply"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='resol' &amp;&amp; flowVars.dbEvent=='comment_resolve']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_resolve"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='reopen' &amp;&amp; flowVars.dbEvent=='comment_reopen']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reopen"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='folder_added']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="folder added Message"/>
                        </when>
                        <when expression="#[flowVars.request.hookResponse.value=='trashed' &amp;&amp; flowVars.dbEvent=='trash']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="file trashed"/>
                        </when>
                        <otherwise>
                            <logger level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </foreach>
            </when>
            <when expression="#[flowVars.request.hookResponse.checkRoot=='false' &amp;&amp; flowVars.events.file_id=='rootfolders' &amp;&amp; flowVars.events.resources=='All Root Folders']">
                <foreach collection="#[flowVars.events.notifications]" doc:name="all Root Folders">
            <set-variable variableName="dbEvent" value="#[payload]" doc:name="event"/>
            <choice doc:name="Choice">
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='file_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="File added Message"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='comment' &amp;&amp; flowVars.dbEvent=='comment_create']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_create"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reply' &amp;&amp; flowVars.dbEvent=='comment_reply']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reply"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='resol' &amp;&amp; flowVars.dbEvent=='comment_resolve']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_resolve"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reopen' &amp;&amp; flowVars.dbEvent=='comment_reopen']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reopen"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='folder_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="folder added Message"/>
                </when>
                        <when expression="#[flowVars.request.hookResponse.value=='trashed' &amp;&amp; flowVars.dbEvent=='trash']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="trash"/>
                        </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
            </when>
            <when expression="#[(flowVars.request.hookResponse.checkRoot=='true' &amp;&amp; flowVars.events.file_id=='all' )|| (flowVars.request.hookResponse.checkRoot=='false' &amp;&amp; flowVars.events.file_id=='all')]">
                <foreach collection="#[flowVars.events.notifications]" doc:name="all">
            <set-variable variableName="dbEvent" value="#[payload]" doc:name="event"/>
            <choice doc:name="Choice">
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='file_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="File added Message"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='comment' &amp;&amp; flowVars.dbEvent=='comment_create']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_create"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reply' &amp;&amp; flowVars.dbEvent=='comment_reply']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reply"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='resol' &amp;&amp; flowVars.dbEvent=='comment_resolve']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_resolve"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reopen' &amp;&amp; flowVars.dbEvent=='comment_reopen']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reopen"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='folder_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="folder added Message"/>
                </when>
                        <when expression="#[flowVars.request.hookResponse.value=='trashed' &amp;&amp; flowVars.dbEvent=='trash']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="trash"/>
                        </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
            </when>
            <when expression="#[flowVars.request.hookResponse.checkRoot=='true' &amp;&amp; flowVars.events.file_id=='rootfiles' &amp;&amp; flowVars.events.resources=='All Root Files']">
                <foreach collection="#[flowVars.events.notifications]" doc:name="all root files">
            <set-variable variableName="dbEvent" value="#[payload]" doc:name="event"/>
            <choice doc:name="Choice">
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='file_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="File added Message"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='comment' &amp;&amp; flowVars.dbEvent=='comment_create']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_create"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reply' &amp;&amp; flowVars.dbEvent=='comment_reply']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reply"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='resol' &amp;&amp; flowVars.dbEvent=='comment_resolve']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_resolve"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reopen' &amp;&amp; flowVars.dbEvent=='comment_reopen']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reopen"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='folder_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="folder added Message"/>
                </when>
                        <when expression="#[flowVars.request.hookResponse.value=='trashed' &amp;&amp; flowVars.dbEvent=='trash']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="trash"/>
                        </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
            </when>
            <when expression="#[(flowVars.request.hookResponse.checkRoot=='true' &amp;&amp; flowVars.events.resources==flowVars.request.hookResponse.fileName) || (flowVars.request.hookResponse.checkRoot=='false' &amp;&amp; flowVars.events.resources==flowVars.request.hookResponse.fileName)]">
                <foreach collection="#[flowVars.events.notifications]" doc:name="perticular File">
            <set-variable variableName="dbEvent" value="#[payload]" doc:name="event"/>
            <choice doc:name="Choice">
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='file_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="File added Message"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='comment' &amp;&amp; flowVars.dbEvent=='comment_create']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_create"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reply' &amp;&amp; flowVars.dbEvent=='comment_reply']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reply"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='resol' &amp;&amp; flowVars.dbEvent=='comment_resolve']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_resolve"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='reopen' &amp;&amp; flowVars.dbEvent=='comment_reopen']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="comment_reopen"/>
                </when>
                <when expression="#[flowVars.request.hookResponse.value=='add' &amp;&amp; flowVars.dbEvent=='folder_added']">
                    <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="folder added Message"/>
                </when>
                        <when expression="#[flowVars.request.hookResponse.value=='trashed' &amp;&amp; flowVars.dbEvent=='trash']">
                            <set-variable variableName="postMessage" value="#[flowVars.request.hookResponse.googleDriveMessage]" doc:name="trash"/>
                        </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger"/>
                </otherwise>
            </choice>
        </foreach>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Build Post Format Message Response">
            <dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
        </dw:transform-message>
    </flow>
        
    <flow name="postIntegrationSettingsFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <logger message="UI #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    	<dw:transform-message doc:name="Transform Payload to Java" metadata:id="dea53757-b847-488f-a796-a4006be3cc94">
            <dw:input-payload doc:sample="sample_data\json_1.json"/>
            <dw:set-variable variableName="request1"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="userId" value="#[flowVars.request1.userId]" doc:name="Set User Id"/>
        <set-variable variableName="integrationId" value="#[flowVars.request1.integrationId]" doc:name="Set Integration Id"/>
        <logger message="UISettings intId=#[flowVars.integrationId]   userId=#[flowVars.userId] payload=#[flowVars.request]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.integrationId != null &amp;&amp; flowVars.userId !=null]">
                <enricher target="#[flowVars.getIntegrationTokenResponse]" doc:name="Message Enricher">
                    <flow-ref name="getIntegrationTokenFlow" doc:name="Get Integration Token Flow Reference"/>
                </enricher>
                <choice doc:name="Token Response">
                    <when expression="#[flowVars.getIntegrationTokenResponse.toString()=='{message=No results}']">
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Invalid userId and integrationId"
}]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <choice doc:name="Check Refresh Token null">
                            <when expression="#[flowVars.getIntegrationTokenResponse[0].refreshToken != null]">
                                <set-variable variableName="refreshToken" value="#[flowVars.getIntegrationTokenResponse[0].refreshToken]" doc:name="Set Refresh Token"/>
                                <set-payload value="#[{&quot;refresh_token&quot;:flowVars.refreshToken,&quot;client_id&quot;:&quot;${googleDrive.integration.client.id}&quot;,&quot;client_secret&quot;:&quot;${googleDrive.integration.client.secret}&quot;,&quot;redirect_uri&quot;:&quot;${googleDrive.integration.redirecr.uri}&quot;,&quot;grant_type&quot;:&quot;${googleDrive.integration.refresh.grantType}&quot;}]" doc:name="Refresh Token Body"/>
                                <http:request config-ref="HTTP_Access_Token_Request_Configuration" path="${googleDrive.api.access.token.path}" method="POST" doc:name="Generate GD Access Token By Refresh Token">
                                    <http:failure-status-code-validator values="500..599"/>
                                </http:request>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-variable variableName="refreshTokenResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                </dw:transform-message>
                                <set-variable variableName="token" value="#[flowVars.refreshTokenResponse.access_token]" doc:name="Set Google Drive Token"/>
                                <enricher target="#[flowVars.getUsersResponse]" doc:name="Message Enricher">
                                    <flow-ref name="getGoogleDriveUserFlow" doc:name="Get Google Drive Users Flow"/>
                                </enricher>
                                <enricher target="#[flowVars.foldersResponse]" doc:name="Message Enricher">
                                    <flow-ref name="getGoogleDriveFoldersNFilesFlow" doc:name="getGoogleDriveFoldersNFilesFlow"/>
                                </enricher>
                                <dw:transform-message doc:name="Build Get Integration Settings Response">
                                    <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
                                </dw:transform-message>
                            </when>
                            <otherwise>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Unauthorize"
}]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"userId or IntegrationId null"
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        
    </flow>
    
    <flow name="setupIntegrationFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Request Message To Java" metadata:id="08f89f09-0335-4231-95e5-8b61b66ecab4">
            <dw:input-payload doc:sample="sample_data\setupRequest.json"/>
            <dw:set-variable variableName="request2"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <enricher target="#[flowVars.hookDetailsResponse]" doc:name="Message Enricher">
            <flow-ref name="postHookForEntireDriveFlow" doc:name="postHookForEntireDriveFlow"/>
        </enricher>
        <dw:transform-message doc:name="Build Setup Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="tearDownIntegrationFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    	<dw:transform-message doc:name="Transform Payload to Java" metadata:id="f8674598-30e1-4f7e-9e3d-ee2e727b6372">
            <dw:input-payload doc:sample="sample_data\deleteHook.json"/>
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="deleteRequest"/>
        </dw:transform-message>
        <enricher target="#[flowVars.deleteHookResponse]" doc:name="Message Enricher">
            <flow-ref name="deleteGoogleDriveHookFlow" doc:name="Delete Google Drive Hook Flow"/>
        </enricher>
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="updateIntegrationFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars.updateIntegrationResponse]" doc:name="Message Enricher">
            <flow-ref name="updateIntegration" doc:name="Update "/>
        </enricher>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildUpdateInstanceResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="healthCheckFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="healthCheckRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="userId" value="#[flowVars.healthCheckRequest.userId]" doc:name="Set User Id"/>
        <set-variable variableName="integrationId" value="#[flowVars.healthCheckRequest.integrationId]" doc:name="Set Integration Id"/>
        <enricher target="#[flowVars.getIntegrationTokenResponse]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
        </enricher>
        <enricher target="#[flowVars.getGDSettingsResponse]" doc:name="Message Enricher">
            <flow-ref name="getGoogleDriveSettingsFlow" doc:name="getGoogleDriveSettingsFlow"/>
        </enricher>
        <dw:transform-message doc:name="Build Health Check Response">
            <dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl"/>
        </dw:transform-message>
    </flow>
</mule>
