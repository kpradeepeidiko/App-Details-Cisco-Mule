<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:googleDrive-integration.xml"/>
        <spring:import resource="classpath:global.xml"/>
        <spring:import resource="classpath:integration-token-operations.xml"/>
        <spring:import resource="classpath:googleDrive-api-calls.xml"/>
    </spring:beans>
    <munit:test name="googleDrive-api-calls-test-suite-postGoogleDriveTokenFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="#[{&quot;integrationId&quot;: &quot;Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OLzY4MzI2OGQzLTI2YjAtNDQ1OC1iMzViLWFmODcwYjU2MTYyNg&quot;,&quot;authSettings&quot;: {&quot;code&quot;: &quot;4/QRRhKp-MUZ0YnoV4wwtEuA-iWHUOw_VTCw2xSfkdEA4&quot;}}]" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="tokenRequest"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <flow-ref name="postGoogleDriveTokenFlow" doc:name="Flow-ref to postGoogleDriveTokenFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-postGoogleDriveRefreshTokenFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="refreshToken" value="#['1/gTKvW4cTiTGQvvVhO9SzRmvM6cgGpVBpTNcjJNMQgac']" doc:name="Set Refresh Token"/>
        <flow-ref name="postGoogleDriveRefreshTokenFlow" doc:name="Flow-ref to postGoogleDriveRefreshTokenFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-getGoogleDriveUserFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="token" value="#['ya29.CjBXAyrRIJI8oSQ00OdGrd4JUqqFKugt-EviMU4K9L93K8c4XVQr9H1V7SyKF3M6-iA']" doc:name="Set Token"/>
        <flow-ref name="getGoogleDriveUserFlow" doc:name="Flow-ref to getGoogleDriveUserFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-getGoogleDriveFoldersNFilesFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="token" value="#['ya29.CjBXAyrRIJI8oSQ00OdGrd4JUqqFKugt-EviMU4K9L93K8c4XVQr9H1V7SyKF3M6-iA']" doc:name="Set Token"/>
        <flow-ref name="getGoogleDriveFoldersNFilesFlow" doc:name="Flow-ref to getGoogleDriveFoldersNFilesFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-postHookForEntireDriveFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="#[{&quot;userId&quot;:&quot;Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMGU2OWMzYi1lMzU4LTQ3ZTUtODQyYy02MWMxMmRlNTVhY2Q&quot;,&quot;integrationId&quot;: &quot;Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OLzY4MzI2OGQzLTI2YjAtNDQ1OC1iMzViLWFmODcwYjU2MTYyNg&quot;}]" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="request"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <set-payload value="#[[{&quot;tokenId&quot;:441,&quot;refreshToken&quot;: &quot;1/gTKvW4cTiTGQvvVhO9SzRmvM6cgGpVBpTNcjJNMQgac&quot;,&quot;accessToken&quot;: &quot;ya29.Ci9HA0_Rlm1ptyI6tCYSSBuXBQrmYf-uoOq0UXevxoOm3GViNSxUudF_wuy6RUt5pA&quot;,&quot;userId&quot;:&quot;Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMGU2OWMzYi1lMzU4LTQ3ZTUtODQyYy02MWMxMmRlNTVhY2Q&quot;,&quot;integrationId&quot;: &quot;Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OLzY4MzI2OGQzLTI2YjAtNDQ1OC1iMzViLWFmODcwYjU2MTYyNg&quot;}]]" doc:name="Set Payload"/>
        <flow-ref name="postHookForEntireDriveFlow" doc:name="Flow-ref to postHookForEntireDriveFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-updateIntegrationTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="#[{&quot;instanceId&quot;:&quot;fhvbvjhfvkdfvjkdfjkvd&quot;,&quot;channelId&quot;: &quot;Y2lzY2ZmRmMy0zZjRjLWJiM2MtZjZmY2U5Yzc5ODcy&quot;,&quot;integrationId&quot;: &quot;Y2lzY29zcGFyazovL3VzL0FQUExJQ0FUSU9OLzY4MzI2OGQzLTI2YjAtNDQ1OC1iMzViLWFmODcwYjU2MTYyNg&quot;,&quot;userId&quot;: &quot;Y2lzY29zcGFyazovL3VzL1BFT1BMRS9mMGU2OWMzYi1lMzU4LTQ3ZTUtODQyYy02MWMxMmRlNTVhY2Q&quot;,&quot;instanceUuid&quot;:&quot;jhbfgjhk455375&quot;}]" doc:name="Set Payload"/>
        <flow-ref name="updateIntegration" doc:name="Flow-ref to updateIntegration"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-deleteGoogleDriveHookFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-payload value="#[{&quot;message&quot;:&quot;Operation executed successfully&quot;}]" doc:name="Set Payload"/>
        <flow-ref name="deleteGoogleDriveHookFlow" doc:name="Flow-ref to deleteGoogleDriveHookFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="googleDrive-api-calls-test-suite-getGoogleDriveChangesFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <set-variable variableName="token" value="#['ya29.CjBXAyrRIJI8oSQ00OdGrd4JUqqFKugt-EviMU4K9L93K8c4XVQr9H1V7SyKF3M6-iA']" doc:name="Set Token"/>
        <flow-ref name="getGoogleDriveChangesFlow" doc:name="Flow-ref to getGoogleDriveChangesFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
</mule>
