<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
   
    <flow name="postAuthDetailsFlow">
       <dw:transform-message doc:name="Transform Payload to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars.postTokenResponse]" doc:name="Message Enricher">
            <flow-ref name="postPagerdutyTokenFlow" doc:name="postPagerdutyTokenFlow"/>
        </enricher>
        <dw:transform-message doc:name="Build Post Auth Details Response">
            <dw:set-payload resource="classpath:dwScripts/buildPostAuthDetailsResponse.dwl"/>
        </dw:transform-message>
    </flow>

	<flow name="postFormatMessageFlow">
        <dw:transform-message metadata:id="16db4717-7738-482e-a489-7aed77630932" doc:name="Build Post Format Message Request">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable variableName="response" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform User Events To Json">
        	<dw:set-payload resource="classpath:dwScripts/buildUserEventsResponse.dwl"/>
		</dw:transform-message>
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Change Content Type To Json"/>
        <dw:transform-message doc:name="Transform Message to Java">
            <dw:set-variable variableName="userEventsVariable" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <foreach collection="#[flowVars.userEventsVariable.incidents]" doc:name="Loop User Selected Incidents">
        	<set-variable variableName="event" value="#[payload]" doc:name="User Incident Type"/>
        	<choice doc:name="Routing Notifications Alerts">
            <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.acknowledge' &amp;&amp; flowVars.event =='acknowledge']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url])  #[flowVars.response.hookResponse.messages[0].data.incident.status] by [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url])" doc:name="Incident Acknowledged Alert"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.trigger' &amp;&amp; flowVars.event=='trigger']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url])  #[flowVars.response.hookResponse.messages[0].data.incident.status] by service [#[flowVars.response.hookResponse.messages[0].data.incident.service.name]](#[flowVars.response.hookResponse.messages[0].data.incident.service.html_url]) and assigned to [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url])" doc:name="Incident Trigger Alert"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.resolve' &amp;&amp; flowVars.event=='resolve']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url])  #[flowVars.response.hookResponse.messages[0].data.incident.status] by [#[flowVars.response.hookResponse.messages[0].data.incident.resolved_by_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.resolved_by_user.html_url])" doc:name="Incident Resolved Alert"/>
            </when>
            <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.assign' &amp;&amp; flowVars.event=='assign']">
                <set-variable variableName="postMessage" value="Incident  [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url])  assigned to [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url])" doc:name="Incident Reassign Alert"/>
            </when>
                <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.unacknowledge' &amp;&amp; flowVars.event=='unacknowledge']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url]) assigned to [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url]) unacknowledged" doc:name="Incident Unacknowledge Alert"/>
                </when>
                <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.escalate' &amp;&amp; flowVars.event=='escalate']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url])  escalated to [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url])" doc:name="Incident Escalate Alert"/>
                </when>
                <when expression="#[flowVars.response.hookResponse.messages[0].type =='incident.delegate' &amp;&amp; flowVars.event=='delegate']">
                <set-variable variableName="postMessage" value="Incident [##[flowVars.response.hookResponse.messages[0].data.incident.incident_number] : #[flowVars.response.hookResponse.messages[0].data.incident.trigger_summary_data.subject]](#[flowVars.response.hookResponse.messages[0].data.incident.html_url]) delegated reassigned to another escalation policy **#[flowVars.response.hookResponse.messages[0].data.incident.escalation_policy.name]** assigned to [#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.name]](#[flowVars.response.hookResponse.messages[0].data.incident.assigned_to_user.html_url])" doc:name="Incident Delegate Alert"/>
                </when>
            <otherwise>
                <logger message="incident #[flowVars.event] Failed" level="INFO" doc:name="defaultFlow"/>
            </otherwise>
        </choice>
        
        </foreach>
        <dw:transform-message doc:name="Build Post Format Message Response">
 				<dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
        </dw:transform-message>
        
    </flow>
        
    <flow name="postIntegrationSettingsFlow">
    	<dw:transform-message doc:name="Transform Payload to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars.webhook]" doc:name="Message Enricher">
            <flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/>
        </enricher>
        <choice doc:name="Check Webhook Url Generated">
            <when expression="#[flowVars.webhook != empty]">
                <dw:transform-message doc:name="Build Get Integration Settings Response">
                    <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
            	<dw:transform-message doc:name="Build Get Integration Settings Failure Response">
  					<dw:set-payload resource="classpath:dwScripts/buildPostSettingsFailureResponseExample.dwl"/>
				</dw:transform-message>
                
            </otherwise>
        </choice>
    </flow>
    
    <flow name="setupIntegrationFlow">
        <dw:transform-message doc:name="Build Setup Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="updateIntegrationFlow">
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars.updateIntegrationResponse]" doc:name="Message Enricher">
            <flow-ref name="updatePagerdutyIntegrationFlow" doc:name="Update Pagerduty Integration Flow Reference"/>
        </enricher>
        <dw:transform-message doc:name="Transform Update Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildUpdateIntegrationResponseExample.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="tearDownIntegrationFlow">
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="healthCheckFlow">
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="healthChechRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <enricher target="#[flowVars.generateWebhookUrlResponse]" doc:name="Message Enricher">
            <flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/>
        </enricher>
        <http:request config-ref="HTTP_Integration_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get Instance Details">
            <http:request-builder>
          	  	<http:query-param paramName="client_id" value="${runtime.clientidenforcement.id}"/>
				<http:query-param paramName="client_secret" value="${runtime.clientidenforcement.secret}"/>
                <http:query-param paramName="integrationId" value="#[flowVars.healthChechRequest.integrationId]"/>
                <http:query-param paramName="userId" value="#[flowVars.healthChechRequest.userId]"/>
                <http:query-param paramName="status" value="ACTIVE"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="instanceDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars.instanceDetails.toString() != '{message=No results}']">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.instanceDetails.configJson]]></dw:set-payload>
                </dw:transform-message>
                <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="configJsonDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                </dw:transform-message>
                <dw:transform-message doc:name="Build Health Check Response">
                    <dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Build Health Check Response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"result":"Integration is working correctly.",
	"generateWebhookUrlResponse": flowVars.generateWebhookUrlResponse,
	"instanceDetails": flowVars.instanceDetails
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
    </flow>
</mule>
