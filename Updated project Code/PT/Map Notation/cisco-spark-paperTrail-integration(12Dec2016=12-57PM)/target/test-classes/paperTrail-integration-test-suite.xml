<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <munit:config doc:name="Munit configuration" mock-connectors="false" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:paperTrail-api-calls.xml"/>
        <spring:import resource="classpath:global.xml"/>
        <spring:import resource="classpath:paperTrail-integration.xml"/>
    </spring:beans>
    <munit:test name="paperTrail-integration-test-suite-postAuthDetailsFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"client_id":"hkfjrrf5456",
	"client_secret":"hjmfcjfkffio",
	"code":"ghtecvbgfdswet2364"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postAuthDetailsFlow" doc:name="Flow-ref to postAuthDetailsFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-postFormatMessageFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"hookResponse": {
		"result": {
			"min_id": "697781840597286917",
			"max_id": "697812145387413504",
			"events": [{
				"id": 697781840597286917,
				"source_ip": "183.82.99.100",
				"program": "acvpnagent",
				"message": "Function: CFileUploader::CFileUploader File: ..\\FileUploader.cpp Line: 121 Internal test mode: Accepting self signed certifcate ",
				"received_at": "2016-08-04T14:32:57+05:30",
				"display_received_at": "Aug 04 14:32:57",
				"source_id": 398878273,
				"source_name": "bandaru1-PC",
				"hostname": "bandaru1-PC",
				"severity": "Warning",
				"facility": "User"
			}, {
				"id": 697789431087955972,
				"source_ip": "183.82.99.100",
				"program": "acvpnagent",
				"message": "Function: CFileUploader::CFileUploader File: ..\\FileUploader.cpp Line: 121 Internal test mode: Accepting self signed certifcate ",
				"received_at": "2016-08-04T15:03:07+05:30",
				"display_received_at": "Aug 04 15:03:07",
				"source_id": 398878273,
				"source_name": "bandaru1-PC",
				"hostname": "bandaru1-PC",
				"severity": "Warning",
				"facility": "User"
			}, {
				"id": 697789431096344587,
				"source_ip": "183.82.99.100",
				"program": "acvpnagent",
				"message": "Function: CFileUploader::SendHttpRequest File: ..\\FileUploader.cpp Line: 189 Invoked Function: HttpSession::SendRequest Return Code: 12007 (0x00002EE7) Description: WINDOWS_ERROR_CODE  ",
				"received_at": "2016-08-04T15:03:07+05:30",
				"display_received_at": "Aug 04 15:03:07",
				"source_id": 398878273,
				"source_name": "bandaru1-PC",
				"hostname": "bandaru1-PC",
				"severity": "Warning",
				"facility": "User"
			}],
			"saved_search": {
				"id": 12359593,
				"name": "important",
				"query": "\\FileUploader.cpp",
				"html_edit_url": "https://papertrailapp.com/searches/12359593/edit",
				"html_search_url": "https://papertrailapp.com/searches/12359593"
			},
			"reached_beginning": true,
			"min_time_at": "2016-08-04T05:49:28Z"
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="postFormatMessageFlow" doc:name="Flow-ref to postFormatMessageFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-postIntegrationSettingsFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <flow-ref name="postIntegrationSettingsFlow" doc:name="Flow-ref to postIntegrationSettingsFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-setupIntegrationFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "integrationId":"hfdvjhdfvdfuvhdfjkvdf",
  "userId":"fjvjfvvjkvsdosdvjnsdjkvnnsdj",
  "channelId": "fsdfsdfsffghnnfgn",
  "configJson": {
    "room": "aaabbc",
    "username": "aaabbc",
    "webhook_url": "https://cisco-spark-integration-management-dev.cloudhub.io/api/hooks/hta5bf5b-cdc0-40cb-84d6-2df220c7a70a",
    "password": "aaxcbbb"
  },
  "status":"ACTIVE",
  "createdDate":"2016-08-03T00:00:00",
  "updatedDate":"2016-08-03T00:00:00",
  "instanceUuid": "c691ccac-5484-44b7-bec2-f553d66c3114"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="setupIntegrationFlow" doc:name="Flow-ref to setupIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-updateIntegrationFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "integrationId":"hfdvjhdfvdfuvhdfjkvdf",
  "userId":"fjvjfvvjkvsdosdvjnsdjkvnnsdj",
  "channelId": "fsdfsdfsffghnnfgn",
  "configJson": {
    "room": "aaabbc",
    "username": "aaabbc",
    "webhook_url": "https://cisco-spark-integration-management-dev.cloudhub.io/api/hooks/hta5bf5b-cdc0-40cb-84d6-2df220c7a70a",
    "password": "aaxcbbb"
  },
  "status":"ACTIVE",
  "createdDate":"2016-08-03T00:00:00",
  "updatedDate":"2016-08-03T00:00:00",
  "instanceUuid": "c691ccac-5484-44b7-bec2-f553d66c3114"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="updateIntegrationFlow" doc:name="Flow-ref to updateIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-tearDownIntegrationFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "integrationId":"hfdvjhdfvdfuvhdfjkvdf",
  "userId":"fjvjfvvjkvsdosdvjnsdjkvnnsdj",
  "channelId": "fsdfsdfsffghnnfgn",
  "configJson": {
    "room": "aaabbc",
    "username": "aaabbc",
    "webhook_url": "https://cisco-spark-integration-management-dev.cloudhub.io/api/hooks/hta5bf5b-cdc0-40cb-84d6-2df220c7a70a",
    "password": "aaxcbbb"
  },
  "status":"ACTIVE",
  "createdDate":"2016-08-03T00:00:00",
  "updatedDate":"2016-08-03T00:00:00",
  "instanceUuid": "c691ccac-5484-44b7-bec2-f553d66c3114"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="tearDownIntegrationFlow" doc:name="Flow-ref to tearDownIntegrationFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="paperTrail-integration-test-suite-healthCheckFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
    "integrationId": "19",
    "userId": "Y2lzY29zcGFyazovL3VzL1BFT1BMRS8yYTA0YzVkMy0yNGJjLTQ1ZWItYmQzYS05ZDU1OGRmMmZhMjI"
}]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="healthCheckFlow" doc:name="Flow-ref to healthCheckFlow"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
</mule>
