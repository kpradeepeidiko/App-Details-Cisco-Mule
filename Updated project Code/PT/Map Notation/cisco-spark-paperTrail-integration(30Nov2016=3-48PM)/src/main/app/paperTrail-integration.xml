<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:CiscoSpark="http://www.mulesoft.org/schema/mule/CiscoSpark" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/CiscoSpark http://www.mulesoft.org/schema/mule/CiscoSpark/current/mule-CiscoSpark.xsd">
   
    <flow name="postAuthDetailsFlow">
       <dw:transform-message doc:name="Transform Payload to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars['postTokenResponse']]" doc:name="Message Enricher">
            <flow-ref name="postPaperTrailTokenFlow" doc:name="postPaperTrailTokenFlow"/>
        </enricher>
        <dw:transform-message doc:name="Build Post Auth Details Response">
            <dw:set-payload resource="classpath:dwScripts/buildPostAuthDetailsResponse.dwl"/>
        </dw:transform-message>
    </flow>

	<flow name="postFormatMessageFlow">
        <dw:transform-message metadata:id="16db4717-7738-482e-a489-7aed77630932" doc:name="Build Post Format Message Request">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="request"/>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars['request']['hookResponse']['result']['counts']]">
                <set-variable variableName="postMessage" value="Search Query [#[flowVars['request']['hookResponse']['result']['saved_search']['query']]](#[flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']]) for Search ID [#[flowVars['request']['hookResponse']['result']['saved_search']['id']]](#[flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']]) results #[flowVars.request.hookResponse.result.counts.size()] count" doc:name="counts"/>
            </when>
            <when expression="#[flowVars['request']['hookResponse']['result']['events'].size()&lt;=3]">
                <set-variable variableName="paperTailArray" value="#[new java.util.ArrayList()]" doc:name="Set An Array for &lt;= 3"/>
                <foreach collection="#[flowVars['request']['hookResponse']['result']['events']]" doc:name="For Each">
                    <set-variable variableName="storeValues" value="#['\n        \n        Date = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].display_received_at+'  \n        Hostname = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].hostname+'  \n        Message = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].message+'']" doc:name="Store Values"/>
                    <expression-component doc:name="Expression"><![CDATA[paperTailArray.add(flowVars['storeValues'])]]></expression-component>
                </foreach>
                <set-variable variableName="Result" value="#[flowVars.paperTailArray.toString().replace(',',' ')]" doc:name="Variable"/>
                <set-variable variableName="Result" value="#[flowVars.Result.toString().replace('[',' ')]" doc:name="Variable"/>
                <expression-component doc:name="Expression"><![CDATA[flowVars.Result = flowVars.Result.toString().replace(']',' ')]]></expression-component>
                <set-variable variableName="postMessage" value="#['Search Query  ['+flowVars['request']['hookResponse']['result']['saved_search']['query']+']('+flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']+')  found '+flowVars.request.hookResponse.result.events.size()+' matches.Upto 3 recent matches briefed below. [Click here]('+flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']+') to see all '+flowVars.request.hookResponse.result.events.size()+'    \n        '+flowVars['Result']+'']" doc:name="Post Message"/>
            </when>
            <otherwise>
            	 <set-variable variableName="paperTailArray" value="#[new java.util.ArrayList()]" doc:name="Set An Array"/>
                <foreach collection="#[flowVars['request']['hookResponse']['result']['events']]" doc:name="For Each">
                    <choice doc:name="Choice">
                        <when expression="#[flowVars['counter'] &lt; 4]">
                            <set-variable variableName="storeValues" value="#['\n        \n        Date = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].display_received_at+'  \n        Hostname = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].hostname+'  \n        Message = '+flowVars.request.hookResponse.result.events[flowVars.counter-1].message+'']" doc:name="Store Values"/>
                            <expression-component doc:name="Expression"><![CDATA[paperTailArray.add(flowVars['storeValues'])]]></expression-component>
                        </when>
                        <otherwise>
                            <logger level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                </foreach>
                <set-variable variableName="Result" value="#[flowVars.paperTailArray.toString().replace(',',' ')]" doc:name="Variable"/>
                <set-variable variableName="Result" value="#[flowVars.Result.toString().replace('[',' ')]" doc:name="Variable"/>
                <expression-component doc:name="Expression"><![CDATA[flowVars.Result =  flowVars.Result.toString().replace(']',' ')]]></expression-component>
                <set-variable variableName="postMessage" value="#['Search Query  ['+flowVars['request']['hookResponse']['result']['saved_search']['query']+']('+flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']+')  found '+flowVars.request.hookResponse.result.events.size()+' matches.Upto 3 recent matches briefed below.[Click here]('+flowVars['request']['hookResponse']['result']['saved_search']['html_search_url']+') to see all '+flowVars.request.hookResponse.result.events.size()+'   \n        '+flowVars['Result']+'']" doc:name="Post Message"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Build Post Format Message Response">
 				<dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
        </dw:transform-message>
        
    </flow>
        
    <flow name="postIntegrationSettingsFlow">
    	<dw:transform-message doc:name="Transform Payload to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars['webhook']]" doc:name="Message Enricher">
            <flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars['webhook'] != empty]">
                <dw:transform-message doc:name="Build Get Integration Settings Response">
                    <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
            	<dw:transform-message doc:name="Build Get Integration Settings Failure Response">
  					<dw:set-payload resource="classpath:dwScripts/buildPostSettingsFailureResponseExample.dwl"/>
				</dw:transform-message>
                
            </otherwise>
        </choice>
    </flow>
    
    <flow name="setupIntegrationFlow">
        <dw:transform-message doc:name="Build Setup Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    <flow name="updateIntegrationFlow">
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <enricher target="#[flowVars['updateIntegrationResponse']]" doc:name="Message Enricher">
            <flow-ref name="updatePaperTrailIntegrationFlow" doc:name="updatePaperTrailIntegrationFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Update Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildUpdateIntegrationResponseExample.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="tearDownIntegrationFlow">
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
    </flow>
    
    <flow name="healthCheckFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="healthCheckRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="integrationId" value="#[flowVars['healthCheckRequest']['integrationId']]" doc:name="Set Integration Id"/>
        <set-variable variableName="userId" value="#[flowVars['healthCheckRequest']['userId']]" doc:name="Set User Id"/>
        <enricher target="#[flowVars['generateWebhookResponse']]" doc:name="Message Enricher">
            <flow-ref name="generateWebhookUrlFlow" doc:name="generateWebhookUrlFlow"/>
        </enricher>
        <http:request config-ref="HTTP_Integration_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get Instance List">
            <http:request-builder>
            	<http:query-param paramName="client_id" value="${runtime.clientidenforcement.id}"/>
				<http:query-param paramName="client_secret" value="${runtime.clientidenforcement.secret}"/>
                <http:query-param paramName="integrationId" value="#[flowVars.healthCheckRequest.integrationId]"/>
                <http:query-param paramName="userId" value="#[flowVars.healthCheckRequest.userId]"/>
                <http:query-param paramName="status" value="#['ACTIVE']"/>
            </http:request-builder>
            <http:failure-status-code-validator values="500..599"/>
        </http:request>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="instanceResult" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars.instanceResult.toString() != '{message=No results}']">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.instanceResult[0].configJson]]></dw:set-payload>
                </dw:transform-message>
                <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="configJsonResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                </dw:transform-message>
                <dw:transform-message doc:name="Build Health Check Response">
                    <dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Build Health Check Response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integration_status":"Integration is working fine.",
	"integration_name":"Papertrail",
	"integration_description":"This is pertrail integration",
	"integrationId": flowVars['integrationId'],
	"generateWebhookUrlResponse": flowVars['generateWebhookResponse'],
	"instanceDetails": flowVars['instanceResult']
	
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-variable variableName="exception" value="#[exception.message]" doc:name="exception"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integration_status":"The below integration has some issues!!",
	"integration_name":"Papertrail",
	"integration_description":"This is papertrail integration",
	"integrationId": flowVars['integrationId'],
	"exception_from_specific_healthCheck": flowVars['exception']
	
}]]></dw:set-payload>
            </dw:transform-message>
        </catch-exception-strategy>
    </flow>
</mule>
