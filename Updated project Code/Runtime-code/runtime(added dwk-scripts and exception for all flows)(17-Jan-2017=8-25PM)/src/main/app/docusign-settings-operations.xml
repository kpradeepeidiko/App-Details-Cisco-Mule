<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="getDocusingPdfBytesFlow">
        <logger message="ENVIDDDDDDD #[flowVars.envId]" level="INFO" doc:name="Logger"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * from DOCUSIGN_PDF_SETTINGS WHERE envelope_id=#[flowVars['envId']]]]></db:parameterized-query>

        </db:select>
        <logger message="get GD Settings= #[payload]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[payload != []]">
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload doc:sample="classpath:dwScripts/builddocusignGetSettings.dwl" mimeType="application/java"/>
                    <dw:set-payload resource="classpath:dwScripts/builddocusignGetSettings.dwl"/>

                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="No Results">
                <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveNoResultExample.dwl" mimeType="application/java"/>
          			<dw:set-payload resource="classpath:dwScripts/buildGoogleDriveNoResultExample.dwl"/>
                </dw:transform-message>
            </otherwise>
        </choice>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in getDocusingPdfBytesFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>
    <flow name="PostDocusignSettingsFlow">
        <logger message="PAYDOCUSIGN #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/fromObjectToJava.dwl" mimeType="application/java"/>
   			<dw:set-payload resource="classpath:dwScripts/fromObjectToJava.dwl"/>
        </dw:transform-message>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO DOCUSIGN_PDF_SETTINGS(envelope_id,pdf_bytes,created_date) VALUES(#[payload['envelopeId']],#[payload['pdfBytes']],#[payload['sentDate']])]]></db:parameterized-query>

        </db:insert>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveOperationExample.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/buildGoogleDriveOperationExample.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in PostDocusignSettingsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>
    <flow name="PutDocusignSettingFlow">
        <logger message="In put call DOCUSIGN #[message.payloadAs(java.lang.String)] and #[flowVars.envId]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/fromObjectToJava.dwl" mimeType="application/java"/>
   			<dw:set-payload resource="classpath:dwScripts/fromObjectToJava.dwl"/>
        </dw:transform-message>
        <db:update config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE DOCUSIGN_PDF_SETTINGS SET pdf_bytes=IF (#[payload['pdfBytes'] != empty], #[payload['pdfBytes']], pdf_bytes) where envelope_id = #[flowVars['envId']]]]></db:parameterized-query>
        </db:update>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveOperationExample.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/buildGoogleDriveOperationExample.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in PutDocusignSettingFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>
    <flow name="getDocusignCertificateSettingsFlow">
        <logger level="INFO" doc:name="Logger"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * from  DOCUSIGN_DOC_PDF_SETTINGS WHERE envelope_id=#[flowVars['envId']]]]></db:parameterized-query>
        </db:select>
        <logger message="Get Docusign certificate details from db #[payload]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[payload != []]">
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload doc:sample="classpath:dwScripts/buildDocusignCertificateSettingsResponse.dwl" mimeType="application/java"/>
                    <dw:set-payload resource="classpath:dwScripts/buildDocusignCertificateSettingsResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveNoResultExample.dwl" mimeType="application/java"/>
                    <dw:set-payload resource="classpath:dwScripts/buildGoogleDriveNoResultExample.dwl"/>
                </dw:transform-message>
            </otherwise>
        </choice>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in getDocusignCertificateSettingsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>
    <flow name="PostDocusignCertificateSettingsFlow">
        <logger level="INFO" doc:name="Logger" message="#[message.payloadAs(java.lang.String)]"/>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/fromObjectToJava.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/fromObjectToJava.dwl"/>
        </dw:transform-message>
        <logger message="After transferMEssage :#[payload.pdfByteName] *** #[payload]" level="INFO" doc:name="Logger"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO DOCUSIGN_DOC_PDF_SETTINGS(envelope_id,doc_type,doc_pdf_bytes,created_date) VALUES(#[payload['envelopeId']],'Certificate',#[payload['pdfByteName']],#[payload['sentDate']])]]></db:parameterized-query>
        </db:insert>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveOperationExample.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/buildGoogleDriveOperationExample.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in PostDocusignCertificateSettingsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>
    <flow name="PutDocusignCertificateSettingsFlow">
        <logger level="INFO" doc:name="Logger" message="in put docusign certificate flow"/>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/fromObjectToJava.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/fromObjectToJava.dwl"/>
        </dw:transform-message>
        <db:update config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE DOCUSIGN_DOC_PDF_SETTINGS SET doc_pdf_bytes=IF (#[payload['docPdfBytes'] != empty], #[payload['docPdfBytes']], doc_pdf_bytes) where envelope_id = #[flowVars['envId']]]]></db:parameterized-query>
        </db:update>
        <dw:transform-message doc:name="Transform Message">
        <dw:input-payload doc:sample="classpath:dwScripts/buildGoogleDriveOperationExample.dwl" mimeType="application/java"/>
            <dw:set-payload resource="classpath:dwScripts/buildGoogleDriveOperationExample.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy" logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in PutDocusignCertificateSettingsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
    </flow>

</mule>
