<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<flow name="getIntegrationsFlow">
		<set-variable variableName="status"
			value="#[message.inboundProperties.'http.query.params'.status]"
			doc:name="Set Status" />
		<choice doc:name="Choice to check status exists">
			<when expression="#[ flowVars.status != empty ]">
				<db:select config-ref="MySQL_Configuration" doc:name="Get all Integrations with status">
					<db:parameterized-query><![CDATA[SELECT * FROM INTEGRATIONS WHERE status = #[flowVars['status']]]]></db:parameterized-query>
				</db:select>
			</when>
			<otherwise>
				<db:select config-ref="MySQL_Configuration" doc:name="Get all Integrations">
					<db:parameterized-query><![CDATA[SELECT * FROM INTEGRATIONS]]></db:parameterized-query>
				</db:select>
			</otherwise>
		</choice>
		<choice doc:name="Check Result Set Size">
			<when expression="#[payload != []]">
				<dw:transform-message doc:name="Build Get Integrations Response">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildGetIntegrationsResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildGetIntegrationsResponse.dwl" />
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Build No Results Message">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildSelectNoResultsResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildSelectNoResultsResponse.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
		<choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy"
				logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in getIntegrationsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
	</flow>

	<flow name="getIntegrationFlow">
		<db:select config-ref="MySQL_Configuration" doc:name="Get Integration details">
			<db:parameterized-query><![CDATA[SELECT * FROM INTEGRATIONS WHERE integration_id = #[flowVars['integrationId']]]]></db:parameterized-query>
		</db:select>

		<choice doc:name="Check Result Set Size">
			<when expression="#[payload != []]">
				<dw:transform-message doc:name="Build Get Integration Response">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildGetIntegrationResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildGetIntegrationResponse.dwl" />
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Build No Results Message">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildSelectNoResultsResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildSelectNoResultsResponse.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
		<choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy"
				logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in getIntegrationFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
	</flow>

	<flow name="getIntegrationSettingsFlow">
		<db:select config-ref="MySQL_Configuration" doc:name="Get Integration Settings">
			<db:parameterized-query><![CDATA[SELECT * FROM INTEGRATIONS_SETTINGS WHERE integration_id = #[flowVars['integrationId']]]]></db:parameterized-query>
		</db:select>
		<choice doc:name="Check Result Set Size">
			<when expression="#[payload != []]">
				<dw:transform-message doc:name="Build Get Integration Settings Response">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl" />
				</dw:transform-message>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Build No Results Message">
					<dw:input-payload
						doc:sample="classpath:dwScripts/buildSelectNoResultsResponse.dwl"
						mimeType="application/java" />
					<dw:set-payload
						resource="classpath:dwScripts/buildSelectNoResultsResponse.dwl" />
				</dw:transform-message>
			</otherwise>
		</choice>
		<choice-exception-strategy doc:name="Choice Exception Strategy">
			<catch-exception-strategy doc:name="Catch Exception Strategy"
				logException="false">
				<set-variable variableName="exception" value="#[exception.message]"
					doc:name="exception" />
				<logger
					message="Exception in getIntegrationSettingsFlow = #[flowVars['exception']]"
					level="INFO" doc:name="Logger" />

			</catch-exception-strategy>
		</choice-exception-strategy>
	</flow>

</mule>
