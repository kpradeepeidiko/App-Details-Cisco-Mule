<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
   
    <flow name="postAuthDetailsFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
       <dw:transform-message doc:name="Transform Payload to Java">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-variable variableName="tokenRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"/>
        </dw:transform-message>
        <enricher target="#[flowVars['postTokenResponse']]" doc:name="Message Enricher">
            <flow-ref name="postasanaTokenFlow" doc:name="postasanaTokenFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload resource="classpath:dwScripts/buildPostAuthDetailsResponse.dwl"/>
        </dw:transform-message>
    </flow>

        
    <flow name="postIntegrationSettingsFlow">

        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>

    	<dw:transform-message doc:name="Transform Payload to Java">
            <dw:input-payload doc:sample="sample_data\json_1.json"/>
            <dw:set-variable variableName="request1"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>

        <set-variable variableName="userId" value="#[flowVars['request1']['userId']]" doc:name="Set User Id"/>
        <set-variable variableName="integrationId" value="#[flowVars['request1']['integrationId']]" doc:name="Set Integration Id"/>
        <enricher target="#[flowVars['tokenResponse']]" doc:name="Message Enricher">
            <flow-ref name="getTokenByChoiceCondition" doc:name="getTokenByChoiceCondition"/>
        </enricher>

        <choice doc:name="Choice">
            <when expression="#[flowVars.tokenResponse.containsKey('tokenFlowToken')]">
                <set-variable variableName="asanaToken" value="#[flowVars['tokenResponse']['tokenFlowToken']]" doc:name="Set Asana Token"/>
                <choice doc:name="Select On Conditions">
                    <when expression="#[flowVars['request1']['responseType']=='teams']">
                        <set-variable variableName="workspaceId" value="#[flowVars['request1']['organizationId']]" doc:name="Set Organization Id"/>
                        <set-variable variableName="asanaUserId" value="#[flowVars['request1']['asana_user_id']]" doc:name="Set Asana User Id"/>
                        <enricher target="#[flowVars['settingsResponse']]" doc:name="Get Teams ">
                            <flow-ref name="getAsanaTeamsInOrganizationsFlow" doc:name="getAsanaTeamsInOrganizationsFlow"/>
                        </enricher>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"TeamsResult": flowVars['settingsResponse']
}]]></dw:set-payload>
                        </dw:transform-message>

                    </when>
                    <when expression="#[flowVars['request1']['responseType']=='projects']">
                        <set-variable variableName="team_id" value="#[flowVars['request1']['teamId']]" doc:name="Set Team Id"/>
                        <enricher target="#[flowVars['settingsResponse']]" doc:name="Get Projects">
                            <flow-ref name="getAsanaProjectsFlow" doc:name="getAsanaProjectsFlow"/>
                        </enricher>
                        <choice doc:name="Choice">
                            <when expression="#[flowVars.settingsResponse.toString().contains('data')]">
                                <dw:transform-message doc:name="Build Get Integration Settings Response">
                                    <dw:set-payload resource="classpath:dwScripts/buildGetIntegrationSettingsResponse.dwl"/>
                                </dw:transform-message>
                            </when>
                            <otherwise>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"projectsResponse" : flowVars['settingsResponse']
}]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>

                    </when>
                    <otherwise>
                    	<enricher target="#[flowVars['userFlowsettingsResponse']]" doc:name="Get Projects">
    						<flow-ref name="getAsanaUserFlow" doc:name="getAsanaUserFlow"/>
						</enricher>
                        <enricher target="#[flowVars['settingsResponse']]" doc:name="Get Organizations">
                            <flow-ref name="getAsanaOrganizationsFlow" doc:name="getAsanaOrganizationsFlow"/>
                        </enricher>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"usersDetails": flowVars['userFlowsettingsResponse'],
	"organizations": flowVars['settingsResponse']
}]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="#[500]" doc:name="Set Http Status"/>
                <dw:transform-message doc:name="Set Failure Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars.tokenResponse]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>

        
    </flow>
    
    <flow name="setupIntegrationFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Request Message To Java">
            <dw:input-payload doc:sample="sample_data\setupRequest.json"/>
            <dw:set-variable variableName="request2"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars['request2']['configJson']['project_id'] !=null]">
                <set-variable variableName="integrationId" value="#[flowVars['request2']['integrationId']]" doc:name="Set Integration Id"/>
                <set-variable variableName="userId" value="#[flowVars['request2']['userId']]" doc:name="Set User Id"/>
                <enricher target="#[flowVars['tokenResponse']]" doc:name="Get Asana Token">
                    <flow-ref name="getTokenByChoiceCondition" doc:name="getTokenByChoiceCondition"/>
                </enricher>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.tokenResponse.containsKey('tokenFlowToken')]">
                        <set-variable variableName="token" value="#[flowVars['tokenResponse']['tokenFlowToken']]" doc:name="Set Token"/>
                        <set-variable variableName="project_id" value="#[flowVars['request2']['configJson']['project_id']]" doc:name="Set Project Id"/>
                        <set-variable variableName="webhook_url" value="https://${asana.webhook.domain}/api/asana/#[flowVars['request2']['instanceUuid']]" doc:name="Set Webhook Url"/>
                        <enricher target="#[flowVars['hookDetailsResponse']]" doc:name="Generate Webhook">
                            <flow-ref name="generateWebhookFlow" doc:name="generateWebhookFlow"/>
                        </enricher>
                    </when>
                    <otherwise>
                        <set-variable variableName="instanceId" value="#[flowVars['request2']['instanceId']]" doc:name="Set Instance Id"/>
                        <enricher target="#[flowVars['statusDisableResponse']]" doc:name="Status Disable">
                            <flow-ref name="statusDisableForAnInstance" doc:name="statusDisableForAnInstance"/>
                        </enricher>
                        <set-variable variableName="hookDetailsResponse" value="#[flowVars['tokenResponse']]" doc:name="Set hookDetailsResponse Message"/>
                    </otherwise>
                </choice>

            </when>

            <otherwise>
                <set-variable variableName="instanceId" value="#[flowVars['request2']['instanceId']]" doc:name="Set Instance Id"/>
                <enricher target="#[flowVars['statusDisableResponse']]" doc:name="Status Disable">
                    <flow-ref name="statusDisableForAnInstance" doc:name="statusDisableForAnInstance"/>
                </enricher>
                <set-variable variableName="hookDetailsResponse" value="#[{&quot;message&quot;:&quot;project Id is null status Disable&quot;}]" doc:name="Default Flow"/>

            </otherwise>
        </choice>
        <choice doc:name="Choice">
            <when expression="#[flowVars.hookDetailsResponse.containsKey('data')]">
                <dw:transform-message doc:name="Build Setup Integration Response">
                    <dw:set-payload resource="classpath:dwScripts/buildSetupIntegrationResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="#[500]" doc:name="Set Http Status"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"setUpIntegrationResponse":flowVars['hookDetailsResponse']
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>

    </flow>
    
    <flow name="tearDownIntegrationFlow">
        <logger message="tearDown initial #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    	<dw:transform-message doc:name="Transform Payload to Java">
            <dw:input-payload doc:sample="sample_data\deleteHook.json"/>
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="deleteRequest"/>
        </dw:transform-message>
        <set-variable variableName="integrationId" value="#[flowVars['deleteRequest']['integrationId']]" doc:name="Set Integration Id"/>
        <set-variable variableName="userId" value="#[flowVars['deleteRequest']['userId']]" doc:name="Set User Id"/>
        <enricher target="#[flowVars['tokenResponse']]" doc:name="Message Enricher">
            <flow-ref name="getTokenByChoiceCondition" doc:name="getTokenByChoiceCondition"/>
        </enricher>
        <logger message="get Asana Token in teardown #[flowVars['tokenResponse']]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars['deleteRequest']['configJson']]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="configValue"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[flowVars.tokenResponse.containsKey('tokenFlowToken')]">
                <set-variable variableName="token" value="#[flowVars['tokenResponse']['tokenFlowToken']]" doc:name="Set Asana Token"/>
                <set-variable variableName="webhook_id" value="#[flowVars['configValue']['webhook_id']]" doc:name="Set Webhook Id"/>
                <http:request config-ref="HTTP_Operations_Request_Configuration" path="/webhooks/#[flowVars['webhook_id']]" method="DELETE" doc:name="Call Delete Api">
                    <http:request-builder>
                        <http:header headerName="Authorization" value="Bearer #[flowVars['token']]"/>
                    </http:request-builder>
                </http:request>
                <logger message="Teardown webook API from HTTP #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="deleteHookResponse"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                </dw:transform-message>

            </when>
            <otherwise>
                <set-property propertyName="http.status" value="#[500]" doc:name="Set Http Status"/>
                <dw:transform-message doc:name="Set Failure Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars['tokenResponse']]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Build Tear Down Integration Response">
            <dw:set-payload resource="classpath:dwScripts/buildTearDownIntegrationResponse.dwl"/>
        </dw:transform-message>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
        <catch-exception-strategy when="exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)" doc:name="Catch Exception Strategy" logException="false">
     		<set-property propertyName="http.status" value="#[404]" doc:name="404" />
		   	<set-payload value="{&quot;error&quot;: &quot;webhook: Unknown object.&quot;}" mimeType="application/json" doc:name="errorMessage" />
 		</catch-exception-strategy>
 </choice-exception-strategy>

    </flow>
    <flow name="updateIntegrationFlow">
        <logger message="update Initial #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="updateRequest"/>
        </dw:transform-message>
        <logger message="update payload To java #[flowVars.updateRequest]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Check project Modified">
            <when expression="#[flowVars.updateRequest.repo_modified==true]">
                <set-variable variableName="userId" value="#[flowVars['updateRequest']['userId']]" doc:name="Set User Id"/>
                <set-variable variableName="integrationId" value="#[flowVars['updateRequest']['integrationId']]" doc:name="Set Integration"/>
                <choice doc:name="Check IntegrationId and UserId are null">
                    <when expression="#[flowVars['integrationId'] != null &amp;&amp; flowVars['userId'] != null]">
                        <enricher target="#[flowVars['integrationTokenResponse']]" doc:name="Message Enricher">
                            <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
                        </enricher>
                        <choice doc:name="Check Token Result">
                            <when expression="#[flowVars.integrationTokenResponse.toString() != '{message=No results}']">
                                <choice doc:name="Check Refresh Token Value">
                                    <when expression="#[flowVars['integrationTokenResponse'][0]['refreshToken'] != null]">
                                        <set-variable variableName="refreshToken" value="#[flowVars['integrationTokenResponse'][0]['refreshToken']]" doc:name="Set Refresh Token"/>
                                        <enricher target="#[flowVars['refreshTokenResponse']]" doc:name="Message Enricher">
                                            <flow-ref name="postasanaRefreshTokenFlow" doc:name="postasanaRefreshTokenFlow"/>
                                        </enricher>
                                        <choice doc:name="Check Refresh Token Result">
                                            <when expression="#[flowVars.refreshTokenResponse.toString() != '{error=invalid_grant, error_description=Bad Request}']">
                                                <set-variable variableName="token" value="#[flowVars['refreshTokenResponse']['access_token']]" doc:name="Set Token"/>
                                                <enricher target="#[flowVars['updateIntegrationResponse']]" doc:name="Message Enricher">
                                                    <flow-ref name="updateIntegration" doc:name="updateIntegration"/>
                                                </enricher>
                                                <dw:transform-message doc:name="Transform Message">
                                                    <dw:set-payload resource="classpath:dwScripts/buildUpdateInstanceResponse.dwl"/>
                                                </dw:transform-message>
                                            </when>
                                            <otherwise>
                                                <dw:transform-message doc:name="Transform Message">
                                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Refresh Token Flow Failed In Update"
}]]></dw:set-payload>
                                                </dw:transform-message>
                                            </otherwise>
                                        </choice>
                                    </when>
                                    <otherwise>
                                        <dw:transform-message doc:name="Transform Message">
                                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Refresh Token Empty In Update Flow"
}]]></dw:set-payload>
                                        </dw:transform-message>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise>
                                <dw:transform-message doc:name="Transform Message">
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Token Result Empty In Update Flow"
}]]></dw:set-payload>
                                </dw:transform-message>
                            </otherwise>
                        </choice>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"integrationId or UserId are empty in update Flow"
}]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <when expression="#[flowVars.updateRequest.repo_modified==false]">
                <dw:transform-message doc:name="project_modified==false">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message":"Operation Executed Successfully"
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <logger message="update Default" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="healthCheckFlow">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <enricher target="#[flowVars['settingsResponse']]" doc:name="Message Enricher">
            <flow-ref name="HealthCheckSubFlow" doc:name="HealthCheckSubFlow"/>
        </enricher>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable variableName="healthCheckRequest" resource="classpath:dwScripts/fromPayloadToJava.dwl"></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="userId" value="#[flowVars['healthCheckRequest']['userId']]" doc:name="Set User Id"/>
        <set-variable variableName="integrationId" value="#[flowVars['healthCheckRequest']['integrationId']]" doc:name="Set Integration Id"/>
        <enricher target="#[flowVars['getIntegrationTokenResponse']]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationTokenFlow" doc:name="getIntegrationTokenFlow"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars.getIntegrationTokenResponse.toString() !='{message=No results}']">
                <http:request config-ref="HTTP_Integrations_Runtime_Request_Configuration" path="/integrations/instances" method="GET" doc:name="Get Instance Value">
                    <http:request-builder>
                        <http:query-param paramName="integrationId" value="#[flowVars.integrationId]"/>
                        <http:query-param paramName="userId" value="#[flowVars.userId]"/>
                        <http:query-param paramName="status" value="ACTIVE"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="instanceDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                </dw:transform-message>
                <choice doc:name="Choice">
            <when expression="#[flowVars.instanceDetails.toString() !='{message=No results}']">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars['instanceDetails']['configJson']]]></dw:set-payload>
                </dw:transform-message>
                <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="config"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                </dw:transform-message>
                <dw:transform-message doc:name="Build Health Check Response">
                    <dw:set-payload resource="classpath:dwScripts/buildHealthCheckResponse.dwl"/>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integration_status": "Integration is working fine.",
	"integration_name":"Asana",
	"integration_description":"This is asana integration",
	"integrationId": flowVars['integrationId'],
	"tokenResult" : flowVars['getIntegrationTokenResponse'],
	"instanceDetails" : flowVars['instanceDetails'],
	"userIdAndOrganizationDetails" : flowVars['settingsResponse']
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integration_status": "Integration is working correctly.",
	"integration_name":"Asana",
	"integration_description":"This is asana integration",
	"integrationId": flowVars['integrationId'],
	"tokenResult" : flowVars['getIntegrationTokenResponse']
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>

        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-variable variableName="exception" value="#[exception.message]" doc:name="exception"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"integration_status":"The below integration has some issues!!",
	"integration_name":"Asana",
	"integration_description":"This is asana integration",
	"integrationId": flowVars['integrationId'],
	"exception_from_specific_healthCheck": flowVars['exception']
	
}]]></dw:set-payload>
            </dw:transform-message>
        </catch-exception-strategy>

    </flow>
    <flow name="HealthCheckSubFlow">
        <flow-ref name="postIntegrationSettingsFlow" doc:name="postIntegrationSettingsFlow"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>

    </flow>
    <flow name="postFormatMessageFlow1">
        <logger message="msg frmt start = #[server.dateTime.format('yyyy.MM.dd HH:mm:ss')]" level="INFO" doc:name="Logger"/>
        <logger message="hook Paylaod = #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message To Java">
            <dw:set-variable resource="classpath:dwScripts/fromPayloadToJava.dwl" variableName="request"/>
        </dw:transform-message>
        <set-variable variableName="integrationId" value="#[flowVars['request']['instanceDetails']['integrationId']]" doc:name="Set Integration Id"/>
        <set-variable doc:name="Set User Id" value="#[flowVars['request']['instanceDetails']['userId']]" variableName="userId"/>
        <enricher target="#[flowVars['tokenFlowReference']]" doc:name="Message Enricher">
            <flow-ref name="getTokenByChoiceCondition" doc:name="getTokenByChoiceCondition"/>
        </enricher>
        <choice doc:name="Check Token Exists">
            <when expression="#[flowVars.tokenFlowReference.containsKey('tokenFlowToken') &amp;&amp; flowVars.request.hookResponse.events.size() &gt;=1]">
            
                <set-variable variableName="token" value="#[flowVars['tokenFlowReference']['tokenFlowToken']]" doc:name="Set Token"/>
                <set-variable variableName="messageArray" value="#[new java.util.ArrayList()]" doc:name="Set Array"/>
                <foreach doc:name="For Each" collection="#[flowVars['request']['hookResponse']['events']]">
                    <dw:transform-message doc:name="To Java">
                        <dw:set-variable variableName="inputSingleArray"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                    </dw:transform-message>
                    <choice doc:name="Choice">
                        <when expression="#[flowVars['inputSingleArray']['parent'] != null &amp;&amp; flowVars['inputSingleArray']['type']=='story' &amp;&amp; flowVars['inputSingleArray']['action']=='added']">
                            <http:request config-ref="HTTP_Operations_Request_Configuration" path="/tasks/#[flowVars.inputSingleArray.parent]" method="GET" doc:name="Get Task Details">
                                <http:request-builder>
                                    <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
                                </http:request-builder>
                            </http:request>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:set-variable variableName="taskDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                            </dw:transform-message>
                            <choice doc:name="Check Parent Null">
                                <when expression="#[flowVars['taskDetails']['data']['parent'] == null &amp;&amp; flowVars['taskDetails']['data']['name'] != null]">
                                    <http:request config-ref="HTTP_Operations_Request_Configuration" path="/stories/#[flowVars.inputSingleArray.resource]" method="GET" doc:name="Get Story On Task">
                                        <http:request-builder>
                                            <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
                                        </http:request-builder>
                                    </http:request>
                                    <dw:transform-message doc:name="Transform Message">
                                        <dw:set-variable variableName="storyDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                    </dw:transform-message>
                                    <choice doc:name="Check Contains">
                                <when expression="#[flowVars.storyDetails.data.text.contains('added to') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName task taskName created by '+flowVars['storyDetails']['data']['created_by']['name']+' ']" doc:name="Task Created Message"/>
                                    <set-variable variableName="value" value="created" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('due date') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' '+flowVars['storyDetails']['data']['text']+' for the task taskName']" doc:name="Due Date Message"/>
                                    <set-variable variableName="value" value="duedate" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.type=='comment']">
                                            <expression-component doc:name="Remove Next Line"><![CDATA[flowVars['comt'] = flowVars.storyDetails.data.text.toString().replace('\n','')]]></expression-component>
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName  '+flowVars['storyDetails']['data']['created_by']['name']+' commented &quot;'+flowVars['comt']+'&quot;  on task taskName ']" doc:name="Comment Message"/>
                                    <set-variable variableName="value" value="comment" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('assigned') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <choice doc:name="Check You">
                                        <when expression="#[flowVars.storyDetails.data.text.contains('to you')]">
                                            <set-variable variableName="uName" value="#[flowVars['storyDetails']['data']['created_by']['name']]" doc:name="Get Name"/>
                                            <expression-component doc:name="Replace You"><![CDATA[flowVars['assgn'] = flowVars.storyDetails.data.text.toString().replace('assigned to you',flowVars['uName'])]]></expression-component>
                                            <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' assigned task taskName to '+flowVars['assgn']+' ']" doc:name="Assign To Message"/>
                                        </when>
                                        <otherwise>
                                                    <expression-component doc:name="Remove Fields"><![CDATA[flowVars['assignName'] = flowVars.storyDetails.data.text.toString().replace('assigned to ','')]]></expression-component>
                                            <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' assigned task taskName to '+flowVars['assignName']+' ']" doc:name="Assign Message"/>
                                        </otherwise>
                                    </choice>
                                    <set-variable variableName="value" value="assigned" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('&#9829; this task') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <expression-component doc:name="Remove Heart Symbol"><![CDATA[flowVars['h'] = flowVars.storyDetails.data.text.toString().replace('♥ this task','as favourite')]]></expression-component>
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' marked task taskName '+flowVars['h']+'']" doc:name="Marked Hearted Message"/>
                                    <set-variable variableName="value" value="markfavorite" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('attached') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="attUrl" value="#[flowVars.storyDetails.data.text.toString().split('attached ')[1]]" doc:name="Get Url"/>
                                    <expression-component doc:name="Get Attachment Id"><![CDATA[flowVars['attId'] = flowVars.attUrl.toString().split('asset_id=')[1]]]></expression-component>
                                    <http:request config-ref="HTTP_Operations_Request_Configuration" path="/attachments/#[flowVars['attId']]" method="GET" doc:name="Get Attachment By Id">
                                        <http:request-builder>
                                                    <http:header headerName="Authorization" value="Bearer #[flowVars['token']]"/>

                                        </http:request-builder>
                                    </http:request>
                                    <dw:transform-message doc:name="Transform Message">
                                        <dw:set-variable variableName="attPayload"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                    </dw:transform-message>
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' attached a file **'+flowVars['attPayload']['data']['name']+'** for the task taskName']" doc:name="Attchment Message"/>
                                    <set-variable variableName="value" value="attachment" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('added subtask to task') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="taskName" value="#[flowVars.storyDetails.data.text.toString().split('task ')[1]]" doc:name="Get Task Name"/>
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName  '+flowVars['storyDetails']['data']['created_by']['name']+' added subtask named **'+flowVars['storyDetails']['data']['target']['name']+'** for the task taskName']" doc:name="SubTask Message"/>
                                    <set-variable variableName="value" value="subtask" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('marked this task complete') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName '+flowVars['storyDetails']['data']['created_by']['name']+' marked task taskName as complete']" doc:name="Task Complete Message"/>
                                    <set-variable variableName="value" value="completed" doc:name="Value"/>
                                </when>
                                <when expression="#[flowVars.storyDetails.data.text.contains('marked incomplete') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName  '+flowVars['storyDetails']['data']['created_by']['name']+' marked task taskName incomplete']" doc:name="Task Incomplete"/>
                                    <set-variable variableName="value" value="incomplete" doc:name="Variable"/>
                                </when>
                                        <when expression="#[flowVars.storyDetails.data.text.contains('marked this a duplicate of') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                            <expression-component doc:name="Get task name"><![CDATA[flowVars['tsk'] = flowVars.storyDetails.data.text.split('marked this a duplicate of ')[1]]]></expression-component>
                                            <set-variable variableName="pMsg" value="#['\n \n In fileName  '+flowVars['storyDetails']['data']['created_by']['name']+' marked task taskName duplicate and merged with task **'+flowVars['tsk']+'**']" doc:name="Merged as Duplicate"/>
                                            <set-variable variableName="value" value="markduplicate" doc:name="value"/>
                                        </when>
                                        <when expression="#[flowVars.storyDetails.data.text.contains('duplicated task from') &amp;&amp; flowVars.storyDetails.data.type !='comment']">
                                            <expression-component doc:name="Copy Task Get Task Url"><![CDATA[flowVars['taskUrl'] = flowVars.storyDetails.data.text.split('duplicated task from ')[1]]]></expression-component>
                                            <expression-component doc:name="Get Task Id"><![CDATA[flowVars['taskId1'] = flowVars.taskUrl.toString().split('/')[5]]]></expression-component>
                                            <http:request config-ref="HTTP_Operations_Request_Configuration" path="/tasks/#[flowVars['taskId1']]" method="GET" doc:name="Get Task Details">
                                                <http:request-builder>
                                                    <http:header headerName="Authorization" value="Bearer #[flowVars['token']]"/>

                                                </http:request-builder>
                                            </http:request>
                                            <dw:transform-message doc:name="Transform Message">
                                                <dw:set-variable variableName="copiedTaskDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                                            </dw:transform-message>
                                            <set-variable variableName="copiedTask" value="#['['+flowVars['copiedTaskDetails']['data']['name']+']('+flowVars['taskUrl']+')']" doc:name="Set Task as HyperLink"/>
                                            <set-variable variableName="pMsg" value="#['\n \n In fileName  '+flowVars['storyDetails']['data']['created_by']['name']+' copied task taskName from task copiedTask']" doc:name="Copy Task"/>
                                            <set-variable variableName="value" value="taskcopied" doc:name="Value"/>
                                        </when>
                                <otherwise>
                                    <logger message="Default Condition on story" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                                </when>
                                <otherwise>
                                    <logger level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                            
                            <logger level="INFO" doc:name="Logger" message="value = #[flowVars.value] +++++ #[flowVars.pMsg] "/>
                            
                        </when>
                        <when expression="#[flowVars['inputSingleArray']['parent'] != null &amp;&amp; flowVars['inputSingleArray']['type']=='task' &amp;&amp; flowVars['inputSingleArray']['action']=='added']">
                            <http:request config-ref="HTTP_Operations_Request_Configuration" path="/tasks/#[flowVars.inputSingleArray.resource]" method="GET" doc:name="Get Task Details">
                                <http:request-builder>
                                    <http:header headerName="Authorization" value="Bearer #[flowVars.token]"/>
                                </http:request-builder>
                            </http:request>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:set-variable variableName="taskDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                            </dw:transform-message>
                            <choice doc:name="Choice">
                                <when expression="#[flowVars['taskDetails']['data']['parent'] == null &amp;&amp; flowVars['taskDetails']['data']['name'] != null]">
                                    <set-variable variableName="pMsg" value="#['\n \n In fileName task taskName created by '+flowVars['taskDetails']['data']['followers'][0]['name']+' ']" doc:name="Task Create Message"/>
                                    <set-variable variableName="value" value="created" doc:name="Value"/>
                                </when>
                                <otherwise>
                                    <choice doc:name="Choice">
                                        <when expression="#[flowVars.taskDetails.data.name != null]">
                                            <set-variable variableName="pMsg" value="#['\n \n In fileName subtask named **'+flowVars['taskDetails']['data']['name']+'** for the task taskName created by '+flowVars['taskDetails']['data']['followers'][0]['name']+'']" doc:name="SubTask Message"/>
                                            <set-variable variableName="value" value="subtask" doc:name="Value"/>
                                            <set-variable variableName="taskId" value="#[flowVars['taskDetails']['data']['parent']['id']]" doc:name="Set Task Id"/>
                                        </when>
                                        <otherwise>
                                            <logger message="task name null" level="INFO" doc:name="Logger"/>
                                        </otherwise>
                                    </choice>

                                </otherwise>
                            </choice>
                        </when>
                        <otherwise>
                            <logger message="parent null" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                    
                    <choice doc:name="Loop nitifications and add to array">
                                <when expression="#[flowVars.pMsg != null &amp;&amp; flowVars.pMsg != 'null']">
                                    <dw:transform-message doc:name="Transform Message">
                                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.request.userEvents]]></dw:set-payload>
                            </dw:transform-message>
                            <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:set-variable variableName="ue"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                            </dw:transform-message>
                            <foreach collection="#[flowVars.ue.notifications]" doc:name="For Each">
                                <choice doc:name="Choice">
                                    <when expression="#[payload==flowVars.value &amp;&amp; flowVars.pMsg != null &amp;&amp; flowVars.pMsg != 'null']">
                                        <expression-component doc:name="Add To Array"><![CDATA[messageArray.add(flowVars.pMsg)]]></expression-component>
                                        <set-variable variableName="pMsg" value="null" doc:name="Variable"/>
                                    </when>
                                    <otherwise>
                                        <logger message="in for loop #[payload] condition failed" level="INFO" doc:name="Logger"/>
                                    </otherwise>
                                </choice>
                            </foreach>
                                    
                                </when>
                                <otherwise>
                                    <logger message="Default Choice ==&gt;pmsg = #[flowVars.pMsg] ++++ value = #[flowVars.value]" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>
                </foreach>
                <choice doc:name="Check Task Id">
                        <when expression="#[flowVars.taskId != null]">
                            <http:request config-ref="HTTP_Operations_Request_Configuration" path="/tasks/#[flowVars['taskId']]" method="GET" doc:name="HTTP">
                                <http:request-builder>
                                <http:header headerName="Authorization" value="Bearer #[flowVars['token']]"/>

                                </http:request-builder>
                            </http:request>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:set-variable variableName="taskDetails"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
                            </dw:transform-message>
                        </when>
                        <otherwise>
                            <logger message="taskId Null" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>
                <logger message="After For loop ==&gt;Task  #[flowVars['taskDetails']]+++ Story #[flowVars['storyDetails']] " level="INFO" doc:name="Logger"/>
                <logger message="array = #[flowVars['messageArray']]" level="INFO" doc:name="Logger"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars['messageArray'] != []]">
                        <expression-component doc:name="Remove ','"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace(',','')]]></expression-component>
                        <expression-component doc:name="Remove '['"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace('[','')]]></expression-component>
                        <expression-component doc:name="Remove ']'"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace(']','')]]></expression-component>
                        <set-variable variableName="pName" value="#['['+flowVars['taskDetails']['data']['projects'][0]['name']+'](https://app.asana.com/0/'+flowVars['taskDetails']['data']['projects'][0]['id']+'/list)']," doc:name="Set Project"/>
                        <expression-component doc:name="Replace Project Name"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace('fileName',flowVars.pName)]]></expression-component>
                        <choice doc:name="Choice">
                            <when expression="#[flowVars.taskDetails.data.name.contains('[Duplicate] ')]">
                                <expression-component doc:name="Remove [Duplicate] from task name"><![CDATA[flowVars['tnm'] = flowVars.taskDetails.data.name.replace('[Duplicate] ','')]]></expression-component>
                                <set-variable variableName="taskName" value="#['['+flowVars['tnm']+'](https://app.asana.com/0/'+flowVars['taskDetails']['data']['projects'][0]['id']+'/'+flowVars['taskDetails']['data']['id']+')']" doc:name="Set Task Name"/>
                            </when>
                            <otherwise>
                                <set-variable variableName="taskName" value="#['['+flowVars['taskDetails']['data']['name']+'](https://app.asana.com/0/'+flowVars['taskDetails']['data']['projects'][0]['id']+'/'+flowVars['taskDetails']['data']['id']+')']" doc:name="Set Task Name"/>
                            </otherwise>
                        </choice>
                        <expression-component doc:name="Replace Task Name"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace('taskName',flowVars.taskName)]]></expression-component>
                        <choice doc:name="Choice">
                            <when expression="#[flowVars.copiedTask != null]">
                                <expression-component doc:name="Replace Copied Task"><![CDATA[flowVars['messageArray'] = flowVars.messageArray.toString().replace('copiedTask',flowVars.copiedTask)]]></expression-component>
                            </when>
                            <otherwise>
                                <logger message="copied task null" level="INFO" doc:name="Logger"/>
                            </otherwise>
                        </choice>
                        <set-session-variable variableName="pm" value="#[flowVars['messageArray']]" doc:name="Session Variable"/>
                    </when>
                    <otherwise>
                        <logger message="set project name (null)" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>

                
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"formatMessage":[{
		"markDown":null,
		"text":null,
		"html":null
		}]
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>

        <dw:transform-message doc:name="Build Post Format Message Response">
                    <dw:set-payload resource="classpath:dwScripts/buildPostFormatMessageResponse.dwl"/>
                </dw:transform-message>
                <logger message="msg frmt End = #[server.dateTime.format('yyyy.MM.dd HH:mm:ss')]" level="INFO" doc:name="Logger"/>
        
        <choice-exception-strategy doc:name="Choice Exception Strategy">
        <catch-exception-strategy when="exception.causedBy(org.mule.module.http.internal.request.ResponseValidatorException)" doc:name="Catch 404 Exception" logException="false">
     		<set-property propertyName="http.status" value="#[404]" doc:name="404" />
                <set-variable variableName="pMsg" value="null" doc:name="Variable"/>
 		</catch-exception-strategy>
 </choice-exception-strategy>        
    </flow>
</mule>
