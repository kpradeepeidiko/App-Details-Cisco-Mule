#%RAML 0.8
title: cisco-spark-integration-management
version: 1.0
baseUri: https://${management.mule.env.raml.baseuri}/api/

securitySchemes:
  - oauth_2_0:
      description: |
        This API supports OAuth 2.0 for authenticating all API requests.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
               Used to send a valid OAuth 2 access token. Do not use with the "access_token" query
               string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
               Used to send a valid OAuth 2 access token. Do not use together with the "Authorization"
               header
            type: string
        responses:
          401:
            description: |
              Bad or expired token. This can happen if the user or the API revoked or expired an
              access token. To fix, you should re-authenticate the user.
          403:
            description: |
              Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately,
              re-authenticating the user won't help here.
      settings:
        authorizationUri: https://cisco-spark-auth-provider.cloudhub.io/auth/authorize
        accessTokenUri: https://cisco-spark-auth-provider.cloudhub.io/auth/token
        authorizationGrants: [implicit, password, client_credentials]
        
traits:
  - identifiedResource:
      responses:
        404:
          description: Resource not found.
  - updateOperation:
      responses:
        202:
          description: Accepted
        400:
          description: Bad request.
          
  - sparkTokenRequired:
      queryParameters:
        sparkToken:
          type: string
  
  - userIdRequired:
      queryParameters:
        userId:
          type: string
          
/applications:
  /{applicationId}:
    get:
      description: Get the application details given the application Id.
      is: [identifiedResource]
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      responses:
        200:
          description: Application details.
          body:
            application/json:
              example: !include examples/applications/getApplicationResponseExample.json
 
/integrations:
  get:
    is: []
    #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
    description: Produce a list of all registered integrations.
    responses:
      200:
        description: The list of all enabled integrations.
        body:
          application/json:
            example: !include examples/integrations/getIntegrationsResponseExample.json
            
  /healthCheck:
      get:
        #is: [userIdRequired]
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the integration specific healthcheck status.
        responses:
          200:
            description: Spark integration specific healthCheck.
            body:
              application/json:
                example: !include examples/integrations/getUiSettingsResponseExample.json
  
  /frameworkStatus:
      get:
        #is: [userIdRequired]
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the integration specific healthcheck status.
        responses:
          200:
            description: Spark integration specific healthCheck.
            body:
              application/json:
                example: !include examples/integrations/getMasterEndPointResponseExample.json
  
  /{integrationId}:
    /authDetails:
      post:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Post the auth details.
        is: [updateOperation]
        body:
          application/json:
            example: !include examples/integrations/postIntegrationAuthDetailsRequestExample.json
        responses:
          201:
            description: Created
            body:
              application/json:
                example: !include examples/integrations/postIntegrationAuthDetailsResponseExample.json
                
    /uiSettings:
      get:
        is: [userIdRequired]
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the Spark settings and the integration specific settings.
        responses:
          200:
            description: Spark and integration specific settings.
            body:
              application/json:
                example: !include examples/integrations/getUiSettingsResponseExample.json
      post:
        is: [userIdRequired]
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the Spark settings and the integration specific settings.
        body:
          application/json:
            example: !include examples/integrations/postUiSettingsRequestExample.json
        responses:
          200:
            description: Spark and integration specific settings.
            body:
              application/json:
                  example: !include examples/integrations/postUiSettingsResponseExample.json          
                
    /getSparkRooms:
      get:
        is: [userIdRequired]
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the Spark rooms .
        responses:
          200:
            description: Spark user specific rooms.
            body:
              application/json:
                example: !include examples/integrations/getSparkUserRooms.json
                
    /appTokens:
      get:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the Integration Token using integrationId and userId.
        queryParameters:
          userId:            
            type: string
        responses:
          200:
            description: Getting Integration Specific Token.
            body:
              application/json:
                example: !include examples/integrations/tokens/getIntegrationTokenResponse.json
      
      post:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Creates or Updates the integration app token.
        is: [updateOperation, userIdRequired]
        body:
          application/json:
            example: !include examples/integrations/tokens/postIntegrationTokenRequestExample.json
        responses:
          201:
            description: Created
            body:
              application/json:
                example: !include examples/integrations/tokens/postIntegrationTokenResponseExample.json
      
      delete:
          #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
          description: Deletes the integration token
          is: [userIdRequired]
          responses:
            200:
              description: Integration has been deleted.
              body:
                application/json:
                  example: !include examples/integrations/tokens/deleteIntegrationTokenResponse.json
      /{appTokenId}:
        delete:
          #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
          description: Deletes the integration token
          responses:
            200:
              description: Integration Token has been deleted.
    get:
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      description: Get all the details of a specific integration.
      responses:
        200:
          body:
            application/json:
              example: !include examples/integrations/getIntegrationResponseExample.json
              
  /htmlContent:
      get:
        is: []
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the HTML content of the related page based on the action and the integration id
        queryParameters:
          action:            
            enum: ["CONNECT", "DISCONNECT", "LIST"]
          integrationId:            
            type: string
        responses:
          200:
            description: The HTML content of the specific page.
            body:
              text/html:
                example: !include examples/integrations/getHtmlContentResponseExample.html
                
  /staticContent:
      get:
        is: []
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Returns the Static content of the related page based on the action and the integration id
        responses:
          200:
            description: The Static content of the specific page.
            body:
              text/html:
                example: !include examples/integrations/getHtmlContentResponseExample.html

  /instances:
    post:
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      description: Start a new integration.
      is: [updateOperation, userIdRequired]
      body:
        application/json:
          example: !include examples/integrations/instances/postIntegrationInstanceRequestExample.json
      responses:
        201:
          description: Created
          body:
            application/json:
              example: !include examples/integrations/instances/postIntegrationInstanceResponseExample.json
    get:
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      description: Get all integartions instances.
      is: [userIdRequired]
      queryParameters:
          integrationId:
            type: string
      responses:
        200:
          body:
            application/json:
              example: !include examples/integrations/instances/getIntegrationInstancesResponseExample.json
    delete:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Stop all the integration instances
        is: [userIdRequired]
        queryParameters:
          integrationId:
            type: string
          messageToSpark:
            type: string
        responses:
          200:
            description: Integration ID has been deleted.
              
    /{instanceId}:
      get:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Get the details of a specific integration instance.
        queryParameters:
          userId:
            type: string
          integrationId:
            type: string
        responses:
          200:
            body:
              application/json:
                example: !include examples/integrations/instances/getIntegrationInstanceResponseExample.json
      put:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Update the given integration instance.
        is: [updateOperation, identifiedResource]
        body:
          application/json:
            example: !include examples/integrations/instances/putIntegrationInstanceRequestExample.json
        responses:
          202:
            description: Accepted
            body:
              application/json:
                example: !include examples/integrations/instances/putIntegrationInstanceResponseExample.json
      delete:
        #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
        description: Stop the integration instance
        queryParameters:
          messageToSpark:
            type: string
        responses:
          200:
            description: Integration ID has been deleted.

/clients:
  /appSettings:
   get:
     description: List all the client applications settings.
     is: [identifiedResource]
     responses:
       200:
         description: List of all applications.
         body:
           application/json:
             example: !include examples/clients/getClientApplicationsResponseExample.json
   /{integrationId}:
       get:
         description: Get the all client application details given the integration Id.
         is: [identifiedResource]
         responses:
            200:
              description: Client App Settings details.
              body:
                application/json:
                  example: !include examples/clients/getClientApplicationResponseExample.json       
  /tokens:
    get:
      description: Get the Spark token details.
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      is: [identifiedResource]
      responses:
        200:
          description: Spark token details.
          body:
            application/json:
              example: !include examples/clients/getClientTokenResponseExample.json
              
    post:
      description: Creates or updates the Spark token.
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      is: [updateOperation]
      body:
        application/json:
          example: !include examples/clients/postClientTokenRequestExample.json
      responses:
        201:
          description: Created
          body:
            application/json:
              example: !include examples/clients/postClientTokenResponseExample.json
    delete:
          #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
          description: Deletes the client tokens
          queryParameters:
            integrationId:
              type: string
            userId:
              type: string
          responses:
            200:
              description: Client has been deleted.
              body:
                application/json:
                  example: !include examples/clients/deleteClientTokensResponse.json
              
/hooks:
  get:
      description: Integration hook flow for Evernote.
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      is: [identifiedResource]
      responses:
        200:
          description: Hooks Details.
  /{instanceUuid}:
    get:
      description: Integrations InstanceUuid.
      #securedBy: [oauth_2_0: { scopes: [ DEMO ] }]
      is: [identifiedResource]
      responses:
        200:
          description: Hooks Details.
    post:
      description: Method to be invoked from specific integrations, formats the message and sends the notification to Spark.
      queryParameters:
        instanceUuid:
          type: string
      body:
        application/json:
        application/x-www-form-urlencoded:
      responses:
        200:
          description: Hook Message Posted To Spark Room
          
    head:
      description: Method to be invoked from specific integrations, to send webhook status code.
      responses:
        200:
          description: Webhook domain tested successfully
          

  