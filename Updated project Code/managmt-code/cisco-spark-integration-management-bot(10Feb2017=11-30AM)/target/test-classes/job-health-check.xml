<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:request-config name="HTTP_Request_Management_Health_Check" protocol="HTTPS" host="${management.health.check.uri}" port="${management.health.check.port}" basePath="${management.health.check.path}" doc:name="HTTP Request Configuration" connectionIdleTimeout="3000000" responseTimeout="3000000"/>
    
    
       
    <flow name="getIntegrationHealthCheckFlow">
        <logger message="STARTING HEALTH CHECK" level="INFO" doc:name="Logger" category="#[flowVars.maap] MAAAAAAAAAAAAAAAAAAAPPPPPPPPP"/>
        <set-variable variableName="userId" value="${healthcheck.user.id}" doc:name="Set UserId"/>
        <set-variable variableName="status" value="#['ONLINE']" doc:name="Set Status"/>
        <enricher target="#[flowVars['integrations']]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationsFlow" doc:name="getIntegrationsFlow"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars['integrations'] != []]">
                <set-variable variableName="arrayList" value="#[new java.util.ArrayList()]" doc:name="Initialize ArrayList"/>

                <foreach collection="#[flowVars.integrations]" doc:name="For Each">
            <set-variable variableName="integrationId" value="#[payload['integrationId']]" doc:name="Set integrationId"/>

                    <set-variable variableName="integrationName" value="#[payload['integrationName']]" doc:name="Set Integration Name"/>
                    <set-variable variableName="description" value="#[payload['description']]" doc:name="Set Integration Description"/>
                    <choice doc:name="integration Id not null">
                        <when expression="#[flowVars['integrationId'] != null]">
                            <set-variable variableName="action" value="#['CONNECT']" doc:name="Set Action"/>
                            <enricher target="#[flowVars['getIntegrationHtmlContentFlowResult']]" doc:name="Message Enricher">
                                <flow-ref name="getIntegrationHtmlContentFlow" doc:name="getIntegrationHtmlContentFlow"/>
                            </enricher>

                            <enricher target="#[flowVars['clinetTokensResult']]" doc:name="Message Enricher">
            <flow-ref name="getClientTokenFlow" doc:name="getClientTokenFlow"/>
        </enricher>
                            <choice doc:name="Choice">
                                <when expression="#[flowVars['clinetTokensResult'].toString() != '{message=No results}']">
                                    <set-variable variableName="sparkToken" value="#[flowVars['clinetTokensResult'][0]['accessToken']]" doc:name="Set Spark Token"/>
                                    <set-variable variableName="max" value="3000" doc:name="Set Max length"/>
                                    <enricher target="#[flowVars.getSparkRoomsResult]" doc:name="Message Enricher">
                                        <flow-ref name="getSparkRoomsFlow" doc:name="getSparkRoomsFlow"/>
                                    </enricher>
                                </when>
                                <otherwise>
                                    <logger message="TOKENNNNNNNNNNNNNN NO SPARK TOKEN" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>

                            <enricher target="#[flowVars['integrationSettings']]" doc:name="Message Enricher">
                                <flow-ref name="getIntegrationSettingsFlow" doc:name="getIntegrationSettingsFlow"/>
                            </enricher>

                            <enricher target="#[flowVars['dynamicSettings']]" doc:name="Message Enricher">
                                <flow-ref name="getDynamicIntegrationHealthCheckFlow" doc:name="getDynamicIntegrationHealthCheckFlow"/>
                            </enricher>

                            <expression-component doc:name="Expression"><![CDATA[arrayList.add(flowVars['dynamicSettings']);]]></expression-component>
                        </when>
                        <otherwise>
                            <logger message="integration Id Null in HCheck" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>

        </foreach>

        
        <dw:transform-message doc:name="Build Get UI Settings Response">
            <dw:set-payload resource="classpath:dwScripts/buildGetHealthCkeckResponse.dwl"/>

        </dw:transform-message>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" message="HCheck get integrations null"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-variable variableName="exception" value="#[exception.message]" doc:name="Set Exception Description"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{"healthCheckResponse":
[{
"integration_status":"Integration has some issues",
"integration_name":flowVars['integrationName'],
"integration_description":flowVars['description'],
"integrationId": flowVars['integrationId'],
"exception": flowVars['exception']

}]
}]]></dw:set-payload>
            </dw:transform-message>
        </catch-exception-strategy>


        
    </flow>
    
    <flow name="getDynamicIntegrationHealthCheckFlow">
        <set-variable variableName="dynamicHost" value="#[flowVars['integrationSettings']['host']]" doc:name="Set Dynamic Host"/>
        
        <set-variable variableName="dynamicBasePath" value="#[flowVars['integrationSettings']['basePath']]" doc:name="Set Dynamic Base Path"/>
        
        <set-variable variableName="dynamicPort" value="#[flowVars['integrationSettings']['port']]" doc:name="Set Dynamic Port"/>

        
        <dw:transform-message doc:name="Build Post Specific Integration Settings Request">
            <dw:set-payload resource="classpath:dwScripts/buildPostSpecificIntegrationSettingsRequest.dwl"/>
        </dw:transform-message>
        <logger message="BEFORE DYNAMIC INTEGRATION #[payload] and #[flowVars['dynamicBasePath']] DBP #[flowVars['dynamicHost']] HOST #[flowVars['dynamicPort']]" level="INFO" doc:name="Logger"/>
        
        <http:request config-ref="HTTP_Dynamic_Request_Configuration" path="/healthCheck" method="POST" doc:name="HTTP Request to Specific Integration Settings">
            <http:request-builder>
                <http:query-param paramName="client_id" value="${integrations.management.client.id}"/>
                <http:query-param paramName="client_secret" value="${integrations.management.client.secret}"/>
                <http:header headerName="Content-Type" value="application/json"/>



            </http:request-builder>
        </http:request>
        
         <dw:transform-message doc:name="Transform Response to Java">
            <dw:set-payload resource="classpath:dwScripts/fromPayloadToJava.dwl"/>

        </dw:transform-message>
    </flow>
    <flow name="pollHealthCheckFlow">
        <vm:inbound-endpoint exchange-pattern="request-response" path="healthCheck" connector-ref="VM" doc:name="VM"/>
        <logger message="Started Calling Health check.........:: #[server.dateTime]" level="INFO" doc:name="Logger"/>

        <enricher target="#[flowVars.healthCheckResult]" doc:name="Message Enricher">
            <http:request config-ref="HTTP_Request_Management_Health_Check" path="/integrations/healthCheck" method="GET" doc:name="Get Management Health Check">
                <http:request-builder>
                    <http:header headerName="Authorization" value="Basic YzZlOTRiNjM4Mzk2NGEwZDlkMGE4ODJmM2ZmOGVlMGI6ODcxZmQyNzhlMTY1NGJmNUExQzY2RjA0NkFDMzkwRDI="/>

                </http:request-builder>
            </http:request>

        </enricher>
        <logger  level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars['healthCheckResult']]]></dw:set-payload>
        </dw:transform-message>
        <set-variable variableName="userId" value="${healthcheck.user.id}" doc:name="Set UserId from property file"/>
        <logger message="Health Check Response #[payload] ++++++++#[message.payloadAs(java.lang.String)] " level="INFO" doc:name="Logger"/>
        <foreach collection="#[payload['healthCheckResponse']]" doc:name="For Each">
            <set-variable variableName="exception" value="#[payload.exception]" doc:name="Set Exception Value if exist"/>
            <set-variable variableName="integrationId" value="#[payload.integrationId]" doc:name="Set Integration Id"/>
            <enricher target="#[flowVars['clientResponse']]" doc:name="Message Enricher">
                <flow-ref name="getClientTokenFlow" doc:name="getClientTokenFlow"/>
            </enricher>

            <choice doc:name="Choice">
                <when expression="#[flowVars['clientResponse'].toString() != '{message=No results}']">
                    <set-variable variableName="sparkToken" value="#[flowVars['clientResponse'][0]['accessToken']]" doc:name="Set Spark Token"/>
                    <logger message="SPARK TOKEN FROM GET CLIENT TOKENS #[flowVars.sparkToken]" level="INFO" doc:name="Logger"/>
                    <choice doc:name="Choice">
                        <when expression="#[flowVars.exception != empty]">
                            <logger message="EXCEPTION IN HC" level="INFO" doc:name="Exception"/>
                            <set-variable variableName="messageToSpark" value="#['**The below integration has some issue** \n * ``Integration id:``'+payload['integrationId']+'  \n * ``Integration name:`` '+payload['integration_name']+' \n * ``Exception:`` '+payload['exception']+'']" doc:name="Set Exception Message to Spark"/>
                            <set-variable variableName="roomId" value="#['Y2lzY29zcGFyazovL3VzL1JPT00vNGZhNGY2YjAtYjJkOC0xMWU2LTg3ZmQtOWQyN2MzYTcyN2Zj']" doc:name="Set spark roomId"/>
                        </when>
                        <otherwise>
                            <logger message="NO EXCEPTION IN HC" level="INFO" doc:name="Success"/>
                            <set-variable variableName="messageToSpark" value="#['**The below integration is working fine** \n * ``Integration id:``'+payload['integrationId']+'  \n * ``Integration name:`` '+payload['integration_name']+' \n * ``Exception:`` None']" doc:name="Set Success Message to Spark"/>
                            <set-variable variableName="roomId" value="#['Y2lzY29zcGFyazovL3VzL1JPT00vMzlmNDdiZjAtYjJkOS0xMWU2LTg2NDctOGQzNWExNDk1YWNj']" doc:name="Set spark roomId"/>
                        </otherwise>
                    </choice>

                    <flow-ref name="postSparkMessageFlow" doc:name="postSparkMessageFlow"/>
                </when>
                <otherwise>
                    <logger level="INFO" doc:name="Logger" message="No token found :: Spark Access Token after get client token flow #[flowVars['clientResponse']] for #[payload.integration_name]"/>
                </otherwise>
            </choice>

        </foreach>
    </flow>
    
    
    <flow name="masterEndPointFlow">

        <set-variable variableName="userId" value="${healthcheck.user.id}" doc:name="Set UserId"/>
        <set-variable variableName="status" value="#['ONLINE']" doc:name="Set Status"/>
        <enricher target="#[flowVars['integrations']]" doc:name="Message Enricher">
            <flow-ref name="getIntegrationsFlow" doc:name="getIntegrationsFlow"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars['integrations'] != []]">


                
            <set-variable variableName="integrationId" value="#[flowVars['integrations'][0]['integrationId']]" doc:name="Set integrationId"/>

                    <set-variable variableName="integrationName" value="#[flowVars['integrations'][0]['integrationName']]" doc:name="Set Integration Name"/>
                    <set-variable variableName="description" value="#[flowVars['integrations'][0]['description']]" doc:name="Set Integration Description"/>
                    <choice doc:name="integration Id not null">
                        <when expression="#[flowVars['integrationId'] != null]">
                            <set-variable variableName="action" value="#['CONNECT']" doc:name="Set Action"/>
                        <enricher target="#[flowVars['getIntegrationHtmlContentFlowResult']]" doc:name="Message Enricher">
                            <flow-ref name="getIntegrationHtmlContentFlow" doc:name="getIntegrationHtmlContentFlow"/>
                        </enricher>


                            <enricher target="#[flowVars['clinetTokensResult']]" doc:name="Message Enricher">
            <flow-ref name="getClientTokenFlow" doc:name="getClientTokenFlow"/>
        </enricher>
                            <choice doc:name="Choice">
                                <when expression="#[flowVars['clinetTokensResult'].toString() != '{message=No results}']">
                                    <set-variable variableName="sparkToken" value="#[flowVars['clinetTokensResult'][0]['accessToken']]" doc:name="Set Spark Token"/>
                                    <set-variable variableName="max" value="3000" doc:name="Set Max length"/>
                                    
                                    <enricher target="#[flowVars.getSparkRoomsResult]" doc:name="Message Enricher">
                                        <flow-ref name="getSparkRoomsFlow" doc:name="getSparkRoomsFlow"/>
                                    </enricher>

                                </when>
                                <otherwise>
                                    <logger message="TOKENNNNNNNNNNNNNN NO SPARK TOKEN" level="INFO" doc:name="Logger"/>
                                </otherwise>
                            </choice>

                        </when>
                        <otherwise>
                            <logger message="integration Id Null in HCheck" level="INFO" doc:name="Logger"/>
                        </otherwise>
                    </choice>

        

        
        <dw:transform-message doc:name="Build Get UI Settings Response">
                    <dw:set-payload resource="classpath:dwScripts/buildGetMasterEndPointResponse.dwl"/>


        </dw:transform-message>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger" message="HCheck get integrations null"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-variable variableName="exception" value="#[exception.message]" doc:name="Set Exception Description"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
"status":"Non-Operational"
}]]></dw:set-payload>
            </dw:transform-message>
        </catch-exception-strategy>


        
    </flow>

    
</mule>
