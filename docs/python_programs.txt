Imp Python Doc : https://www.programiz.com/python-programming

Swapping techniques : https://www.programiz.com/python-programming/examples/swap-variables

==================================================================================
Display a Calendar
---------------------
#!/usr/bin/python

import calendar

yy = 2017
mm = 11

print(calendar.month(yy, mm))


Output:
--------

   November 2017
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30




==================================================================================
Addition Of Two Numbers
--------------------------
#!/usr/bin/python

a, b = 10, 12
c = a + b
print ("Addition of {0} and {1} is {2}".format(a, b, c)) (OR) print "Addition of %d and %d is %d" % (a, b, c)


Output : 
------------
Addition of 10 and 12 is 22
========================================================================================

Power Of a Number
-------------------
#!/usr/bin/python


base, power = 4, 3
p = 1
for i in range(0, power):
    p = p * base
    
print "Power = %d" % p


Output:
------------
Power = 64



With Lambda Expression
-------------------------
power = lambda x,y: x ** y

print "Power = %d" % power(2,3)

Output:
---------
Power = 8

===================================================================================================
Reverse of a number
--------------------
#!/usr/bin/python

# Function definition is here
def reverseOfaNumber( num ):
    rev = 0
    print "given number : ", num
    while ( num != 0 ):
        rev = rev * 10
        rev = rev + num % 10
        num = num / 10
    print "rev of a number : %d" % rev
    return;
    
reverseOfaNumber(357)


output :
--------

given number :  357
rev of a number : 753

====================================================================================================
Factorial of a Number
----------------------
#!/usr/bin/python

# Function definition is here
def Factorial( num ):
    print "Given number is : ", num
    if ( num == 1 ) :
        print "And it's factorial is : ", num
    else :
        f = 1
        for i in range(1,num + 1) :
            f = f * i
        print "And it's factorial is : %s" % f
    
Factorial(5)



Output :
----------
Given number is :  5
And it's factorial is : 120

(OR)


using Recursion
----------------
#!/usr/bin/python

def Fact(num):
    if num == 1:
        return 1
        
    else:
        return (num * Fact(num - 1))
        
num = 2
print("the factorial of {0} is {1}".format(num, Fact(num))) 

Output:
-------
the factorial of 5 is 120

=====================================================================================================
Prime Numbers Between
-----------------------
#!/usr/bin/python

# Function definition is here
def primeNumbersBetween( l, h ):
    for num in range(l, h + 1):
        if (num > 1) :
            for i in range(2,num) :
                if (num % i ) == 0 :
                    break
            else : print num
        
    
primeNumbersBetween(1, 20)

Output :
-----------
2 3 5 7 11 13 17 19

=======================================================================================================
Power of a number
-------------------
#!/usr/bin/python

def power(n, m):
    p = 1
    for i in range(0,m):
        p = p * n
    print "Power = %d" % p
    
    
power(2, 3)


Output:
--------
Power = 8

========================================================================================================
Armstrong Number
-------------------
#!/usr/bin/python

def armstrongNumber(num):
    r = 0
    f = num
    while (num > 0):
        d = num % 10
        r = r + d * d * d
        num = num / 10
        
    if (r == f):
        print "Armstrong Number"
    else:
        print "Not Armstrong Number"
     
     
armstrongNumber(158)



Output:
----------
Not Armstrong Number


=====================================================================================================
GCD of Two Numbers
---------------------
#!/usr/bin/python

# Function definition is here
def gcd( n1, n2 ):
    while ( n1 != n2 ) :
        if (n1 > n2 ) :
            n1 = n1 - n2
        else :
            n2 = n2 - n1
    print "Gcd  : %d" % n1
        
    
gcd(81, 9)


Output :
---------
Gcd  : 9
=====================================================================================================
Constructor(__init__) Example
-------------------------------
1) class MyClass:
		i = 123
		def __init__(self):
			self.i = 354
		
	a = MyClass()
	print("Inside Constructor :  {0}".format(a.i))
	print("Inside Class : {0}".format(MyClass.i))


	Output:
	--------
	Inside Constructor :  354
	Inside Class : 123

	
2) class A:
	def __init__(self):
		self.str = "Hello"
		
	def myMethod(self,name):
		print(self.str + " " + name + "!")
		
	a = A()
	a.myMethod('pradeep')
	
	Output:
	----------
	Hello pradeep!


3) 	class Employee:
		empCount = 0
		def __init__(self, name, salary):
			self.name = name
			self.salary = salary
			Employee.empCount += 1
		
		def displayCount(self):
			print "Total Employee Count = %d" % Employee.empCount

		def displayEmployee(self):
			print "Name = ", self.name, ", Salary = ", self.salary

	e = Employee('pradeep',25445)
	e1 = Employee('asha',31445)
	e.displayCount()
	e.displayEmployee()
	e1.displayEmployee()
	
	OutPut:
	---------
	Total Employee Count = 2
	Name =  pradeep , Salary =  25445
	Name =  asha , Salary =  31445

		
	
	
================================================================================================
Fibonacci series with recursion
----------------------------------
#!/usr/bin/python

def recur_fibo(n):
   """Recursive function to
   print Fibonacci sequence"""
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))

nterms = 10


if nterms <= 0:
   print("Plese enter a positive integer")
else:
   print("Fibonacci sequence:")
   for i in range(nterms):
       print(recur_fibo(i))
	   
	   
Output:
-------
Fibonacci sequence:
0
1
1
2
3
5
8
13
21
34
===============================================================================================
Lambda Exmples
-----------------
a = lambda x, y: x + y
print(a(10, 20))

Output:
-------
30



lambda expression with filter()
----------------------------------
in_list = [1,2,5,8,4,6,9,7,1]

my_new_list = list(filter(lambda x: (x % 2 == 0), in_list))

print(my_new_list)

Output:
--------
[2, 8, 4, 6]


lambda expression with map()
-------------------------------
my_list = [1, 5, 4, 6, 8, 11, 3, 12]

new_list = list(map(lambda x: x * 2 , my_list))

print(new_list)

Output:
-------
[2, 10, 8, 12, 16, 22, 6, 24]

=============================================================================================
Year is Lesp year or not
----------------------------
#!/usr/bin/python

year = 2017

# To get year (integer input) from the user
# year = int(input("Enter a year: "))

if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print("{0} is a leap year".format(year))
       else:
           print("{0} is not a leap year".format(year))
   else:
       print("{0} is a leap year".format(year))
else:
   print("{0} is not a leap year".format(year))
   
   
Output:
-----------
2017 is not a leap year
 
 
===============================================================================================